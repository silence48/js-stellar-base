{"version":3,"file":"stellar-base.js","mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,gBAAgB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;;AAEA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;;AAEA,cAAc;AACd;AACA;;AAEA;AACA,eAAe;AACf,eAAe;AACf,eAAe;AACf,iBAAiB;AACjB,eAAe;AACf,iBAAiB;;;;;;;;;;;;ACvTL;;AAEZ,kBAAkB;AAClB,mBAAmB;AACnB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,UAAU;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACrJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,eAAe,mBAAO,CAAC,oDAAW;AAClC,gBAAgB,mBAAO,CAAC,gDAAS;AACjC;AACA;AACA;AACA;;AAEA,cAAc;AACd,kBAAkB;AAClB,yBAAyB;;AAEzB;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yBAAyB,QAAQ;AACjC;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,qBAAqB,WAAW,GAAG,IAAI;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,gBAAgB,WAAW,GAAG,IAAI,KAAK,aAAa;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;;AAEA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,KAAK,mDAAmD,cAAc;AACzF,GAAG;AACH;AACA;AACA,+BAA+B,IAAI;AACnC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM,aAAa,SAAS;AACtD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB,cAAc,oBAAoB,EAAE,IAAI;AACxC;AACA,YAAY,gBAAgB,EAAE,IAAI;AAClC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG,SAAS,GAAG,KAAK,qBAAqB,EAAE,EAAE;AACpE,QAAQ;AACR,yBAAyB,GAAG,KAAK,yBAAyB,EAAE,EAAE;AAC9D,mBAAmB,yBAAyB,EAAE,EAAE;AAChD;AACA,MAAM;AACN,oBAAoB,IAAI,EAAE,GAAG,SAAS,IAAI,EAAE,EAAE;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C,cAAc,SAAS,OAAO;AACxE;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAC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a;;AAEpC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC1BA,WAAW,mBAAO,CAAC,+CAAS;;AAE5B;AACA;;AAEA;;;;;;;;;;;ACLA,WAAW,mBAAO,CAAC,+CAAS;;AAE5B;AACA;;AAEA;;;;;;;;;;;ACLA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,WAAW,mBAAO,CAAC,+CAAS;;AAE5B;AACA;;AAEA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACxBA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,kBAAkB,mBAAO,CAAC,2DAAe;AACzC,cAAc,mBAAO,CAAC,mDAAW;AACjC,eAAe,mBAAO,CAAC,qDAAY;AACnC,cAAc,mBAAO,CAAC,qDAAY;AAClC,mBAAmB,mBAAO,CAAC,6DAAgB;;AAE3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA,W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Aa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;;;;ACrKA,eAAe,mBAAO,CAAC,qDAAY;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;AC7BA,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,qBAAqB,mBAAO,CAAC,mEAAmB;;AAEhD;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,aAAa,cAAc;AAC3B;AACA;;AAEA;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACvBA,oBAAoB,mBAAO,CAAC,iEAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,QAAQ;AACrB;AACA;;AAEA;;;;;;;;;;;ACfA,cAAc,mBAAO,CAAC,qDAAY;AAClC,WAAW,mBAAO,CAAC,6CAAQ;;AAE3B;AACA;AACA;AACA;AACA,WAAW,QAAQ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AW,UAAU;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACXA,iBAAiB,mBAAO,CAAC,yDAAc;AACvC,eAAe,mBAAO,CAAC,uDAAa;AACpC,eAAe,mBAAO,CAAC,qDAAY;AACnC,eAAe,mBAAO,CAAC,uDAAa;;AAEpC;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC9CA,aAAa,mBAAO,CAAC,mDAAW;AAChC,mBAAmB,mBAAO,CAAC,6DAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACjBA,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,eAAe,mBAAO,CAAC,qDAAY;AACnC,mBAAmB,mBAAO,CAAC,6DAAgB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA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AC,yDAAc;;AAEtC;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,IAAI;AACJ,CAAC;;AAED;;;;;;;;;;;ACVA,eAAe,mBAAO,CAAC,uDAAa;AACpC,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,eAAe,mBAAO,CAAC,uDAAa;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACnFA,aAAa,mBAAO,CAAC,mDAAW;AAChC,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,SAAS,mBAAO,CAAC,yCAAM;AACvB,kBAAkB,mBAAO,CAAC,6DAAgB;AAC1C,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,iBAAiB,mBAAO,CAAC,2DAAe;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC/GA,iBAAiB,mBAAO,CAAC,2DAAe;;AAExC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACzFA;AACA,wBAAwB,qBAAM,gBAAgB,qBAAM,IAAI,qBAAM,sBAAsB,qBAAM;;AAE1F;;;;;;;;;;;ACHA,qBAAqB,mBAAO,CAAC,mEAAmB;AAChD,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,WAAW,mBAAO,CAAC,6CAAQ;;AAE3B;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACfA,qBAAqB,mBAAO,CAAC,mEAAmB;AAChD,mBAAmB,mBAAO,CAAC,+DAAiB;AAC5C,aAAa,mBAAO,CAAC,iDAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AChBA,gBAAgB,mBAAO,CAAC,yDAAc;;AAEtC;AACA;AA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;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC5EA,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,mBAAmB,mBAAO,CAAC,+DAAiB;AAC5C,kBAAkB,mBAAO,CAAC,6DAAgB;;AAE1C;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACjBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACxBA,cAAc,mBAAO,CAAC,mDAAW;AACjC,eAAe,mBAAO,CAAC,qDAAY;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACdA,iBAAiB,mBAAO,CAAC,2DAAe;;AAExC;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACnBA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACjBA,eAAe,mBAAO,CAAC,qDAAY;;AAEnC;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACdA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;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACvCA,gBAAgB,mBAAO,CAAC,yDAAc;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA;AACA,oBAAoB,QAAQ,IAAI,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,kBAAkB;AAClB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACpCA,cAAc,mBAAO,CAAC,qDAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA,kBAAkB,QAAQ,OAAO,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AChCA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,cAAc,mBAAO,CAAC,qDAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;AACA;AACA,2BAA2B,gBAAgB,QAAQ,GAAG;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACpBA,sBAAsB,mBAAO,CAAC,qEAAoB;AAClD,mBAAmB,mBAAO,CAAC,6DAAgB;;AAE3C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA;AACA;AACA;AACA,+CAA+C,mBAAmB;AAClE;AACA;AACA;;AAEA;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACzBA,iBAAiB,mBAAO,CAAC,yDAAc;AACvC,eAAe,mBAAO,CAAC,qDAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AChCA,WAAW,mBAAO,CAAC,+CAAS;AAC5B,gBAAgB,mBAAO,CAAC,uDAAa;;AAErC;AACA,kBAAkB,KAA0B;;AAE5C;AACA,gCAAgC,QAAa;;AAE7C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrCA,WAAW,mBAAO,CAAC,+CAAS;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACnCA,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,eAAe,mBAAO,CAAC,qDAAY;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACpCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AClCA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,eAAe,mBAAO,CAAC,uDAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrBA,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,mBAAmB,mBAAO,CAAC,6DAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC5BA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,eAAe,mBAAO,CAAC,uDAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC1BA,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,cAAc,mBAAO,CAAC,mDAAW;AACjC,mBAAmB,mBAAO,CAAC,6DAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC7BA,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,mBAAmB,mBAAO,CAAC,6DAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC5BA,uBAAuB,mBAAO,CAAC,uEAAqB;AACpD,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,eAAe,mBAAO,CAAC,uDAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrBA,oBAAoB,mBAAO,CAAC,iEAAkB;AAC9C,eAAe,mBAAO,CAAC,uDAAa;AACpC,kBAAkB,mBAAO,CAAC,2DAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACpCA,oBAAoB,mBAAO,CAAC,iEAAkB;AAC9C,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,kBAAkB,mBAAO,CAAC,2DAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC/BA,eAAe,mBAAO,CAAC,uDAAa;AACpC,mBAAmB,mBAAO,CAAC,+DAAiB;AAC5C,cAAc,mBAAO,CAAC,qDAAY;AAClC,cAAc,mBAAO,CAAC,mDAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA,OAAO,kBAAkB;AACzB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACpDA,eAAe,mBAAO,CAAC,uDAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA,kBAAkB;AAClB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACxEA,oBAAoB,mBAAO,CAAC,iEAAkB;AAC9C,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,gBAAgB,mBAAO,CAAC,uDAAa;AACrC,eAAe,mBAAO,CAAC,qDAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACtCA,mBAAmB,mBAAO,CAAC,+DAAiB;AAC5C,uBAAuB,mBAAO,CAAC,uEAAqB;AACpD,YAAY,mBAAO,CAAC,iDAAU;AAC9B,YAAY,mBAAO,CAAC,iDAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,UAAU;AACvB;AACA;AACA;AACA,OAAO,OAAO,UAAU;AACxB,OAAO,OAAO;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACjBA,eAAe,mBAAO,CAAC,qDAAY;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACzCA,eAAe,mBAAO,CAAC,qDAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACnCA,eAAe,mBAAO,CAAC,uDAAa;AACpC,eAAe,mBAAO,CAAC,qDAAY;AACnC,eAAe,mBAAO,CAAC,qDAAY;;AAEnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC/DA,mBAAmB,mBAAO,CAAC,+DAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC3BA,mBAAmB,mBAAO,CAAC,+DAAiB;AAC5C,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,oBAAoB,mBAAO,CAAC,iEAAkB;AAC9C,oBAAoB,mBAAO,CAAC,iEAAkB;AAC9C,eAAe,mBAAO,CAAC,qDAAY;AACnC,sBAAsB,mBAAO,CAAC,qEAAoB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACxCA;AACA;AACA,aAAa,mBAAO,CAAC,8CAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE,cAAc;AAChB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChEA,aAAa,sFAA6B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,gBAAgB;AACvC;AACA;;AAEA,oBAAoB,eAAe;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;AChFA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,cAAc,mBAAO,CAAC,2CAAO;AAC7B,eAAe,mBAAO,CAAC,6CAAQ;AAC/B,iBAAiB,mBAAO,CAAC,iDAAU;AACnC,iBAAiB,mBAAO,CAAC,iDAAU;AACnC,iBAAiB,mBAAO,CAAC,iDAAU;AACnC,iBAAiB,mBAAO,CAAC,iDAAU;;;;;;;;;;;ACdnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,sFAA6B;;AAE1C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B,SAAS,QAAQ;;AAEjB,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,sFAA6B;;AAE1C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B,SAAS,QAAQ;;AAEjB,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,6DAAU;AACjC,aAAa,mBAAO,CAAC,iDAAU;AAC/B,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,sFAA6B;;AAE1C;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,sFAA6B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B,SAAS,QAAQ;;AAEjB,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACtIA,eAAe,mBAAO,CAAC,6DAAU;AACjC,aAAa,mBAAO,CAAC,iDAAU;AAC/B,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,sFAA6B;;AAE1C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACxDA,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,sFAA6B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACnQA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;;AAEA;AACA,yCAAyC;;AAEzC;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C;AACA,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD;AACA,uDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA,kBAAkB,QAAQ;AAC1B;;AAEA;AACA,kBAAkuBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD;;AAEA;AACA;AACA,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtgBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;;AAEA,0BAA0B;AAC1B,0BAA0B;;AAE1B;AACA;;AAEA,2BAA2B;AAC3B,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,OAAO;;AAErB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,QAAQ;AACtB;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;;AAEtB;AACA;AACA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA;;AAEA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC,cAAc,gBAAgB;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe;AACjC,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,kBAAkB,OAAO;AACzB;AACA,KAAK;AACL,IAAI,SAAS,IAA8B;AAC3C;AACA,aAAa,mBAAO,CAAC,qBAAQ;AAC7B;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,OAAO;AACP;AACA;AACA,CAAC;;AAED,CAAC,EAAE,KAA6B,kEAAkE;;;;;;;;;;;ACt1ElG;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uDAAuD;AACvyBAAyB;AACjC,UAAU,QAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,kCAAkC,mDAAmD,GAAG,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,EAAE;AACvF;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA,mFAAmF,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kBAAkB;AAC3C,yBAAyB,kBAAkB;AAC3C,yBAAyB,kBAAkB;AAC3C,yBAAyB,kBAAkB;AAC3C,yBAAyB,kBAAkB;AAC3C,yBAAyB,kBAAkB;AAC3C,4BAA4B,kBAAkB;AAC9C,yBAAyB,kBAAkB;AAC3C;AACA,yBAAyB,kBAAkB;AAC3C,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC;AACA;AACA;AACA;AACA,wBAAwB,wCAAwC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC,8CAA8C,mDAAmD,GAAG,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC,6CAA6C,mDAAmD,GAAG,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,8CAA8C,mDAAmD,GAAG,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA,qCAAqC,kEAAkE,GAAG,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC,2CAA2C,mDAAmD,GAAG,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC,6CAA6C,mDAAmD,GAAG,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmD,GAAG,GAAG;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,wCAAwC,KAAK;AAC7C,UAAU;AACV;AACA;AACA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,EAAE;AAC/C,0CAA0C,GAAG,SAAS,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA,0BAA0B,SAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmD,GAAG,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAAyB;AACjC,UAAU,yBAAyB;AACnC;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmkBAAkB,KAAK;AACvB;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACviCAAiC,KAAK;AACtC;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA,+BAA+B,MAAM;AACraAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB;AACA,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmD,GAAG,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,QAAQ;AAChB;AACA,kCAAkC,mDAAmD,GAAG,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,8CAA8C,KAAK,MAAM,IAAI;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmD,GAAG,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmD,GAAG,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,eAAe,QAAQ;AACvB;AACA,kCAAkC,mDAAmD,GAAG,MAAM;AAC9F,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA,kCAAkC,6BAA6B,GAAG,GAAG;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmD,GAAG,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB;AACA,8BAA8B,mDAAmD,GAAG,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM;AACf;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,6BAA6B,KAAK;AAClC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;ACx0FzB;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;ACTpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;ACnCrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;ACnC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;ACnC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;ACnC3B;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;ACf3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;AC1CrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;AC9CrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;AC7C1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;AC7BpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;AC7BzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;AC7BzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;AC7CmB;AACD;AACxC,iEAAe,0DAAS,SAAS,4DAAI,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACFI;AACH;AACxC,iEAAe,0DAAS,WAAW,6DAAK,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACFW;AACb;AACxC,iEAAe,0DAAS,UAAU,kEAAU,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACFS;AACf;AACxC,iEAAe,0DAAS,WAAW,mEAAW,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACFO;AACf;AACxC,iEAAe,0DAAS,kBAAkB,mEAAW,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACFA;AACf;AACxC,iEAAe,0DAAS,WAAW,mEAAW,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACFL;AACH;AACxC,iEAAe,0DAAS,WAAW,6DAAK,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACFC;AACH;AACxC,iEAAe,0DAAS,WAAW,6DAAK,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACFW;AACb;AACxC,iEAAe,0DAAS,gBAAgB,kEAAU,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACFX;AACD;AACxC,iEAAe,0DAAS,UAAU,4DAAI,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACFW;AACX;AACxC,iEAAe,0DAAS,kBAAkB,iEAAS,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACFF;AACX;AACxC,iEAAe,0DAAS,gBAAgB,iEAAS,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACFN;AACL;AACxC,iEAAe,0DAAS,QAAQ,8DAAM,CAAC,EAAC;;;;;;;;;;;;;;;;;ACFxC;AACA;AACgC;AAChC,0CAA0C,+CAAW;AACrD,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;ACJkB;AAC/B;AACf,mDAAmD,6DAAY;AAC/D,oDAAoD,6DAAY;AAChE;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP6B;AACA;AACU;AACA;AACR;AACU;AACE;AACA;AACA;AACZ;AACA;AACU;AACR;AACjB;AACA;AACK;AACA;AACJ;AACK;AACC;AACA;AACA;AACN;AACA;AACK;AACJ;AAClB,iEAAe;AACf,QAAQ;AACR,QAAQ;AACR,aAAa;AACb,aAAa;AACb,SAAS;AACT,cAAc;AACd,eAAe;AACf,eAAe;AACf,eAAe;AACf,SAAS;AACT,SAAS;AACT,cAAc;AACd,UAAU;AACV,CAAC,EAAC;;;;;;;UCxCF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;;;;;WCVA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;UEJA;UACA;UACA;UACA","sources":["webpack://StellarBase/./src/account.js","webpack://StellarBase/./src/asset.js","webpack://StellarBase/./src/claimant.js","webpack://StellarBase/./src/fee_bump_transaction.js","webpack://StellarBase/./src/generated/curr_generated.js","webpack://StellarBase/./src/get_liquidity_pool_id.js","webpack://StellarBase/./src/hashing.js","webpack://StellarBase/./src/index.js","webpack://StellarBase/./src/keypair.js","webpack://StellarBase/./src/liquidity_pool_asset.js","webpack://StellarBase/./src/liquidity_pool_id.js","webpack://StellarBase/./src/memo.js","webpack://StellarBase/./src/muxed_account.js","webpack://StellarBase/./src/network.js","webpack://StellarBase/./src/operation.js","webpack://StellarBase/./src/operations/account_merge.js","webpack://StellarBase/./src/operations/allow_trust.js","webpack://StellarBase/./src/operations/begin_sponsoring_future_reserves.js","webpack://StellarBase/./src/operations/bump_sequence.js","webpack://StellarBase/./src/operations/change_trust.js","webpack://StellarBase/./src/operations/claim_claimable_balance.js","webpack://StellarBase/./src/operations/clawback.js","webpack://StellarBase/./src/operations/clawback_claimable_balance.js","webpack://StellarBase/./src/operations/create_account.js","webpack://StellarBase/./src/operations/create_claimable_balance.js","webpack://StellarBase/./src/operations/create_passive_sell_offer.js","webpack://StellarBase/./src/operations/end_sponsoring_future_reserves.js","webpack://StellarBase/./src/operations/index.js","webpack://StellarBase/./src/operations/inflation.js","webpack://StellarBase/./src/operations/liquidity_pool_deposit.js","webpack://StellarBase/./src/operations/liquidity_pool_withdraw.js","webpack://StellarBase/./src/operations/manage_buy_offer.js","webpack://StellarBase/./src/operations/manage_data.js","webpack://StellarBase/./src/operations/manage_sell_offer.js","webpack://StellarBase/./src/operations/path_payment_strict_receive.js","webpack://StellarBase/./src/operations/path_payment_strict_send.js","webpack://StellarBase/./src/operations/payment.js","webpack://StellarBase/./src/operations/revoke_sponsorship.js","webpack://StellarBase/./src/operations/set_options.js","webpack://StellarBase/./src/operations/set_trustline_flags.js","webpack://StellarBase/./src/signerkey.js","webpack://StellarBase/./src/signing.js","webpack://StellarBase/./src/strkey.js","webpack://StellarBase/./src/transaction.js","webpack://StellarBase/./src/transaction_base.js","webpack://StellarBase/./src/transaction_builder.js","webpack://StellarBase/./src/util/BrowserBuffer.js","webpack://StellarBase/./src/util/checksum.js","webpack://StellarBase/./src/util/continued_fraction.js","webpack://StellarBase/./src/util/decode_encode_muxed_account.js","webpack://StellarBase/./src/xdr.js","webpack://StellarBase/./node_modules/base32.js/base32.js","webpack://StellarBase/./node_modules/base64-js/index.js","webpack://StellarBase/./node_modules/buffer/index.js","webpack://StellarBase/./node_modules/ieee754/index.js","webpack://StellarBase/./node_modules/inherits/inherits_browser.js","webpack://StellarBase/./node_modules/js-xdr/dist/xdr.js","webpack://StellarBase/./node_modules/lodash/_DataView.js","webpack://StellarBase/./node_modules/lodash/_Hash.js","webpack://StellarBase/./node_modules/lodash/_ListCache.js","webpack://StellarBase/./node_modules/lodash/_Map.js","webpack://StellarBase/./node_modules/lodash/_MapCache.js","webpack://StellarBase/./node_modules/lodash/_Promise.js","webpack://StellarBase/./node_modules/lodash/_Set.js","webpack://StellarBase/./node_modules/lodash/_SetCache.js","webpack://StellarBase/./node_modules/lodash/_Stack.js","webpack://StellarBase/./node_modules/lodash/_Symbol.js","webpack://StellarBase/./node_modules/lodash/_Uint8Array.js","webpack://StellarBase/./node_modules/lodash/_WeakMap.js","webpack://StellarBase/./node_modules/lodash/_arrayEach.js","webpack://StellarBase/./node_modules/lodash/_arrayFilter.js","webpack://StellarBase/./node_modules/lodash/_arrayLikeKeys.js","webpack://StellarBase/./node_modules/lodash/_arrayMap.js","webpack://StellarBase/./node_modules/lodash/_arrayPush.js","webpack://StellarBase/./node_modules/lodash/_arraySome.js","webpack://StellarBase/./node_modules/lodash/_asciiSize.js","webpack://StellarBase/./node_modules/lodash/_asciiToArray.js","webpack://StellarBase/./node_modules/lodash/_assignValue.js","webpack://StellarBase/./node_modules/lodash/_assocIndexOf.js","webpack://StellarBase/./node_modules/lodash/_baseAssign.js","webpack://StellarBase/./node_modules/lodash/_baseAssignIn.js","webpack://StellarBase/./node_modules/lodash/_baseAssignValue.js","webpack://StellarBase/./node_modules/lodash/_baseClone.js","webpack://StellarBase/./node_modules/lodash/_baseCreate.js","webpack://StellarBase/./node_modules/lodash/_baseEach.js","webpack://StellarBase/./node_modules/lodash/_baseFindIndex.js","webpack://StellarBase/./node_modules/lodash/_baseFor.js","webpack://StellarBase/./node_modules/lodash/_baseForOwn.js","webpack://StellarBase/./node_modules/lodash/_baseGet.js","webpack://StellarBase/./node_modules/lodash/_baseGetAllKeys.js","webpack://StellarBase/./node_modules/lodash/_baseGetTag.js","webpack://StellarBase/./node_modules/lodash/_baseHasIn.js","webpack://StellarBase/./node_modules/lodash/_baseIndexOf.js","webpack://StellarBase/./node_modules/lodash/_baseIsArguments.js","webpack://StellarBase/./node_modules/lodash/_baseIsEqual.js","webpack://StellarBase/./node_modules/lodash/_baseIsEqualDeep.js","webpack://StellarBase/./node_modules/lodash/_baseIsMap.js","webpack://StellarBase/./node_modules/lodash/_baseIsMatch.js","webpack://StellarBase/./node_modules/lodash/_baseIsNaN.js","webpack://StellarBase/./node_modules/lodash/_baseIsNative.js","webpack://StellarBase/./node_modules/lodash/_baseIsSet.js","webpack://StellarBase/./node_modules/lodash/_baseIsTypedArray.js","webpack://StellarBase/./node_modules/lodash/_baseIteratee.js","webpack://StellarBase/./node_modules/lodash/_baseKeys.js","webpack://StellarBase/./node_modules/lodash/_baseKeysIn.js","webpack://StellarBase/./node_modules/lodash/_baseMap.js","webpack://StellarBase/./node_modules/lodash/_baseMatches.js","webpack://StellarBase/./node_modules/lodash/_baseMatchesProperty.js","webpack://StellarBase/./node_modules/lodash/_baseProperty.js","webpack://StellarBase/./node_modules/lodash/_basePropertyDeep.js","webpack://StellarBase/./node_modules/lodash/_baseRepeat.js","webpack://StellarBase/./node_modules/lodash/_baseSlice.js","webpack://StellarBase/./node_modules/lodash/_baseTimes.js","webpack://StellarBase/./node_modules/lodash/_baseToString.js","webpack://StellarBase/./node_modules/lodash/_baseTrim.js","webpack://StellarBase/./node_modules/lodash/_baseUnary.js","webpack://StellarBase/./node_modules/lodash/_cacheHas.js","webpack://StellarBase/./node_modules/lodash/_castPath.js","webpack://StellarBase/./node_modules/lodash/_castSlice.js","webpack://StellarBase/./node_modules/lodash/_charsEndIndex.js","webpack://StellarBase/./node_modules/lodash/_cloneArrayBuffer.js","webpack://StellarBase/./node_modules/lodash/_cloneBuffer.js","webpack://StellarBase/./node_modules/lodash/_cloneDataView.js","webpack://StellarBase/./node_modules/lodash/_cloneRegExp.js","webpack://StellarBase/./node_modules/lodash/_cloneSymbol.js","webpack://StellarBase/./node_modules/lodash/_cloneTypedArray.js","webpack://StellarBase/./node_modules/lodash/_copyArray.js","webpack://StellarBase/./node_modules/lodash/_copyObject.js","webpack://StellarBase/./node_modules/lodash/_copySymbols.js","webpack://StellarBase/./node_modules/lodash/_copySymbolsIn.js","webpack://StellarBase/./node_modules/lodash/_coreJsData.js","webpack://StellarBase/./node_modules/lodash/_createBaseEach.js","webpack://StellarBase/./node_modules/lodash/_createBaseFor.js","webpack://StellarBase/./node_modules/lodash/_createPadding.js","webpack://StellarBase/./node_modules/lodash/_defineProperty.js","webpack://StellarBase/./node_modules/lodash/_equalArrays.js","webpack://StellarBase/./node_modules/lodash/_equalByTag.js","webpack://StellarBase/./node_modules/lodash/_equalObjects.js","webpack://StellarBase/./node_modules/lodash/_freeGlobal.js","webpack://StellarBase/./node_modules/lodash/_getAllKeys.js","webpack://StellarBase/./node_modules/lodash/_getAllKeysIn.js","webpack://StellarBase/./node_modules/lodash/_getMapData.js","webpack://StellarBase/./node_modules/lodash/_getMatchData.js","webpack://StellarBase/./node_modules/lodash/_getNative.js","webpack://StellarBase/./node_modules/lodash/_getPrototype.js","webpack://StellarBase/./node_modules/lodash/_getRawTag.js","webpack://StellarBase/./node_modules/lodash/_getSymbols.js","webpack://StellarBase/./node_modules/lodash/_getSymbolsIn.js","webpack://StellarBase/./node_modules/lodash/_getTag.js","webpack://StellarBase/./node_modules/lodash/_getValue.js","webpack://StellarBase/./node_modules/lodash/_hasPath.js","webpack://StellarBase/./node_modules/lodash/_hasUnicode.js","webpack://StellarBase/./node_modules/lodash/_hashClear.js","webpack://StellarBase/./node_modules/lodash/_hashDelete.js","webpack://StellarBase/./node_modules/lodash/_hashGet.js","webpack://StellarBase/./node_modules/lodash/_hashHas.js","webpack://StellarBase/./node_modules/lodash/_hashSet.js","webpack://StellarBase/./node_modules/lodash/_initCloneArray.js","webpack://StellarBase/./node_modules/lodash/_initCloneByTag.js","webpack://StellarBase/./node_modules/lodash/_initCloneObject.js","webpack://StellarBase/./node_modules/lodash/_isIndex.js","webpack://StellarBase/./node_modules/lodash/_isKey.js","webpack://StellarBase/./node_modules/lodash/_isKeyable.js","webpack://StellarBase/./node_modules/lodash/_isMasked.js","webpack://StellarBase/./node_modules/lodash/_isPrototype.js","webpack://StellarBase/./node_modules/lodash/_isStrictComparable.js","webpack://StellarBase/./node_modules/lodash/_listCacheClear.js","webpack://StellarBase/./node_modules/lodash/_listCacheDelete.js","webpack://StellarBase/./node_modules/lodash/_listCacheGet.js","webpack://StellarBase/./node_modules/lodash/_listCacheHas.js","webpack://StellarBase/./node_modules/lodash/_listCacheSet.js","webpack://StellarBase/./node_modules/lodash/_mapCacheClear.js","webpack://StellarBase/./node_modules/lodash/_mapCacheDelete.js","webpack://StellarBase/./node_modules/lodash/_mapCacheGet.js","webpack://StellarBase/./node_modules/lodash/_mapCacheHas.js","webpack://StellarBase/./node_modules/lodash/_mapCacheSet.js","webpack://StellarBase/./node_modules/lodash/_mapToArray.js","webpack://StellarBase/./node_modules/lodash/_matchesStrictComparable.js","webpack://StellarBase/./node_modules/lodash/_memoizeCapped.js","webpack://StellarBase/./node_modules/lodash/_nativeCreate.js","webpack://StellarBase/./node_modules/lodash/_nativeKeys.js","webpack://StellarBase/./node_modules/lodash/_nativeKeysIn.js","webpack://StellarBase/./node_modules/lodash/_nodeUtil.js","webpack://StellarBase/./node_modules/lodash/_objectToString.js","webpack://StellarBase/./node_modules/lodash/_overArg.js","webpack://StellarBase/./node_modules/lodash/_root.js","webpack://StellarBase/./node_modules/lodash/_setCacheAdd.js","webpack://StellarBase/./node_modules/lodash/_setCacheHas.js","webpack://StellarBase/./node_modules/lodash/_setToArray.js","webpack://StellarBase/./node_modules/lodash/_stackClear.js","webpack://StellarBase/./node_modules/lodash/_stackDelete.js","webpack://StellarBase/./node_modules/lodash/_stackGet.js","webpack://StellarBase/./node_modules/lodash/_stackHas.js","webpack://StellarBase/./node_modules/lodash/_stackSet.js","webpack://StellarBase/./node_modules/lodash/_strictIndexOf.js","webpack://StellarBase/./node_modules/lodash/_stringSize.js","webpack://StellarBase/./node_modules/lodash/_stringToArray.js","webpack://StellarBase/./node_modules/lodash/_stringToPath.js","webpack://StellarBase/./node_modules/lodash/_toKey.js","webpack://StellarBase/./node_modules/lodash/_toSource.js","webpack://StellarBase/./node_modules/lodash/_trimmedEndIndex.js","webpack://StellarBase/./node_modules/lodash/_unicodeSize.js","webpack://StellarBase/./node_modules/lodash/_unicodeToArray.js","webpack://StellarBase/./node_modules/lodash/clone.js","webpack://StellarBase/./node_modules/lodash/eq.js","webpack://StellarBase/./node_modules/lodash/get.js","webpack://StellarBase/./node_modules/lodash/hasIn.js","webpack://StellarBase/./node_modules/lodash/identity.js","webpack://StellarBase/./node_modules/lodash/isArguments.js","webpack://StellarBase/./node_modules/lodash/isArray.js","webpack://StellarBase/./node_modules/lodash/isArrayLike.js","webpack://StellarBase/./node_modules/lodash/isBuffer.js","webpack://StellarBase/./node_modules/lodash/isFinite.js","webpack://StellarBase/./node_modules/lodash/isFunction.js","webpack://StellarBase/./node_modules/lodash/isLength.js","webpack://StellarBase/./node_modules/lodash/isMap.js","webpack://StellarBase/./node_modules/lodash/isNull.js","webpack://StellarBase/./node_modules/lodash/isNumber.js","webpack://StellarBase/./node_modules/lodash/isObject.js","webpack://StellarBase/./node_modules/lodash/isObjectLike.js","webpack://StellarBase/./node_modules/lodash/isSet.js","webpack://StellarBase/./node_modules/lodash/isString.js","webpack://StellarBase/./node_modules/lodash/isSymbol.js","webpack://StellarBase/./node_modules/lodash/isTypedArray.js","webpack://StellarBase/./node_modules/lodash/isUndefined.js","webpack://StellarBase/./node_modules/lodash/keys.js","webpack://StellarBase/./node_modules/lodash/keysIn.js","webpack://StellarBase/./node_modules/lodash/map.js","webpack://StellarBase/./node_modules/lodash/memoize.js","webpack://StellarBase/./node_modules/lodash/padEnd.js","webpack://StellarBase/./node_modules/lodash/property.js","webpack://StellarBase/./node_modules/lodash/stubArray.js","webpack://StellarBase/./node_modules/lodash/stubFalse.js","webpack://StellarBase/./node_modules/lodash/toFinite.js","webpack://StellarBase/./node_modules/lodash/toInteger.js","webpack://StellarBase/./node_modules/lodash/toNumber.js","webpack://StellarBase/./node_modules/lodash/toString.js","webpack://StellarBase/./node_modules/lodash/trimEnd.js","webpack://StellarBase/./node_modules/safe-buffer/index.js","webpack://StellarBase/./node_modules/sha.js/hash.js","webpack://StellarBase/./node_modules/sha.js/index.js","webpack://StellarBase/./node_modules/sha.js/sha.js","webpack://StellarBase/./node_modules/sha.js/sha1.js","webpack://StellarBase/./node_modules/sha.js/sha224.js","webpack://StellarBase/./node_modules/sha.js/sha256.js","webpack://StellarBase/./node_modules/sha.js/sha384.js","webpack://StellarBase/./node_modules/sha.js/sha512.js","webpack://StellarBase/./node_modules/tweetnacl/nacl-fast.js","webpack://StellarBase/ignored|F:\\stellardesign\\js-stellar-base\\node_modules\\tweetnacl|crypto","webpack://StellarBase/./node_modules/bignumber.js/bignumber.mjs","webpack://StellarBase/./node_modules/crc/mjs/calculators/crc1.js","webpack://StellarBase/./node_modules/crc/mjs/calculators/crc16.js","webpack://StellarBase/./node_modules/crc/mjs/calculators/crc16ccitt.js","webpack://StellarBase/./node_modules/crc/mjs/calculators/crc16kermit.js","webpack://StellarBase/./node_modules/crc/mjs/calculators/crc16modbus.js","webpack://StellarBase/./node_modules/crc/mjs/calculators/crc16xmodem.js","webpack://StellarBase/./node_modules/crc/mjs/calculators/crc24.js","webpack://StellarBase/./node_modules/crc/mjs/calculators/crc32.js","webpack://StellarBase/./node_modules/crc/mjs/calculators/crc32mpeg2.js","webpack://StellarBase/./node_modules/crc/mjs/calculators/crc8.js","webpack://StellarBase/./node_modules/crc/mjs/calculators/crc81wire.js","webpack://StellarBase/./node_modules/crc/mjs/calculators/crc8dvbs2.js","webpack://StellarBase/./node_modules/crc/mjs/calculators/crcjam.js","webpack://StellarBase/./node_modules/crc/mjs/crc1.js","webpack://StellarBase/./node_modules/crc/mjs/crc16.js","webpack://StellarBase/./node_modules/crc/mjs/crc16ccitt.js","webpack://StellarBase/./node_modules/crc/mjs/crc16kermit.js","webpack://StellarBase/./node_modules/crc/mjs/crc16modbus.js","webpack://StellarBase/./node_modules/crc/mjs/crc16xmodem.js","webpack://StellarBase/./node_modules/crc/mjs/crc24.js","webpack://StellarBase/./node_modules/crc/mjs/crc32.js","webpack://StellarBase/./node_modules/crc/mjs/crc32mpeg2.js","webpack://StellarBase/./node_modules/crc/mjs/crc8.js","webpack://StellarBase/./node_modules/crc/mjs/crc81wire.js","webpack://StellarBase/./node_modules/crc/mjs/crc8dvbs2.js","webpack://StellarBase/./node_modules/crc/mjs/crcjam.js","webpack://StellarBase/./node_modules/crc/mjs/create_buffer.js","webpack://StellarBase/./node_modules/crc/mjs/define_crc.js","webpack://StellarBase/./node_modules/crc/mjs/index.js","webpack://StellarBase/webpack/bootstrap","webpack://StellarBase/webpack/runtime/compat get default export","webpack://StellarBase/webpack/runtime/define property getters","webpack://StellarBase/webpack/runtime/global","webpack://StellarBase/webpack/runtime/harmony module decorator","webpack://StellarBase/webpack/runtime/hasOwnProperty shorthand","webpack://StellarBase/webpack/runtime/make namespace object","webpack://StellarBase/webpack/runtime/node module decorator","webpack://StellarBase/webpack/before-startup","webpack://StellarBase/webpack/startup","webpack://StellarBase/webpack/after-startup"],"sourcesContent":["import isString from 'lodash/isString';\nimport BigNumber from 'bignumber.js';\n\nimport { StrKey } from './strkey';\n\n/**\n * Create a new Account object.\n *\n * `Account` represents a single account in the Stellar network and its sequence\n * number. Account tracks the sequence number as it is used by {@link\n * TransactionBuilder}. See\n * [Accounts](https://developers.stellar.org/docs/glossary/accounts/) for\n * more information about how accounts work in Stellar.\n *\n * @constructor\n *\n * @param {string} accountId - ID of the account (ex.\n *     `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`). If you\n *     provide a muxed account address, this will throw; use {@link\n *     MuxedAccount} instead.\n * @param {string} sequence  - current sequence number of the account\n */\nexport class Account {\n  constructor(accountId, sequence) {\n    if (StrKey.isValidMed25519PublicKey(accountId)) {\n      throw new Error('accountId is an M-address; use MuxedAccount instead');\n    }\n\n    if (!StrKey.isValidEd25519PublicKey(accountId)) {\n      throw new Error('accountId is invalid');\n    }\n    if (!isString(sequence)) {\n      throw new Error('sequence must be of type string');\n    }\n\n    this._accountId = accountId;\n    this.sequence = new BigNumber(sequence);\n  }\n\n  /**\n   * Returns Stellar account ID, ex.\n   * `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`.\n   * @returns {string}\n   */\n  accountId() {\n    return this._accountId;\n  }\n\n  /**\n   * @returns {string}  sequence number for the account as a string\n   */\n  sequenceNumber() {\n    return this.sequence.toString();\n  }\n\n  /**\n   * Increments sequence number in this object by one.\n   * @returns {void}\n   */\n  incrementSequenceNumber() {\n    this.sequence = this.sequence.plus(1);\n  }\n}\n","import clone from 'lodash/clone';\nimport padEnd from 'lodash/padEnd';\nimport trimEnd from 'lodash/trimEnd';\nimport xdr from './xdr';\nimport { Keypair } from './keypair';\nimport { StrKey } from './strkey';\n\n/**\n * Asset class represents an asset, either the native asset (`XLM`)\n * or an asset code / issuer account ID pair.\n *\n * An asset code describes an asset code and issuer pair. In the case of the native\n * asset XLM, the issuer will be null.\n *\n * @constructor\n * @param {string} code - The asset code.\n * @param {string} issuer - The account ID of the issuer.\n */\nexport class Asset {\n  constructor(code, issuer) {\n    if (!/^[a-zA-Z0-9]{1,12}$/.test(code)) {\n      throw new Error(\n        'Asset code is invalid (maximum alphanumeric, 12 characters at max)'\n      );\n    }\n    if (String(code).toLowerCase() !== 'xlm' && !issuer) {\n      throw new Error('Issuer cannot be null');\n    }\n    if (issuer && !StrKey.isValidEd25519PublicKey(issuer)) {\n      console.log(!StrKey.isValidEd25519PublicKey(issuer), '!StrKey.isValidEd25519PublicKey(issuer)')\n      console.log(StrKey.isValidEd25519PublicKey(issuer), 'without !')\n      throw new Error(`Issuer is invalid ${issuer}`);\n    }\n\n    if (String(code).toLowerCase() === 'xlm') {\n      // transform all xLM, Xlm, etc. variants -> XLM\n      this.code = 'XLM';\n    } else {\n      this.code = code;\n    }\n\n    this.issuer = issuer;\n  }\n\n  /**\n   * Returns an asset object for the native asset.\n   * @Return {Asset}\n   */\n  static native() {\n    return new Asset('XLM');\n  }\n\n  /**\n   * Returns an asset object from its XDR object representation.\n   * @param {xdr.Asset} assetXdr - The asset xdr object.\n   * @returns {Asset}\n   */\n  static fromOperation(assetXdr) {\n    let anum;\n    let code;\n    let issuer;\n    switch (assetXdr.switch()) {\n      case xdr.AssetType.assetTypeNative():\n        return this.native();\n      case xdr.AssetType.assetTypeCreditAlphanum4():\n        anum = assetXdr.alphaNum4();\n      /* falls through */\n      case xdr.AssetType.assetTypeCreditAlphanum12():\n        anum = anum || assetXdr.alphaNum12();\n        issuer = StrKey.encodeEd25519PublicKey(anum.issuer().ed25519());\n        code = trimEnd(anum.assetCode(), '\\0');\n        return new this(code, issuer);\n      default:\n        throw new Error(`Invalid asset type: ${assetXdr.switch().name}`);\n    }\n  }\n\n  /**\n   * Returns the xdr.Asset object for this asset.\n   * @returns {xdr.Asset} XDR asset object\n   */\n  toXDRObject() {\n    return this._toXDRObject(xdr.Asset);\n  }\n\n  /**\n   * Returns the xdr.ChangeTrustAsset object for this asset.\n   * @returns {xdr.ChangeTrustAsset} XDR asset object\n   */\n  toChangeTrustXDRObject() {\n    return this._toXDRObject(xdr.ChangeTrustAsset);\n  }\n\n  /**\n   * Returns the xdr.TrustLineAsset object for this asset.\n   * @returns {xdr.TrustLineAsset} XDR asset object\n   */\n  toTrustLineXDRObject() {\n    return this._toXDRObject(xdr.TrustLineAsset);\n  }\n\n  /**\n   * Returns the xdr object for this asset.\n   * @param {xdr.Asset | xdr.ChangeTrustAsset} xdrAsset - The asset xdr object.\n   * @returns {xdr.Asset | xdr.ChangeTrustAsset | xdr.TrustLineAsset} XDR Asset object\n   */\n  _toXDRObject(xdrAsset = xdr.Asset) {\n    if (this.isNative()) {\n      return xdrAsset.assetTypeNative();\n    }\n\n    let xdrType;\n    let xdrTypeString;\n    if (this.code.length <= 4) {\n      xdrType = xdr.AlphaNum4;\n      xdrTypeString = 'assetTypeCreditAlphanum4';\n    } else {\n      xdrType = xdr.AlphaNum12;\n      xdrTypeString = 'assetTypeCreditAlphanum12';\n    }\n\n    // pad code with null bytes if necessary\n    const padLength = this.code.length <= 4 ? 4 : 12;\n    const paddedCode = padEnd(this.code, padLength, '\\0');\n\n    // eslint-disable-next-line new-cap\n    const assetType = new xdrType({\n      assetCode: paddedCode,\n      issuer: Keypair.fromPublicKey(this.issuer).xdrAccountId()\n    });\n\n    return new xdrAsset(xdrTypeString, assetType);\n  }\n\n  /**\n   * @returns {string} Asset code\n   */\n  getCode() {\n    return clone(this.code);\n  }\n\n  /**\n   * @returns {string} Asset issuer\n   */\n  getIssuer() {\n    return clone(this.issuer);\n  }\n\n  /**\n   * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)\n   * @returns {string} Asset type. Can be one of following types:\n   *\n   *  - `native`,\n   *  - `credit_alphanum4`,\n   *  - `credit_alphanum12`, or\n   *  - `unknown` as the error case (which should never occur)\n   */\n  getAssetType() {\n    switch (this.getRawAssetType()) {\n      case xdr.AssetType.assetTypeNative():\n        return 'native';\n      case xdr.AssetType.assetTypeCreditAlphanum4():\n        return 'credit_alphanum4';\n      case xdr.AssetType.assetTypeCreditAlphanum12():\n        return 'credit_alphanum12';\n      default:\n        return 'unknown';\n    }\n  }\n\n  /**\n   * @returns {xdr.AssetType}  the raw XDR representation of the asset type\n   */\n  getRawAssetType() {\n    if (this.isNative()) {\n      return xdr.AssetType.assetTypeNative();\n    }\n\n    if (this.code.length <= 4) {\n      return xdr.AssetType.assetTypeCreditAlphanum4();\n    }\n\n    return xdr.AssetType.assetTypeCreditAlphanum12();\n  }\n\n  /**\n   * @returns {boolean}  true if this asset object is the native asset.\n   */\n  isNative() {\n    return !this.issuer;\n  }\n\n  /**\n   * @param {Asset} asset Asset to compare\n   * @returns {boolean} true if this asset equals the given asset.\n   */\n  equals(asset) {\n    return this.code === asset.getCode() && this.issuer === asset.getIssuer();\n  }\n\n  toString() {\n    if (this.isNative()) {\n      return 'native';\n    }\n\n    return `${this.getCode()}:${this.getIssuer()}`;\n  }\n\n  /**\n   * Compares two assets according to the criteria:\n   *\n   *  1. First compare the type (native < alphanum4 < alphanum12).\n   *  2. If the types are equal, compare the assets codes.\n   *  3. If the asset codes are equal, compare the issuers.\n   *\n   * @param   {Asset} assetA - the first asset\n   * @param   {Asset} assetB - the second asset\n   * @returns {number} `-1` if assetA < assetB, `0` if assetA == assetB, `1` if assetA > assetB.\n   *\n   * @static\n   * @memberof Asset\n   */\n  static compare(assetA, assetB) {\n    if (!assetA || !(assetA instanceof Asset)) {\n      throw new Error('assetA is invalid');\n    }\n    if (!assetB || !(assetB instanceof Asset)) {\n      throw new Error('assetB is invalid');\n    }\n\n    if (assetA.equals(assetB)) {\n      return 0;\n    }\n\n    // Compare asset types.\n    const xdrAtype = assetA.getRawAssetType().value;\n    const xdrBtype = assetB.getRawAssetType().value;\n    if (xdrAtype !== xdrBtype) {\n      return xdrAtype < xdrBtype ? -1 : 1;\n    }\n\n    // Compare asset codes.\n    const result = asciiCompare(assetA.getCode(), assetB.getCode());\n    if (result !== 0) {\n      return result;\n    }\n\n    // Compare asset issuers.\n    return asciiCompare(assetA.getIssuer(), assetB.getIssuer());\n  }\n}\n\n/**\n * Compares two ASCII strings in lexographic order with uppercase precedence.\n *\n * @param   {string} a - the first string to compare\n * @param   {string} b - the second\n * @returns {number} like all `compare()`s:\n *     -1 if `a < b`, 0 if `a == b`, and 1 if `a > b`\n *\n * @warning No type-checks are done on the parameters\n */\nfunction asciiCompare(a, b) {\n  const len = Math.min(a.length, b.length);\n\n  for (let i = 0; i < len; i += 1) {\n    const diff = a.charCodeAt(i) - b.charCodeAt(i);\n    if (diff !== 0) {\n      return diff < 0 ? -1 : 1;\n    }\n  }\n\n  if (a.length === b.length) {\n    return 0;\n  }\n  return a.length < b.length ? -1 : 1;\n}","import xdr from './xdr';\nimport { Keypair } from './keypair';\nimport { StrKey } from './strkey';\n\n/**\n * Claimant class represents an xdr.Claimant\n *\n * The claim predicate is optional, it defaults to unconditional if none is specified.\n *\n * @constructor\n * @param {string} destination - The destination account ID.\n * @param {xdr.ClaimPredicate} [predicate] - The claim predicate.\n */\nexport class Claimant {\n  constructor(destination, predicate) {\n    if (destination && !StrKey.isValidEd25519PublicKey(destination)) {\n      throw new Error('Destination is invalid');\n    }\n    this._destination = destination;\n\n    if (!predicate) {\n      this._predicate = xdr.ClaimPredicate.claimPredicateUnconditional();\n    } else if (predicate instanceof xdr.ClaimPredicate) {\n      this._predicate = predicate;\n    } else {\n      throw new Error('Predicate should be an xdr.ClaimPredicate');\n    }\n  }\n\n  /**\n   * Returns an unconditional claim predicate\n   * @Return {xdr.ClaimPredicate}\n   */\n  static predicateUnconditional() {\n    return xdr.ClaimPredicate.claimPredicateUnconditional();\n  }\n\n  /**\n   * Returns an `and` claim predicate\n   * @param {xdr.ClaimPredicate} left an xdr.ClaimPredicate\n   * @param {xdr.ClaimPredicate} right an xdr.ClaimPredicate\n   * @Return {xdr.ClaimPredicate}\n   */\n  static predicateAnd(left, right) {\n    if (!(left instanceof xdr.ClaimPredicate)) {\n      throw new Error('left Predicate should be an xdr.ClaimPredicate');\n    }\n    if (!(right instanceof xdr.ClaimPredicate)) {\n      throw new Error('right Predicate should be an xdr.ClaimPredicate');\n    }\n\n    return xdr.ClaimPredicate.claimPredicateAnd([left, right]);\n  }\n\n  /**\n   * Returns an `or` claim predicate\n   * @param {xdr.ClaimPredicate} left an xdr.ClaimPredicate\n   * @param {xdr.ClaimPredicate} right an xdr.ClaimPredicate\n   * @Return {xdr.ClaimPredicate}\n   */\n  static predicateOr(left, right) {\n    if (!(left instanceof xdr.ClaimPredicate)) {\n      throw new Error('left Predicate should be an xdr.ClaimPredicate');\n    }\n    if (!(right instanceof xdr.ClaimPredicate)) {\n      throw new Error('right Predicate should be an xdr.ClaimPredicate');\n    }\n\n    return xdr.ClaimPredicate.claimPredicateOr([left, right]);\n  }\n\n  /**\n   * Returns a `not` claim predicate\n   * @param {xdr.ClaimPredicate} predicate an xdr.ClaimPredicate\n   * @Return {xdr.ClaimPredicate}\n   */\n  static predicateNot(predicate) {\n    if (!(predicate instanceof xdr.ClaimPredicate)) {\n      throw new Error('right Predicate should be an xdr.ClaimPredicate');\n    }\n\n    return xdr.ClaimPredicate.claimPredicateNot(predicate);\n  }\n\n  /**\n   * Returns a `BeforeAbsoluteTime` claim predicate\n   *\n   * This predicate will be fulfilled if the closing time of the ledger that\n   * includes the CreateClaimableBalance operation is less than this (absolute)\n   * Unix timestamp (expressed in seconds).\n   *\n   * @param {string} absBefore Unix epoch (in seconds) as a string\n   * @Return {xdr.ClaimPredicate}\n   */\n  static predicateBeforeAbsoluteTime(absBefore) {\n    return xdr.ClaimPredicate.claimPredicateBeforeAbsoluteTime(\n      xdr.Int64.fromString(absBefore)\n    );\n  }\n\n  /**\n   * Returns a `BeforeRelativeTime` claim predicate\n   *\n   * This predicate will be fulfilled if the closing time of the ledger that\n   * includes the CreateClaimableBalance operation plus this relative time delta\n   * (in seconds) is less than the current time.\n   *\n   * @param {strings} seconds seconds since closeTime of the ledger in which the ClaimableBalanceEntry was created (as string)\n   * @Return {xdr.ClaimPredicate}\n   */\n  static predicateBeforeRelativeTime(seconds) {\n    return xdr.ClaimPredicate.claimPredicateBeforeRelativeTime(\n      xdr.Int64.fromString(seconds)\n    );\n  }\n\n  /**\n   * Returns a claimant object from its XDR object representation.\n   * @param {xdr.Claimant} claimantXdr - The claimant xdr object.\n   * @returns {Claimant}\n   */\n  static fromXDR(claimantXdr) {\n    let value;\n    switch (claimantXdr.switch()) {\n      case xdr.ClaimantType.claimantTypeV0():\n        value = claimantXdr.v0();\n        return new this(\n          StrKey.encodeEd25519PublicKey(value.destination().ed25519()),\n          value.predicate()\n        );\n      default:\n        throw new Error(`Invalid claimant type: ${claimantXdr.switch().name}`);\n    }\n  }\n\n  /**\n   * Returns the xdr object for this claimant.\n   * @returns {xdr.Claimant} XDR Claimant object\n   */\n  toXDRObject() {\n    const claimant = new xdr.ClaimantV0({\n      destination: Keypair.fromPublicKey(this._destination).xdrAccountId(),\n      predicate: this._predicate\n    });\n\n    return xdr.Claimant.claimantTypeV0(claimant);\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get destination() {\n    return this._destination;\n  }\n\n  set destination(value) {\n    throw new Error('Claimant is immutable');\n  }\n\n  /**\n   * @type {xdr.ClaimPredicate}\n   * @readonly\n   */\n  get predicate() {\n    return this._predicate;\n  }\n\n  set predicate(value) {\n    throw new Error('Claimant is immutable');\n  }\n}\n","import xdr from './xdr';\nimport { hash } from './hashing';\nimport { Transaction } from './transaction';\nimport { TransactionBase } from './transaction_base';\nimport { encodeMuxedAccountToAddress } from './util/decode_encode_muxed_account';\nimport BrowserBuffer from './util/BrowserBuffer';\n\n/**\n * Use {@link TransactionBuilder.buildFeeBumpTransaction} to build a\n * FeeBumpTransaction object. If you have an object or base64-encoded string of\n * the transaction envelope XDR use {@link TransactionBuilder.fromXDR}.\n *\n * Once a {@link FeeBumpTransaction} has been created, its attributes and operations\n * should not be changed. You should only add signatures (using {@link FeeBumpTransaction#sign}) before\n * submitting to the network or forwarding on to additional signers.\n *\n * @param {string|xdr.TransactionEnvelope} envelope - transaction envelope\n *     object or base64 encoded string.\n * @param {string} networkPassphrase - passphrase of the target Stellar network\n *     (e.g. \"Public Global Stellar Network ; September 2015\").\n *\n * @extends TransactionBase\n */\nexport class FeeBumpTransaction extends TransactionBase {\n  constructor(envelope, networkPassphrase) {\n    if (typeof envelope === 'string') {\n      const buffer = BrowserBuffer.from(envelope, 'base64');\n      envelope = xdr.TransactionEnvelope.fromXDR(buffer);\n    }\n\n    const envelopeType = envelope.switch();\n    if (envelopeType !== xdr.EnvelopeType.envelopeTypeTxFeeBump()) {\n      throw new Error(\n        `Invalid TransactionEnvelope: expected an envelopeTypeTxFeeBump but received an ${envelopeType.name}.`\n      );\n    }\n\n    const txEnvelope = envelope.value();\n    const tx = txEnvelope.tx();\n    const fee = tx.fee().toString();\n    // clone signatures\n    const signatures = (txEnvelope.signatures() || []).slice();\n\n    super(tx, signatures, fee, networkPassphrase);\n\n    const innerTxEnvelope = xdr.TransactionEnvelope.envelopeTypeTx(\n      tx.innerTx().v1()\n    );\n    this._feeSource = encodeMuxedAccountToAddress(this.tx.feeSource());\n    this._innerTransaction = new Transaction(\n      innerTxEnvelope,\n      networkPassphrase\n    );\n  }\n\n  /**\n   * @type {Transaction}\n   * @readonly\n   */\n  get innerTransaction() {\n    return this._innerTransaction;\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get feeSource() {\n    return this._feeSource;\n  }\n\n  /**\n   * Returns the \"signature base\" of this transaction, which is the value\n   * that, when hashed, should be signed to create a signature that\n   * validators on the Stellar Network will accept.\n   *\n   * It is composed of a 4 prefix bytes followed by the xdr-encoded form\n   * of this transaction.\n   * @returns {Uint8Array}\n   */\n  signatureBase() {\n    const taggedTransaction =\n      new xdr.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTxFeeBump(\n        this.tx\n      );\n\n    const txSignature = new xdr.TransactionSignaturePayload({\n      networkId: xdr.Hash.fromXDR(hash(this.networkPassphrase)),\n      taggedTransaction\n    });\n\n    return txSignature.toXDR();\n  }\n\n  /**\n   * To envelope returns a xdr.TransactionEnvelope which can be submitted to the network.\n   * @returns {xdr.TransactionEnvelope}\n   */\n  toEnvelope() {\n    const envelope = new xdr.FeeBumpTransactionEnvelope({\n      tx: xdr.FeeBumpTransaction.fromXDR(this.tx.toXDR()), // make a copy of the tx\n      signatures: this.signatures.slice() // make a copy of the signatures\n    });\n\n    return new xdr.TransactionEnvelope.envelopeTypeTxFeeBump(envelope);\n  }\n}\n","// Automatically generated by xdrgen\n// DO NOT EDIT or your changes may be overwritten\n\n/* jshint maxstatements:2147483647  */\n/* jshint esnext:true  */\n\nimport * as XDR from 'js-xdr';\n\n\nvar types = XDR.config(xdr => {\n\n// === xdr source ============================================================\n//\n//   typedef opaque Value<>;\n//\n// ===========================================================================\nxdr.typedef(\"Value\", xdr.varOpaque());\n\n// === xdr source ============================================================\n//\n//   struct SCPBallot\n//   {\n//       uint32 counter; // n\n//       Value value;    // x\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScpBallot\", [\n  [\"counter\", xdr.lookup(\"Uint32\")],\n  [\"value\", xdr.lookup(\"Value\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum SCPStatementType\n//   {\n//       SCP_ST_PREPARE = 0,\n//       SCP_ST_CONFIRM = 1,\n//       SCP_ST_EXTERNALIZE = 2,\n//       SCP_ST_NOMINATE = 3\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ScpStatementType\", {\n  scpStPrepare: 0,\n  scpStConfirm: 1,\n  scpStExternalize: 2,\n  scpStNominate: 3,\n});\n\n// === xdr source ============================================================\n//\n//   struct SCPNomination\n//   {\n//       Hash quorumSetHash; // D\n//       Value votes<>;      // X\n//       Value accepted<>;   // Y\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScpNomination\", [\n  [\"quorumSetHash\", xdr.lookup(\"Hash\")],\n  [\"votes\", xdr.varArray(xdr.lookup(\"Value\"), 2147483647)],\n  [\"accepted\", xdr.varArray(xdr.lookup(\"Value\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//           {\n//               Hash quorumSetHash;       // D\n//               SCPBallot ballot;         // b\n//               SCPBallot* prepared;      // p\n//               SCPBallot* preparedPrime; // p'\n//               uint32 nC;                // c.n\n//               uint32 nH;                // h.n\n//           }\n//\n// ===========================================================================\nxdr.struct(\"ScpStatementPrepare\", [\n  [\"quorumSetHash\", xdr.lookup(\"Hash\")],\n  [\"ballot\", xdr.lookup(\"ScpBallot\")],\n  [\"prepared\", xdr.option(xdr.lookup(\"ScpBallot\"))],\n  [\"preparedPrime\", xdr.option(xdr.lookup(\"ScpBallot\"))],\n  [\"nC\", xdr.lookup(\"Uint32\")],\n  [\"nH\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//           {\n//               SCPBallot ballot;   // b\n//               uint32 nPrepared;   // p.n\n//               uint32 nCommit;     // c.n\n//               uint32 nH;          // h.n\n//               Hash quorumSetHash; // D\n//           }\n//\n// ===========================================================================\nxdr.struct(\"ScpStatementConfirm\", [\n  [\"ballot\", xdr.lookup(\"ScpBallot\")],\n  [\"nPrepared\", xdr.lookup(\"Uint32\")],\n  [\"nCommit\", xdr.lookup(\"Uint32\")],\n  [\"nH\", xdr.lookup(\"Uint32\")],\n  [\"quorumSetHash\", xdr.lookup(\"Hash\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//           {\n//               SCPBallot commit;         // c\n//               uint32 nH;                // h.n\n//               Hash commitQuorumSetHash; // D used before EXTERNALIZE\n//           }\n//\n// ===========================================================================\nxdr.struct(\"ScpStatementExternalize\", [\n  [\"commit\", xdr.lookup(\"ScpBallot\")],\n  [\"nH\", xdr.lookup(\"Uint32\")],\n  [\"commitQuorumSetHash\", xdr.lookup(\"Hash\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (SCPStatementType type)\n//       {\n//       case SCP_ST_PREPARE:\n//           struct\n//           {\n//               Hash quorumSetHash;       // D\n//               SCPBallot ballot;         // b\n//               SCPBallot* prepared;      // p\n//               SCPBallot* preparedPrime; // p'\n//               uint32 nC;                // c.n\n//               uint32 nH;                // h.n\n//           } prepare;\n//       case SCP_ST_CONFIRM:\n//           struct\n//           {\n//               SCPBallot ballot;   // b\n//               uint32 nPrepared;   // p.n\n//               uint32 nCommit;     // c.n\n//               uint32 nH;          // h.n\n//               Hash quorumSetHash; // D\n//           } confirm;\n//       case SCP_ST_EXTERNALIZE:\n//           struct\n//           {\n//               SCPBallot commit;         // c\n//               uint32 nH;                // h.n\n//               Hash commitQuorumSetHash; // D used before EXTERNALIZE\n//           } externalize;\n//       case SCP_ST_NOMINATE:\n//           SCPNomination nominate;\n//       }\n//\n// ===========================================================================\nxdr.union(\"ScpStatementPledges\", {\n  switchOn: xdr.lookup(\"ScpStatementType\"),\n  switchName: \"type\",\n  switches: [\n    [\"scpStPrepare\", \"prepare\"],\n    [\"scpStConfirm\", \"confirm\"],\n    [\"scpStExternalize\", \"externalize\"],\n    [\"scpStNominate\", \"nominate\"],\n  ],\n  arms: {\n    prepare: xdr.lookup(\"ScpStatementPrepare\"),\n    confirm: xdr.lookup(\"ScpStatementConfirm\"),\n    externalize: xdr.lookup(\"ScpStatementExternalize\"),\n    nominate: xdr.lookup(\"ScpNomination\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct SCPStatement\n//   {\n//       NodeID nodeID;    // v\n//       uint64 slotIndex; // i\n//   \n//       union switch (SCPStatementType type)\n//       {\n//       case SCP_ST_PREPARE:\n//           struct\n//           {\n//               Hash quorumSetHash;       // D\n//               SCPBallot ballot;         // b\n//               SCPBallot* prepared;      // p\n//               SCPBallot* preparedPrime; // p'\n//               uint32 nC;                // c.n\n//               uint32 nH;                // h.n\n//           } prepare;\n//       case SCP_ST_CONFIRM:\n//           struct\n//           {\n//               SCPBallot ballot;   // b\n//               uint32 nPrepared;   // p.n\n//               uint32 nCommit;     // c.n\n//               uint32 nH;          // h.n\n//               Hash quorumSetHash; // D\n//           } confirm;\n//       case SCP_ST_EXTERNALIZE:\n//           struct\n//           {\n//               SCPBallot commit;         // c\n//               uint32 nH;                // h.n\n//               Hash commitQuorumSetHash; // D used before EXTERNALIZE\n//           } externalize;\n//       case SCP_ST_NOMINATE:\n//           SCPNomination nominate;\n//       }\n//       pledges;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScpStatement\", [\n  [\"nodeId\", xdr.lookup(\"NodeId\")],\n  [\"slotIndex\", xdr.lookup(\"Uint64\")],\n  [\"pledges\", xdr.lookup(\"ScpStatementPledges\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCPEnvelope\n//   {\n//       SCPStatement statement;\n//       Signature signature;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScpEnvelope\", [\n  [\"statement\", xdr.lookup(\"ScpStatement\")],\n  [\"signature\", xdr.lookup(\"Signature\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCPQuorumSet\n//   {\n//       uint32 threshold;\n//       NodeID validators<>;\n//       SCPQuorumSet innerSets<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScpQuorumSet\", [\n  [\"threshold\", xdr.lookup(\"Uint32\")],\n  [\"validators\", xdr.varArray(xdr.lookup(\"NodeId\"), 2147483647)],\n  [\"innerSets\", xdr.varArray(xdr.lookup(\"ScpQuorumSet\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   typedef PublicKey AccountID;\n//\n// ===========================================================================\nxdr.typedef(\"AccountId\", xdr.lookup(\"PublicKey\"));\n\n// === xdr source ============================================================\n//\n//   typedef opaque Thresholds[4];\n//\n// ===========================================================================\nxdr.typedef(\"Thresholds\", xdr.opaque(4));\n\n// === xdr source ============================================================\n//\n//   typedef string string32<32>;\n//\n// ===========================================================================\nxdr.typedef(\"String32\", xdr.string(32));\n\n// === xdr source ============================================================\n//\n//   typedef string string64<64>;\n//\n// ===========================================================================\nxdr.typedef(\"String64\", xdr.string(64));\n\n// === xdr source ============================================================\n//\n//   typedef int64 SequenceNumber;\n//\n// ===========================================================================\nxdr.typedef(\"SequenceNumber\", xdr.lookup(\"Int64\"));\n\n// === xdr source ============================================================\n//\n//   typedef uint64 TimePoint;\n//\n// ===========================================================================\nxdr.typedef(\"TimePoint\", xdr.lookup(\"Uint64\"));\n\n// === xdr source ============================================================\n//\n//   typedef uint64 Duration;\n//\n// ===========================================================================\nxdr.typedef(\"Duration\", xdr.lookup(\"Uint64\"));\n\n// === xdr source ============================================================\n//\n//   typedef opaque DataValue<64>;\n//\n// ===========================================================================\nxdr.typedef(\"DataValue\", xdr.varOpaque(64));\n\n// === xdr source ============================================================\n//\n//   typedef Hash PoolID;\n//\n// ===========================================================================\nxdr.typedef(\"PoolId\", xdr.lookup(\"Hash\"));\n\n// === xdr source ============================================================\n//\n//   typedef opaque AssetCode4[4];\n//\n// ===========================================================================\nxdr.typedef(\"AssetCode4\", xdr.opaque(4));\n\n// === xdr source ============================================================\n//\n//   typedef opaque AssetCode12[12];\n//\n// ===========================================================================\nxdr.typedef(\"AssetCode12\", xdr.opaque(12));\n\n// === xdr source ============================================================\n//\n//   enum AssetType\n//   {\n//       ASSET_TYPE_NATIVE = 0,\n//       ASSET_TYPE_CREDIT_ALPHANUM4 = 1,\n//       ASSET_TYPE_CREDIT_ALPHANUM12 = 2,\n//       ASSET_TYPE_POOL_SHARE = 3\n//   };\n//\n// ===========================================================================\nxdr.enum(\"AssetType\", {\n  assetTypeNative: 0,\n  assetTypeCreditAlphanum4: 1,\n  assetTypeCreditAlphanum12: 2,\n  assetTypePoolShare: 3,\n});\n\n// === xdr source ============================================================\n//\n//   union AssetCode switch (AssetType type)\n//   {\n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\n//       AssetCode4 assetCode4;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\n//       AssetCode12 assetCode12;\n//   \n//       // add other asset types here in the future\n//   };\n//\n// ===========================================================================\nxdr.union(\"AssetCode\", {\n  switchOn: xdr.lookup(\"AssetType\"),\n  switchName: \"type\",\n  switches: [\n    [\"assetTypeCreditAlphanum4\", \"assetCode4\"],\n    [\"assetTypeCreditAlphanum12\", \"assetCode12\"],\n  ],\n  arms: {\n    assetCode4: xdr.lookup(\"AssetCode4\"),\n    assetCode12: xdr.lookup(\"AssetCode12\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct AlphaNum4\n//   {\n//       AssetCode4 assetCode;\n//       AccountID issuer;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AlphaNum4\", [\n  [\"assetCode\", xdr.lookup(\"AssetCode4\")],\n  [\"issuer\", xdr.lookup(\"AccountId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct AlphaNum12\n//   {\n//       AssetCode12 assetCode;\n//       AccountID issuer;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AlphaNum12\", [\n  [\"assetCode\", xdr.lookup(\"AssetCode12\")],\n  [\"issuer\", xdr.lookup(\"AccountId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union Asset switch (AssetType type)\n//   {\n//   case ASSET_TYPE_NATIVE: // Not credit\n//       void;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\n//       AlphaNum4 alphaNum4;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\n//       AlphaNum12 alphaNum12;\n//   \n//       // add other asset types here in the future\n//   };\n//\n// ===========================================================================\nxdr.union(\"Asset\", {\n  switchOn: xdr.lookup(\"AssetType\"),\n  switchName: \"type\",\n  switches: [\n    [\"assetTypeNative\", xdr.void()],\n    [\"assetTypeCreditAlphanum4\", \"alphaNum4\"],\n    [\"assetTypeCreditAlphanum12\", \"alphaNum12\"],\n  ],\n  arms: {\n    alphaNum4: xdr.lookup(\"AlphaNum4\"),\n    alphaNum12: xdr.lookup(\"AlphaNum12\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct Price\n//   {\n//       int32 n; // numerator\n//       int32 d; // denominator\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Price\", [\n  [\"n\", xdr.lookup(\"Int32\")],\n  [\"d\", xdr.lookup(\"Int32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct Liabilities\n//   {\n//       int64 buying;\n//       int64 selling;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Liabilities\", [\n  [\"buying\", xdr.lookup(\"Int64\")],\n  [\"selling\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum ThresholdIndexes\n//   {\n//       THRESHOLD_MASTER_WEIGHT = 0,\n//       THRESHOLD_LOW = 1,\n//       THRESHOLD_MED = 2,\n//       THRESHOLD_HIGH = 3\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ThresholdIndices\", {\n  thresholdMasterWeight: 0,\n  thresholdLow: 1,\n  thresholdMed: 2,\n  thresholdHigh: 3,\n});\n\n// === xdr source ============================================================\n//\n//   enum LedgerEntryType\n//   {\n//       ACCOUNT = 0,\n//       TRUSTLINE = 1,\n//       OFFER = 2,\n//       DATA = 3,\n//       CLAIMABLE_BALANCE = 4,\n//       LIQUIDITY_POOL = 5\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LedgerEntryType\", {\n  account: 0,\n  trustline: 1,\n  offer: 2,\n  data: 3,\n  claimableBalance: 4,\n  liquidityPool: 5,\n});\n\n// === xdr source ============================================================\n//\n//   struct Signer\n//   {\n//       SignerKey key;\n//       uint32 weight; // really only need 1 byte\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Signer\", [\n  [\"key\", xdr.lookup(\"SignerKey\")],\n  [\"weight\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum AccountFlags\n//   { // masks for each flag\n//   \n//       // Flags set on issuer accounts\n//       // TrustLines are created with authorized set to \"false\" requiring\n//       // the issuer to set it for each TrustLine\n//       AUTH_REQUIRED_FLAG = 0x1,\n//       // If set, the authorized flag in TrustLines can be cleared\n//       // otherwise, authorization cannot be revoked\n//       AUTH_REVOCABLE_FLAG = 0x2,\n//       // Once set, causes all AUTH_* flags to be read-only\n//       AUTH_IMMUTABLE_FLAG = 0x4,\n//       // Trustlines are created with clawback enabled set to \"true\",\n//       // and claimable balances created from those trustlines are created\n//       // with clawback enabled set to \"true\"\n//       AUTH_CLAWBACK_ENABLED_FLAG = 0x8\n//   };\n//\n// ===========================================================================\nxdr.enum(\"AccountFlags\", {\n  authRequiredFlag: 1,\n  authRevocableFlag: 2,\n  authImmutableFlag: 4,\n  authClawbackEnabledFlag: 8,\n});\n\n// === xdr source ============================================================\n//\n//   const MASK_ACCOUNT_FLAGS = 0x7;\n//\n// ===========================================================================\nxdr.const(\"MASK_ACCOUNT_FLAGS\", 0x7);\n\n// === xdr source ============================================================\n//\n//   const MASK_ACCOUNT_FLAGS_V17 = 0xF;\n//\n// ===========================================================================\nxdr.const(\"MASK_ACCOUNT_FLAGS_V17\", 0xF);\n\n// === xdr source ============================================================\n//\n//   const MAX_SIGNERS = 20;\n//\n// ===========================================================================\nxdr.const(\"MAX_SIGNERS\", 20);\n\n// === xdr source ============================================================\n//\n//   typedef AccountID* SponsorshipDescriptor;\n//\n// ===========================================================================\nxdr.typedef(\"SponsorshipDescriptor\", xdr.option(xdr.lookup(\"AccountId\")));\n\n// === xdr source ============================================================\n//\n//   struct AccountEntryExtensionV3\n//   {\n//       // We can use this to add more fields, or because it is first, to\n//       // change AccountEntryExtensionV3 into a union.\n//       ExtensionPoint ext;\n//   \n//       // Ledger number at which `seqNum` took on its present value.\n//       uint32 seqLedger;\n//   \n//       // Time at which `seqNum` took on its present value.\n//       TimePoint seqTime;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AccountEntryExtensionV3\", [\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\n  [\"seqLedger\", xdr.lookup(\"Uint32\")],\n  [\"seqTime\", xdr.lookup(\"TimePoint\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 3:\n//           AccountEntryExtensionV3 v3;\n//       }\n//\n// ===========================================================================\nxdr.union(\"AccountEntryExtensionV2Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [3, \"v3\"],\n  ],\n  arms: {\n    v3: xdr.lookup(\"AccountEntryExtensionV3\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct AccountEntryExtensionV2\n//   {\n//       uint32 numSponsored;\n//       uint32 numSponsoring;\n//       SponsorshipDescriptor signerSponsoringIDs<MAX_SIGNERS>;\n//   \n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 3:\n//           AccountEntryExtensionV3 v3;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AccountEntryExtensionV2\", [\n  [\"numSponsored\", xdr.lookup(\"Uint32\")],\n  [\"numSponsoring\", xdr.lookup(\"Uint32\")],\n  [\"signerSponsoringIDs\", xdr.varArray(xdr.lookup(\"SponsorshipDescriptor\"), xdr.lookup(\"MAX_SIGNERS\"))],\n  [\"ext\", xdr.lookup(\"AccountEntryExtensionV2Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 2:\n//           AccountEntryExtensionV2 v2;\n//       }\n//\n// ===========================================================================\nxdr.union(\"AccountEntryExtensionV1Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [2, \"v2\"],\n  ],\n  arms: {\n    v2: xdr.lookup(\"AccountEntryExtensionV2\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct AccountEntryExtensionV1\n//   {\n//       Liabilities liabilities;\n//   \n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 2:\n//           AccountEntryExtensionV2 v2;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AccountEntryExtensionV1\", [\n  [\"liabilities\", xdr.lookup(\"Liabilities\")],\n  [\"ext\", xdr.lookup(\"AccountEntryExtensionV1Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           AccountEntryExtensionV1 v1;\n//       }\n//\n// ===========================================================================\nxdr.union(\"AccountEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"AccountEntryExtensionV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct AccountEntry\n//   {\n//       AccountID accountID;      // master public key for this account\n//       int64 balance;            // in stroops\n//       SequenceNumber seqNum;    // last sequence number used for this account\n//       uint32 numSubEntries;     // number of sub-entries this account has\n//                                 // drives the reserve\n//       AccountID* inflationDest; // Account to vote for during inflation\n//       uint32 flags;             // see AccountFlags\n//   \n//       string32 homeDomain; // can be used for reverse federation and memo lookup\n//   \n//       // fields used for signatures\n//       // thresholds stores unsigned bytes: [weight of master|low|medium|high]\n//       Thresholds thresholds;\n//   \n//       Signer signers<MAX_SIGNERS>; // possible signers for this account\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           AccountEntryExtensionV1 v1;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AccountEntry\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n  [\"balance\", xdr.lookup(\"Int64\")],\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\n  [\"numSubEntries\", xdr.lookup(\"Uint32\")],\n  [\"inflationDest\", xdr.option(xdr.lookup(\"AccountId\"))],\n  [\"flags\", xdr.lookup(\"Uint32\")],\n  [\"homeDomain\", xdr.lookup(\"String32\")],\n  [\"thresholds\", xdr.lookup(\"Thresholds\")],\n  [\"signers\", xdr.varArray(xdr.lookup(\"Signer\"), xdr.lookup(\"MAX_SIGNERS\"))],\n  [\"ext\", xdr.lookup(\"AccountEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum TrustLineFlags\n//   {\n//       // issuer has authorized account to perform transactions with its credit\n//       AUTHORIZED_FLAG = 1,\n//       // issuer has authorized account to maintain and reduce liabilities for its\n//       // credit\n//       AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG = 2,\n//       // issuer has specified that it may clawback its credit, and that claimable\n//       // balances created with its credit may also be clawed back\n//       TRUSTLINE_CLAWBACK_ENABLED_FLAG = 4\n//   };\n//\n// ===========================================================================\nxdr.enum(\"TrustLineFlags\", {\n  authorizedFlag: 1,\n  authorizedToMaintainLiabilitiesFlag: 2,\n  trustlineClawbackEnabledFlag: 4,\n});\n\n// === xdr source ============================================================\n//\n//   const MASK_TRUSTLINE_FLAGS = 1;\n//\n// ===========================================================================\nxdr.const(\"MASK_TRUSTLINE_FLAGS\", 1);\n\n// === xdr source ============================================================\n//\n//   const MASK_TRUSTLINE_FLAGS_V13 = 3;\n//\n// ===========================================================================\nxdr.const(\"MASK_TRUSTLINE_FLAGS_V13\", 3);\n\n// === xdr source ============================================================\n//\n//   const MASK_TRUSTLINE_FLAGS_V17 = 7;\n//\n// ===========================================================================\nxdr.const(\"MASK_TRUSTLINE_FLAGS_V17\", 7);\n\n// === xdr source ============================================================\n//\n//   enum LiquidityPoolType\n//   {\n//       LIQUIDITY_POOL_CONSTANT_PRODUCT = 0\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LiquidityPoolType\", {\n  liquidityPoolConstantProduct: 0,\n});\n\n// === xdr source ============================================================\n//\n//   union TrustLineAsset switch (AssetType type)\n//   {\n//   case ASSET_TYPE_NATIVE: // Not credit\n//       void;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\n//       AlphaNum4 alphaNum4;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\n//       AlphaNum12 alphaNum12;\n//   \n//   case ASSET_TYPE_POOL_SHARE:\n//       PoolID liquidityPoolID;\n//   \n//       // add other asset types here in the future\n//   };\n//\n// ===========================================================================\nxdr.union(\"TrustLineAsset\", {\n  switchOn: xdr.lookup(\"AssetType\"),\n  switchName: \"type\",\n  switches: [\n    [\"assetTypeNative\", xdr.void()],\n    [\"assetTypeCreditAlphanum4\", \"alphaNum4\"],\n    [\"assetTypeCreditAlphanum12\", \"alphaNum12\"],\n    [\"assetTypePoolShare\", \"liquidityPoolId\"],\n  ],\n  arms: {\n    alphaNum4: xdr.lookup(\"AlphaNum4\"),\n    alphaNum12: xdr.lookup(\"AlphaNum12\"),\n    liquidityPoolId: xdr.lookup(\"PoolId\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TrustLineEntryExtensionV2Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TrustLineEntryExtensionV2\n//   {\n//       int32 liquidityPoolUseCount;\n//   \n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TrustLineEntryExtensionV2\", [\n  [\"liquidityPoolUseCount\", xdr.lookup(\"Int32\")],\n  [\"ext\", xdr.lookup(\"TrustLineEntryExtensionV2Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//               {\n//               case 0:\n//                   void;\n//               case 2:\n//                   TrustLineEntryExtensionV2 v2;\n//               }\n//\n// ===========================================================================\nxdr.union(\"TrustLineEntryV1Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [2, \"v2\"],\n  ],\n  arms: {\n    v2: xdr.lookup(\"TrustLineEntryExtensionV2\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//           {\n//               Liabilities liabilities;\n//   \n//               union switch (int v)\n//               {\n//               case 0:\n//                   void;\n//               case 2:\n//                   TrustLineEntryExtensionV2 v2;\n//               }\n//               ext;\n//           }\n//\n// ===========================================================================\nxdr.struct(\"TrustLineEntryV1\", [\n  [\"liabilities\", xdr.lookup(\"Liabilities\")],\n  [\"ext\", xdr.lookup(\"TrustLineEntryV1Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           struct\n//           {\n//               Liabilities liabilities;\n//   \n//               union switch (int v)\n//               {\n//               case 0:\n//                   void;\n//               case 2:\n//                   TrustLineEntryExtensionV2 v2;\n//               }\n//               ext;\n//           } v1;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TrustLineEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"TrustLineEntryV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TrustLineEntry\n//   {\n//       AccountID accountID;  // account this trustline belongs to\n//       TrustLineAsset asset; // type of asset (with issuer)\n//       int64 balance;        // how much of this asset the user has.\n//                             // Asset defines the unit for this;\n//   \n//       int64 limit;  // balance cannot be above this\n//       uint32 flags; // see TrustLineFlags\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           struct\n//           {\n//               Liabilities liabilities;\n//   \n//               union switch (int v)\n//               {\n//               case 0:\n//                   void;\n//               case 2:\n//                   TrustLineEntryExtensionV2 v2;\n//               }\n//               ext;\n//           } v1;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TrustLineEntry\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n  [\"asset\", xdr.lookup(\"TrustLineAsset\")],\n  [\"balance\", xdr.lookup(\"Int64\")],\n  [\"limit\", xdr.lookup(\"Int64\")],\n  [\"flags\", xdr.lookup(\"Uint32\")],\n  [\"ext\", xdr.lookup(\"TrustLineEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum OfferEntryFlags\n//   {\n//       // an offer with this flag will not act on and take a reverse offer of equal\n//       // price\n//       PASSIVE_FLAG = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"OfferEntryFlags\", {\n  passiveFlag: 1,\n});\n\n// === xdr source ============================================================\n//\n//   const MASK_OFFERENTRY_FLAGS = 1;\n//\n// ===========================================================================\nxdr.const(\"MASK_OFFERENTRY_FLAGS\", 1);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"OfferEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct OfferEntry\n//   {\n//       AccountID sellerID;\n//       int64 offerID;\n//       Asset selling; // A\n//       Asset buying;  // B\n//       int64 amount;  // amount of A\n//   \n//       /* price for this offer:\n//           price of A in terms of B\n//           price=AmountB/AmountA=priceNumerator/priceDenominator\n//           price is after fees\n//       */\n//       Price price;\n//       uint32 flags; // see OfferEntryFlags\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"OfferEntry\", [\n  [\"sellerId\", xdr.lookup(\"AccountId\")],\n  [\"offerId\", xdr.lookup(\"Int64\")],\n  [\"selling\", xdr.lookup(\"Asset\")],\n  [\"buying\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n  [\"price\", xdr.lookup(\"Price\")],\n  [\"flags\", xdr.lookup(\"Uint32\")],\n  [\"ext\", xdr.lookup(\"OfferEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"DataEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct DataEntry\n//   {\n//       AccountID accountID; // account this data belongs to\n//       string64 dataName;\n//       DataValue dataValue;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"DataEntry\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n  [\"dataName\", xdr.lookup(\"String64\")],\n  [\"dataValue\", xdr.lookup(\"DataValue\")],\n  [\"ext\", xdr.lookup(\"DataEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum ClaimPredicateType\n//   {\n//       CLAIM_PREDICATE_UNCONDITIONAL = 0,\n//       CLAIM_PREDICATE_AND = 1,\n//       CLAIM_PREDICATE_OR = 2,\n//       CLAIM_PREDICATE_NOT = 3,\n//       CLAIM_PREDICATE_BEFORE_ABSOLUTE_TIME = 4,\n//       CLAIM_PREDICATE_BEFORE_RELATIVE_TIME = 5\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClaimPredicateType\", {\n  claimPredicateUnconditional: 0,\n  claimPredicateAnd: 1,\n  claimPredicateOr: 2,\n  claimPredicateNot: 3,\n  claimPredicateBeforeAbsoluteTime: 4,\n  claimPredicateBeforeRelativeTime: 5,\n});\n\n// === xdr source ============================================================\n//\n//   union ClaimPredicate switch (ClaimPredicateType type)\n//   {\n//   case CLAIM_PREDICATE_UNCONDITIONAL:\n//       void;\n//   case CLAIM_PREDICATE_AND:\n//       ClaimPredicate andPredicates<2>;\n//   case CLAIM_PREDICATE_OR:\n//       ClaimPredicate orPredicates<2>;\n//   case CLAIM_PREDICATE_NOT:\n//       ClaimPredicate* notPredicate;\n//   case CLAIM_PREDICATE_BEFORE_ABSOLUTE_TIME:\n//       int64 absBefore; // Predicate will be true if closeTime < absBefore\n//   case CLAIM_PREDICATE_BEFORE_RELATIVE_TIME:\n//       int64 relBefore; // Seconds since closeTime of the ledger in which the\n//                        // ClaimableBalanceEntry was created\n//   };\n//\n// ===========================================================================\nxdr.union(\"ClaimPredicate\", {\n  switchOn: xdr.lookup(\"ClaimPredicateType\"),\n  switchName: \"type\",\n  switches: [\n    [\"claimPredicateUnconditional\", xdr.void()],\n    [\"claimPredicateAnd\", \"andPredicates\"],\n    [\"claimPredicateOr\", \"orPredicates\"],\n    [\"claimPredicateNot\", \"notPredicate\"],\n    [\"claimPredicateBeforeAbsoluteTime\", \"absBefore\"],\n    [\"claimPredicateBeforeRelativeTime\", \"relBefore\"],\n  ],\n  arms: {\n    andPredicates: xdr.varArray(xdr.lookup(\"ClaimPredicate\"), 2),\n    orPredicates: xdr.varArray(xdr.lookup(\"ClaimPredicate\"), 2),\n    notPredicate: xdr.option(xdr.lookup(\"ClaimPredicate\")),\n    absBefore: xdr.lookup(\"Int64\"),\n    relBefore: xdr.lookup(\"Int64\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ClaimantType\n//   {\n//       CLAIMANT_TYPE_V0 = 0\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClaimantType\", {\n  claimantTypeV0: 0,\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID destination;    // The account that can use this condition\n//           ClaimPredicate predicate; // Claimable if predicate is true\n//       }\n//\n// ===========================================================================\nxdr.struct(\"ClaimantV0\", [\n  [\"destination\", xdr.lookup(\"AccountId\")],\n  [\"predicate\", xdr.lookup(\"ClaimPredicate\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union Claimant switch (ClaimantType type)\n//   {\n//   case CLAIMANT_TYPE_V0:\n//       struct\n//       {\n//           AccountID destination;    // The account that can use this condition\n//           ClaimPredicate predicate; // Claimable if predicate is true\n//       } v0;\n//   };\n//\n// ===========================================================================\nxdr.union(\"Claimant\", {\n  switchOn: xdr.lookup(\"ClaimantType\"),\n  switchName: \"type\",\n  switches: [\n    [\"claimantTypeV0\", \"v0\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"ClaimantV0\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ClaimableBalanceIDType\n//   {\n//       CLAIMABLE_BALANCE_ID_TYPE_V0 = 0\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClaimableBalanceIdType\", {\n  claimableBalanceIdTypeV0: 0,\n});\n\n// === xdr source ============================================================\n//\n//   union ClaimableBalanceID switch (ClaimableBalanceIDType type)\n//   {\n//   case CLAIMABLE_BALANCE_ID_TYPE_V0:\n//       Hash v0;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ClaimableBalanceId\", {\n  switchOn: xdr.lookup(\"ClaimableBalanceIdType\"),\n  switchName: \"type\",\n  switches: [\n    [\"claimableBalanceIdTypeV0\", \"v0\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"Hash\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ClaimableBalanceFlags\n//   {\n//       // If set, the issuer account of the asset held by the claimable balance may\n//       // clawback the claimable balance\n//       CLAIMABLE_BALANCE_CLAWBACK_ENABLED_FLAG = 0x1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClaimableBalanceFlags\", {\n  claimableBalanceClawbackEnabledFlag: 1,\n});\n\n// === xdr source ============================================================\n//\n//   const MASK_CLAIMABLE_BALANCE_FLAGS = 0x1;\n//\n// ===========================================================================\nxdr.const(\"MASK_CLAIMABLE_BALANCE_FLAGS\", 0x1);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"ClaimableBalanceEntryExtensionV1Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ClaimableBalanceEntryExtensionV1\n//   {\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   \n//       uint32 flags; // see ClaimableBalanceFlags\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClaimableBalanceEntryExtensionV1\", [\n  [\"ext\", xdr.lookup(\"ClaimableBalanceEntryExtensionV1Ext\")],\n  [\"flags\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           ClaimableBalanceEntryExtensionV1 v1;\n//       }\n//\n// ===========================================================================\nxdr.union(\"ClaimableBalanceEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"ClaimableBalanceEntryExtensionV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ClaimableBalanceEntry\n//   {\n//       // Unique identifier for this ClaimableBalanceEntry\n//       ClaimableBalanceID balanceID;\n//   \n//       // List of claimants with associated predicate\n//       Claimant claimants<10>;\n//   \n//       // Any asset including native\n//       Asset asset;\n//   \n//       // Amount of asset\n//       int64 amount;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           ClaimableBalanceEntryExtensionV1 v1;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClaimableBalanceEntry\", [\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\n  [\"claimants\", xdr.varArray(xdr.lookup(\"Claimant\"), 10)],\n  [\"asset\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n  [\"ext\", xdr.lookup(\"ClaimableBalanceEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct LiquidityPoolConstantProductParameters\n//   {\n//       Asset assetA; // assetA < assetB\n//       Asset assetB;\n//       int32 fee; // Fee is in basis points, so the actual rate is (fee/100)%\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LiquidityPoolConstantProductParameters\", [\n  [\"assetA\", xdr.lookup(\"Asset\")],\n  [\"assetB\", xdr.lookup(\"Asset\")],\n  [\"fee\", xdr.lookup(\"Int32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//           {\n//               LiquidityPoolConstantProductParameters params;\n//   \n//               int64 reserveA;        // amount of A in the pool\n//               int64 reserveB;        // amount of B in the pool\n//               int64 totalPoolShares; // total number of pool shares issued\n//               int64 poolSharesTrustLineCount; // number of trust lines for the\n//                                               // associated pool shares\n//           }\n//\n// ===========================================================================\nxdr.struct(\"LiquidityPoolEntryConstantProduct\", [\n  [\"params\", xdr.lookup(\"LiquidityPoolConstantProductParameters\")],\n  [\"reserveA\", xdr.lookup(\"Int64\")],\n  [\"reserveB\", xdr.lookup(\"Int64\")],\n  [\"totalPoolShares\", xdr.lookup(\"Int64\")],\n  [\"poolSharesTrustLineCount\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (LiquidityPoolType type)\n//       {\n//       case LIQUIDITY_POOL_CONSTANT_PRODUCT:\n//           struct\n//           {\n//               LiquidityPoolConstantProductParameters params;\n//   \n//               int64 reserveA;        // amount of A in the pool\n//               int64 reserveB;        // amount of B in the pool\n//               int64 totalPoolShares; // total number of pool shares issued\n//               int64 poolSharesTrustLineCount; // number of trust lines for the\n//                                               // associated pool shares\n//           } constantProduct;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LiquidityPoolEntryBody\", {\n  switchOn: xdr.lookup(\"LiquidityPoolType\"),\n  switchName: \"type\",\n  switches: [\n    [\"liquidityPoolConstantProduct\", \"constantProduct\"],\n  ],\n  arms: {\n    constantProduct: xdr.lookup(\"LiquidityPoolEntryConstantProduct\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LiquidityPoolEntry\n//   {\n//       PoolID liquidityPoolID;\n//   \n//       union switch (LiquidityPoolType type)\n//       {\n//       case LIQUIDITY_POOL_CONSTANT_PRODUCT:\n//           struct\n//           {\n//               LiquidityPoolConstantProductParameters params;\n//   \n//               int64 reserveA;        // amount of A in the pool\n//               int64 reserveB;        // amount of B in the pool\n//               int64 totalPoolShares; // total number of pool shares issued\n//               int64 poolSharesTrustLineCount; // number of trust lines for the\n//                                               // associated pool shares\n//           } constantProduct;\n//       }\n//       body;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LiquidityPoolEntry\", [\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\n  [\"body\", xdr.lookup(\"LiquidityPoolEntryBody\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LedgerEntryExtensionV1Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerEntryExtensionV1\n//   {\n//       SponsorshipDescriptor sponsoringID;\n//   \n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerEntryExtensionV1\", [\n  [\"sponsoringId\", xdr.lookup(\"SponsorshipDescriptor\")],\n  [\"ext\", xdr.lookup(\"LedgerEntryExtensionV1Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (LedgerEntryType type)\n//       {\n//       case ACCOUNT:\n//           AccountEntry account;\n//       case TRUSTLINE:\n//           TrustLineEntry trustLine;\n//       case OFFER:\n//           OfferEntry offer;\n//       case DATA:\n//           DataEntry data;\n//       case CLAIMABLE_BALANCE:\n//           ClaimableBalanceEntry claimableBalance;\n//       case LIQUIDITY_POOL:\n//           LiquidityPoolEntry liquidityPool;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LedgerEntryData\", {\n  switchOn: xdr.lookup(\"LedgerEntryType\"),\n  switchName: \"type\",\n  switches: [\n    [\"account\", \"account\"],\n    [\"trustline\", \"trustLine\"],\n    [\"offer\", \"offer\"],\n    [\"data\", \"data\"],\n    [\"claimableBalance\", \"claimableBalance\"],\n    [\"liquidityPool\", \"liquidityPool\"],\n  ],\n  arms: {\n    account: xdr.lookup(\"AccountEntry\"),\n    trustLine: xdr.lookup(\"TrustLineEntry\"),\n    offer: xdr.lookup(\"OfferEntry\"),\n    data: xdr.lookup(\"DataEntry\"),\n    claimableBalance: xdr.lookup(\"ClaimableBalanceEntry\"),\n    liquidityPool: xdr.lookup(\"LiquidityPoolEntry\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           LedgerEntryExtensionV1 v1;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LedgerEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"LedgerEntryExtensionV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerEntry\n//   {\n//       uint32 lastModifiedLedgerSeq; // ledger the LedgerEntry was last changed\n//   \n//       union switch (LedgerEntryType type)\n//       {\n//       case ACCOUNT:\n//           AccountEntry account;\n//       case TRUSTLINE:\n//           TrustLineEntry trustLine;\n//       case OFFER:\n//           OfferEntry offer;\n//       case DATA:\n//           DataEntry data;\n//       case CLAIMABLE_BALANCE:\n//           ClaimableBalanceEntry claimableBalance;\n//       case LIQUIDITY_POOL:\n//           LiquidityPoolEntry liquidityPool;\n//       }\n//       data;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           LedgerEntryExtensionV1 v1;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerEntry\", [\n  [\"lastModifiedLedgerSeq\", xdr.lookup(\"Uint32\")],\n  [\"data\", xdr.lookup(\"LedgerEntryData\")],\n  [\"ext\", xdr.lookup(\"LedgerEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID accountID;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyAccount\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID accountID;\n//           TrustLineAsset asset;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyTrustLine\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n  [\"asset\", xdr.lookup(\"TrustLineAsset\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID sellerID;\n//           int64 offerID;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyOffer\", [\n  [\"sellerId\", xdr.lookup(\"AccountId\")],\n  [\"offerId\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID accountID;\n//           string64 dataName;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyData\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n  [\"dataName\", xdr.lookup(\"String64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           ClaimableBalanceID balanceID;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyClaimableBalance\", [\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           PoolID liquidityPoolID;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"LedgerKeyLiquidityPool\", [\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union LedgerKey switch (LedgerEntryType type)\n//   {\n//   case ACCOUNT:\n//       struct\n//       {\n//           AccountID accountID;\n//       } account;\n//   \n//   case TRUSTLINE:\n//       struct\n//       {\n//           AccountID accountID;\n//           TrustLineAsset asset;\n//       } trustLine;\n//   \n//   case OFFER:\n//       struct\n//       {\n//           AccountID sellerID;\n//           int64 offerID;\n//       } offer;\n//   \n//   case DATA:\n//       struct\n//       {\n//           AccountID accountID;\n//           string64 dataName;\n//       } data;\n//   \n//   case CLAIMABLE_BALANCE:\n//       struct\n//       {\n//           ClaimableBalanceID balanceID;\n//       } claimableBalance;\n//   \n//   case LIQUIDITY_POOL:\n//       struct\n//       {\n//           PoolID liquidityPoolID;\n//       } liquidityPool;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LedgerKey\", {\n  switchOn: xdr.lookup(\"LedgerEntryType\"),\n  switchName: \"type\",\n  switches: [\n    [\"account\", \"account\"],\n    [\"trustline\", \"trustLine\"],\n    [\"offer\", \"offer\"],\n    [\"data\", \"data\"],\n    [\"claimableBalance\", \"claimableBalance\"],\n    [\"liquidityPool\", \"liquidityPool\"],\n  ],\n  arms: {\n    account: xdr.lookup(\"LedgerKeyAccount\"),\n    trustLine: xdr.lookup(\"LedgerKeyTrustLine\"),\n    offer: xdr.lookup(\"LedgerKeyOffer\"),\n    data: xdr.lookup(\"LedgerKeyData\"),\n    claimableBalance: xdr.lookup(\"LedgerKeyClaimableBalance\"),\n    liquidityPool: xdr.lookup(\"LedgerKeyLiquidityPool\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum EnvelopeType\n//   {\n//       ENVELOPE_TYPE_TX_V0 = 0,\n//       ENVELOPE_TYPE_SCP = 1,\n//       ENVELOPE_TYPE_TX = 2,\n//       ENVELOPE_TYPE_AUTH = 3,\n//       ENVELOPE_TYPE_SCPVALUE = 4,\n//       ENVELOPE_TYPE_TX_FEE_BUMP = 5,\n//       ENVELOPE_TYPE_OP_ID = 6,\n//       ENVELOPE_TYPE_POOL_REVOKE_OP_ID = 7\n//   };\n//\n// ===========================================================================\nxdr.enum(\"EnvelopeType\", {\n  envelopeTypeTxV0: 0,\n  envelopeTypeScp: 1,\n  envelopeTypeTx: 2,\n  envelopeTypeAuth: 3,\n  envelopeTypeScpvalue: 4,\n  envelopeTypeTxFeeBump: 5,\n  envelopeTypeOpId: 6,\n  envelopeTypePoolRevokeOpId: 7,\n});\n\n// === xdr source ============================================================\n//\n//   typedef opaque UpgradeType<128>;\n//\n// ===========================================================================\nxdr.typedef(\"UpgradeType\", xdr.varOpaque(128));\n\n// === xdr source ============================================================\n//\n//   enum StellarValueType\n//   {\n//       STELLAR_VALUE_BASIC = 0,\n//       STELLAR_VALUE_SIGNED = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"StellarValueType\", {\n  stellarValueBasic: 0,\n  stellarValueSigned: 1,\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerCloseValueSignature\n//   {\n//       NodeID nodeID;       // which node introduced the value\n//       Signature signature; // nodeID's signature\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerCloseValueSignature\", [\n  [\"nodeId\", xdr.lookup(\"NodeId\")],\n  [\"signature\", xdr.lookup(\"Signature\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (StellarValueType v)\n//       {\n//       case STELLAR_VALUE_BASIC:\n//           void;\n//       case STELLAR_VALUE_SIGNED:\n//           LedgerCloseValueSignature lcValueSignature;\n//       }\n//\n// ===========================================================================\nxdr.union(\"StellarValueExt\", {\n  switchOn: xdr.lookup(\"StellarValueType\"),\n  switchName: \"v\",\n  switches: [\n    [\"stellarValueBasic\", xdr.void()],\n    [\"stellarValueSigned\", \"lcValueSignature\"],\n  ],\n  arms: {\n    lcValueSignature: xdr.lookup(\"LedgerCloseValueSignature\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct StellarValue\n//   {\n//       Hash txSetHash;      // transaction set to apply to previous ledger\n//       TimePoint closeTime; // network close time\n//   \n//       // upgrades to apply to the previous ledger (usually empty)\n//       // this is a vector of encoded 'LedgerUpgrade' so that nodes can drop\n//       // unknown steps during consensus if needed.\n//       // see notes below on 'LedgerUpgrade' for more detail\n//       // max size is dictated by number of upgrade types (+ room for future)\n//       UpgradeType upgrades<6>;\n//   \n//       // reserved for future use\n//       union switch (StellarValueType v)\n//       {\n//       case STELLAR_VALUE_BASIC:\n//           void;\n//       case STELLAR_VALUE_SIGNED:\n//           LedgerCloseValueSignature lcValueSignature;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"StellarValue\", [\n  [\"txSetHash\", xdr.lookup(\"Hash\")],\n  [\"closeTime\", xdr.lookup(\"TimePoint\")],\n  [\"upgrades\", xdr.varArray(xdr.lookup(\"UpgradeType\"), 6)],\n  [\"ext\", xdr.lookup(\"StellarValueExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   const MASK_LEDGER_HEADER_FLAGS = 0x7;\n//\n// ===========================================================================\nxdr.const(\"MASK_LEDGER_HEADER_FLAGS\", 0x7);\n\n// === xdr source ============================================================\n//\n//   enum LedgerHeaderFlags\n//   {\n//       DISABLE_LIQUIDITY_POOL_TRADING_FLAG = 0x1,\n//       DISABLE_LIQUIDITY_POOL_DEPOSIT_FLAG = 0x2,\n//       DISABLE_LIQUIDITY_POOL_WITHDRAWAL_FLAG = 0x4\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LedgerHeaderFlags\", {\n  disableLiquidityPoolTradingFlag: 1,\n  disableLiquidityPoolDepositFlag: 2,\n  disableLiquidityPoolWithdrawalFlag: 4,\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LedgerHeaderExtensionV1Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerHeaderExtensionV1\n//   {\n//       uint32 flags; // LedgerHeaderFlags\n//   \n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerHeaderExtensionV1\", [\n  [\"flags\", xdr.lookup(\"Uint32\")],\n  [\"ext\", xdr.lookup(\"LedgerHeaderExtensionV1Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           LedgerHeaderExtensionV1 v1;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LedgerHeaderExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"LedgerHeaderExtensionV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerHeader\n//   {\n//       uint32 ledgerVersion;    // the protocol version of the ledger\n//       Hash previousLedgerHash; // hash of the previous ledger header\n//       StellarValue scpValue;   // what consensus agreed to\n//       Hash txSetResultHash;    // the TransactionResultSet that led to this ledger\n//       Hash bucketListHash;     // hash of the ledger state\n//   \n//       uint32 ledgerSeq; // sequence number of this ledger\n//   \n//       int64 totalCoins; // total number of stroops in existence.\n//                         // 10,000,000 stroops in 1 XLM\n//   \n//       int64 feePool;       // fees burned since last inflation run\n//       uint32 inflationSeq; // inflation sequence number\n//   \n//       uint64 idPool; // last used global ID, used for generating objects\n//   \n//       uint32 baseFee;     // base fee per operation in stroops\n//       uint32 baseReserve; // account base reserve in stroops\n//   \n//       uint32 maxTxSetSize; // maximum size a transaction set can be\n//   \n//       Hash skipList[4]; // hashes of ledgers in the past. allows you to jump back\n//                         // in time without walking the chain back ledger by ledger\n//                         // each slot contains the oldest ledger that is mod of\n//                         // either 50  5000  50000 or 500000 depending on index\n//                         // skipList[0] mod(50), skipList[1] mod(5000), etc\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           LedgerHeaderExtensionV1 v1;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerHeader\", [\n  [\"ledgerVersion\", xdr.lookup(\"Uint32\")],\n  [\"previousLedgerHash\", xdr.lookup(\"Hash\")],\n  [\"scpValue\", xdr.lookup(\"StellarValue\")],\n  [\"txSetResultHash\", xdr.lookup(\"Hash\")],\n  [\"bucketListHash\", xdr.lookup(\"Hash\")],\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\n  [\"totalCoins\", xdr.lookup(\"Int64\")],\n  [\"feePool\", xdr.lookup(\"Int64\")],\n  [\"inflationSeq\", xdr.lookup(\"Uint32\")],\n  [\"idPool\", xdr.lookup(\"Uint64\")],\n  [\"baseFee\", xdr.lookup(\"Uint32\")],\n  [\"baseReserve\", xdr.lookup(\"Uint32\")],\n  [\"maxTxSetSize\", xdr.lookup(\"Uint32\")],\n  [\"skipList\", xdr.array(xdr.lookup(\"Hash\"), 4)],\n  [\"ext\", xdr.lookup(\"LedgerHeaderExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum LedgerUpgradeType\n//   {\n//       LEDGER_UPGRADE_VERSION = 1,\n//       LEDGER_UPGRADE_BASE_FEE = 2,\n//       LEDGER_UPGRADE_MAX_TX_SET_SIZE = 3,\n//       LEDGER_UPGRADE_BASE_RESERVE = 4,\n//       LEDGER_UPGRADE_FLAGS = 5\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LedgerUpgradeType\", {\n  ledgerUpgradeVersion: 1,\n  ledgerUpgradeBaseFee: 2,\n  ledgerUpgradeMaxTxSetSize: 3,\n  ledgerUpgradeBaseReserve: 4,\n  ledgerUpgradeFlags: 5,\n});\n\n// === xdr source ============================================================\n//\n//   union LedgerUpgrade switch (LedgerUpgradeType type)\n//   {\n//   case LEDGER_UPGRADE_VERSION:\n//       uint32 newLedgerVersion; // update ledgerVersion\n//   case LEDGER_UPGRADE_BASE_FEE:\n//       uint32 newBaseFee; // update baseFee\n//   case LEDGER_UPGRADE_MAX_TX_SET_SIZE:\n//       uint32 newMaxTxSetSize; // update maxTxSetSize\n//   case LEDGER_UPGRADE_BASE_RESERVE:\n//       uint32 newBaseReserve; // update baseReserve\n//   case LEDGER_UPGRADE_FLAGS:\n//       uint32 newFlags; // update flags\n//   };\n//\n// ===========================================================================\nxdr.union(\"LedgerUpgrade\", {\n  switchOn: xdr.lookup(\"LedgerUpgradeType\"),\n  switchName: \"type\",\n  switches: [\n    [\"ledgerUpgradeVersion\", \"newLedgerVersion\"],\n    [\"ledgerUpgradeBaseFee\", \"newBaseFee\"],\n    [\"ledgerUpgradeMaxTxSetSize\", \"newMaxTxSetSize\"],\n    [\"ledgerUpgradeBaseReserve\", \"newBaseReserve\"],\n    [\"ledgerUpgradeFlags\", \"newFlags\"],\n  ],\n  arms: {\n    newLedgerVersion: xdr.lookup(\"Uint32\"),\n    newBaseFee: xdr.lookup(\"Uint32\"),\n    newMaxTxSetSize: xdr.lookup(\"Uint32\"),\n    newBaseReserve: xdr.lookup(\"Uint32\"),\n    newFlags: xdr.lookup(\"Uint32\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum BucketEntryType\n//   {\n//       METAENTRY =\n//           -1, // At-and-after protocol 11: bucket metadata, should come first.\n//       LIVEENTRY = 0, // Before protocol 11: created-or-updated;\n//                      // At-and-after protocol 11: only updated.\n//       DEADENTRY = 1,\n//       INITENTRY = 2 // At-and-after protocol 11: only created.\n//   };\n//\n// ===========================================================================\nxdr.enum(\"BucketEntryType\", {\n  metaentry: -1,\n  liveentry: 0,\n  deadentry: 1,\n  initentry: 2,\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"BucketMetadataExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct BucketMetadata\n//   {\n//       // Indicates the protocol version used to create / merge this bucket.\n//       uint32 ledgerVersion;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"BucketMetadata\", [\n  [\"ledgerVersion\", xdr.lookup(\"Uint32\")],\n  [\"ext\", xdr.lookup(\"BucketMetadataExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union BucketEntry switch (BucketEntryType type)\n//   {\n//   case LIVEENTRY:\n//   case INITENTRY:\n//       LedgerEntry liveEntry;\n//   \n//   case DEADENTRY:\n//       LedgerKey deadEntry;\n//   case METAENTRY:\n//       BucketMetadata metaEntry;\n//   };\n//\n// ===========================================================================\nxdr.union(\"BucketEntry\", {\n  switchOn: xdr.lookup(\"BucketEntryType\"),\n  switchName: \"type\",\n  switches: [\n    [\"liveentry\", \"liveEntry\"],\n    [\"initentry\", \"liveEntry\"],\n    [\"deadentry\", \"deadEntry\"],\n    [\"metaentry\", \"metaEntry\"],\n  ],\n  arms: {\n    liveEntry: xdr.lookup(\"LedgerEntry\"),\n    deadEntry: xdr.lookup(\"LedgerKey\"),\n    metaEntry: xdr.lookup(\"BucketMetadata\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum TxSetComponentType\n//   {\n//     // txs with effective fee <= bid derived from a base fee (if any).\n//     // If base fee is not specified, no discount is applied.\n//     TXSET_COMP_TXS_MAYBE_DISCOUNTED_FEE = 0\n//   };\n//\n// ===========================================================================\nxdr.enum(\"TxSetComponentType\", {\n  txsetCompTxsMaybeDiscountedFee: 0,\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//     {\n//       int64* baseFee;\n//       TransactionEnvelope txs<>;\n//     }\n//\n// ===========================================================================\nxdr.struct(\"TxSetComponentTxsMaybeDiscountedFee\", [\n  [\"baseFee\", xdr.option(xdr.lookup(\"Int64\"))],\n  [\"txes\", xdr.varArray(xdr.lookup(\"TransactionEnvelope\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   union TxSetComponent switch (TxSetComponentType type)\n//   {\n//   case TXSET_COMP_TXS_MAYBE_DISCOUNTED_FEE:\n//     struct\n//     {\n//       int64* baseFee;\n//       TransactionEnvelope txs<>;\n//     } txsMaybeDiscountedFee;\n//   };\n//\n// ===========================================================================\nxdr.union(\"TxSetComponent\", {\n  switchOn: xdr.lookup(\"TxSetComponentType\"),\n  switchName: \"type\",\n  switches: [\n    [\"txsetCompTxsMaybeDiscountedFee\", \"txsMaybeDiscountedFee\"],\n  ],\n  arms: {\n    txsMaybeDiscountedFee: xdr.lookup(\"TxSetComponentTxsMaybeDiscountedFee\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union TransactionPhase switch (int v)\n//   {\n//   case 0:\n//       TxSetComponent v0Components<>;\n//   };\n//\n// ===========================================================================\nxdr.union(\"TransactionPhase\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, \"v0Components\"],\n  ],\n  arms: {\n    v0Components: xdr.varArray(xdr.lookup(\"TxSetComponent\"), 2147483647),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionSet\n//   {\n//       Hash previousLedgerHash;\n//       TransactionEnvelope txs<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionSet\", [\n  [\"previousLedgerHash\", xdr.lookup(\"Hash\")],\n  [\"txes\", xdr.varArray(xdr.lookup(\"TransactionEnvelope\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TransactionSetV1\n//   {\n//       Hash previousLedgerHash;\n//       TransactionPhase phases<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionSetV1\", [\n  [\"previousLedgerHash\", xdr.lookup(\"Hash\")],\n  [\"phases\", xdr.varArray(xdr.lookup(\"TransactionPhase\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   union GeneralizedTransactionSet switch (int v)\n//   {\n//   // We consider the legacy TransactionSet to be v0.\n//   case 1:\n//       TransactionSetV1 v1TxSet;\n//   };\n//\n// ===========================================================================\nxdr.union(\"GeneralizedTransactionSet\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [1, \"v1TxSet\"],\n  ],\n  arms: {\n    v1TxSet: xdr.lookup(\"TransactionSetV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionResultPair\n//   {\n//       Hash transactionHash;\n//       TransactionResult result; // result for the transaction\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionResultPair\", [\n  [\"transactionHash\", xdr.lookup(\"Hash\")],\n  [\"result\", xdr.lookup(\"TransactionResult\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TransactionResultSet\n//   {\n//       TransactionResultPair results<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionResultSet\", [\n  [\"results\", xdr.varArray(xdr.lookup(\"TransactionResultPair\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           GeneralizedTransactionSet generalizedTxSet;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionHistoryEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n    [1, \"generalizedTxSet\"],\n  ],\n  arms: {\n    generalizedTxSet: xdr.lookup(\"GeneralizedTransactionSet\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionHistoryEntry\n//   {\n//       uint32 ledgerSeq;\n//       TransactionSet txSet;\n//   \n//       // when v != 0, txSet must be empty\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       case 1:\n//           GeneralizedTransactionSet generalizedTxSet;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionHistoryEntry\", [\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\n  [\"txSet\", xdr.lookup(\"TransactionSet\")],\n  [\"ext\", xdr.lookup(\"TransactionHistoryEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionHistoryResultEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionHistoryResultEntry\n//   {\n//       uint32 ledgerSeq;\n//       TransactionResultSet txResultSet;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionHistoryResultEntry\", [\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\n  [\"txResultSet\", xdr.lookup(\"TransactionResultSet\")],\n  [\"ext\", xdr.lookup(\"TransactionHistoryResultEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"LedgerHeaderHistoryEntryExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct LedgerHeaderHistoryEntry\n//   {\n//       Hash hash;\n//       LedgerHeader header;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerHeaderHistoryEntry\", [\n  [\"hash\", xdr.lookup(\"Hash\")],\n  [\"header\", xdr.lookup(\"LedgerHeader\")],\n  [\"ext\", xdr.lookup(\"LedgerHeaderHistoryEntryExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct LedgerSCPMessages\n//   {\n//       uint32 ledgerSeq;\n//       SCPEnvelope messages<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerScpMessages\", [\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\n  [\"messages\", xdr.varArray(xdr.lookup(\"ScpEnvelope\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SCPHistoryEntryV0\n//   {\n//       SCPQuorumSet quorumSets<>; // additional quorum sets used by ledgerMessages\n//       LedgerSCPMessages ledgerMessages;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ScpHistoryEntryV0\", [\n  [\"quorumSets\", xdr.varArray(xdr.lookup(\"ScpQuorumSet\"), 2147483647)],\n  [\"ledgerMessages\", xdr.lookup(\"LedgerScpMessages\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union SCPHistoryEntry switch (int v)\n//   {\n//   case 0:\n//       SCPHistoryEntryV0 v0;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ScpHistoryEntry\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, \"v0\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"ScpHistoryEntryV0\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum LedgerEntryChangeType\n//   {\n//       LEDGER_ENTRY_CREATED = 0, // entry was added to the ledger\n//       LEDGER_ENTRY_UPDATED = 1, // entry was modified in the ledger\n//       LEDGER_ENTRY_REMOVED = 2, // entry was removed from the ledger\n//       LEDGER_ENTRY_STATE = 3    // value of the entry\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LedgerEntryChangeType\", {\n  ledgerEntryCreated: 0,\n  ledgerEntryUpdated: 1,\n  ledgerEntryRemoved: 2,\n  ledgerEntryState: 3,\n});\n\n// === xdr source ============================================================\n//\n//   union LedgerEntryChange switch (LedgerEntryChangeType type)\n//   {\n//   case LEDGER_ENTRY_CREATED:\n//       LedgerEntry created;\n//   case LEDGER_ENTRY_UPDATED:\n//       LedgerEntry updated;\n//   case LEDGER_ENTRY_REMOVED:\n//       LedgerKey removed;\n//   case LEDGER_ENTRY_STATE:\n//       LedgerEntry state;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LedgerEntryChange\", {\n  switchOn: xdr.lookup(\"LedgerEntryChangeType\"),\n  switchName: \"type\",\n  switches: [\n    [\"ledgerEntryCreated\", \"created\"],\n    [\"ledgerEntryUpdated\", \"updated\"],\n    [\"ledgerEntryRemoved\", \"removed\"],\n    [\"ledgerEntryState\", \"state\"],\n  ],\n  arms: {\n    created: xdr.lookup(\"LedgerEntry\"),\n    updated: xdr.lookup(\"LedgerEntry\"),\n    removed: xdr.lookup(\"LedgerKey\"),\n    state: xdr.lookup(\"LedgerEntry\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   typedef LedgerEntryChange LedgerEntryChanges<>;\n//\n// ===========================================================================\nxdr.typedef(\"LedgerEntryChanges\", xdr.varArray(xdr.lookup(\"LedgerEntryChange\"), 2147483647));\n\n// === xdr source ============================================================\n//\n//   struct OperationMeta\n//   {\n//       LedgerEntryChanges changes;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"OperationMeta\", [\n  [\"changes\", xdr.lookup(\"LedgerEntryChanges\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TransactionMetaV1\n//   {\n//       LedgerEntryChanges txChanges; // tx level changes if any\n//       OperationMeta operations<>;   // meta for each operation\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionMetaV1\", [\n  [\"txChanges\", xdr.lookup(\"LedgerEntryChanges\")],\n  [\"operations\", xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TransactionMetaV2\n//   {\n//       LedgerEntryChanges txChangesBefore; // tx level changes before operations\n//                                           // are applied if any\n//       OperationMeta operations<>;         // meta for each operation\n//       LedgerEntryChanges txChangesAfter;  // tx level changes after operations are\n//                                           // applied if any\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionMetaV2\", [\n  [\"txChangesBefore\", xdr.lookup(\"LedgerEntryChanges\")],\n  [\"operations\", xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647)],\n  [\"txChangesAfter\", xdr.lookup(\"LedgerEntryChanges\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union TransactionMeta switch (int v)\n//   {\n//   case 0:\n//       OperationMeta operations<>;\n//   case 1:\n//       TransactionMetaV1 v1;\n//   case 2:\n//       TransactionMetaV2 v2;\n//   };\n//\n// ===========================================================================\nxdr.union(\"TransactionMeta\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, \"operations\"],\n    [1, \"v1\"],\n    [2, \"v2\"],\n  ],\n  arms: {\n    operations: xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647),\n    v1: xdr.lookup(\"TransactionMetaV1\"),\n    v2: xdr.lookup(\"TransactionMetaV2\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionResultMeta\n//   {\n//       TransactionResultPair result;\n//       LedgerEntryChanges feeProcessing;\n//       TransactionMeta txApplyProcessing;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionResultMeta\", [\n  [\"result\", xdr.lookup(\"TransactionResultPair\")],\n  [\"feeProcessing\", xdr.lookup(\"LedgerEntryChanges\")],\n  [\"txApplyProcessing\", xdr.lookup(\"TransactionMeta\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct UpgradeEntryMeta\n//   {\n//       LedgerUpgrade upgrade;\n//       LedgerEntryChanges changes;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"UpgradeEntryMeta\", [\n  [\"upgrade\", xdr.lookup(\"LedgerUpgrade\")],\n  [\"changes\", xdr.lookup(\"LedgerEntryChanges\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct LedgerCloseMetaV0\n//   {\n//       LedgerHeaderHistoryEntry ledgerHeader;\n//       // NB: txSet is sorted in \"Hash order\"\n//       TransactionSet txSet;\n//   \n//       // NB: transactions are sorted in apply order here\n//       // fees for all transactions are processed first\n//       // followed by applying transactions\n//       TransactionResultMeta txProcessing<>;\n//   \n//       // upgrades are applied last\n//       UpgradeEntryMeta upgradesProcessing<>;\n//   \n//       // other misc information attached to the ledger close\n//       SCPHistoryEntry scpInfo<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerCloseMetaV0\", [\n  [\"ledgerHeader\", xdr.lookup(\"LedgerHeaderHistoryEntry\")],\n  [\"txSet\", xdr.lookup(\"TransactionSet\")],\n  [\"txProcessing\", xdr.varArray(xdr.lookup(\"TransactionResultMeta\"), 2147483647)],\n  [\"upgradesProcessing\", xdr.varArray(xdr.lookup(\"UpgradeEntryMeta\"), 2147483647)],\n  [\"scpInfo\", xdr.varArray(xdr.lookup(\"ScpHistoryEntry\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct LedgerCloseMetaV1\n//   {\n//       LedgerHeaderHistoryEntry ledgerHeader;\n//   \n//       GeneralizedTransactionSet txSet;\n//   \n//       // NB: transactions are sorted in apply order here\n//       // fees for all transactions are processed first\n//       // followed by applying transactions\n//       TransactionResultMeta txProcessing<>;\n//   \n//       // upgrades are applied last\n//       UpgradeEntryMeta upgradesProcessing<>;\n//   \n//       // other misc information attached to the ledger close\n//       SCPHistoryEntry scpInfo<>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerCloseMetaV1\", [\n  [\"ledgerHeader\", xdr.lookup(\"LedgerHeaderHistoryEntry\")],\n  [\"txSet\", xdr.lookup(\"GeneralizedTransactionSet\")],\n  [\"txProcessing\", xdr.varArray(xdr.lookup(\"TransactionResultMeta\"), 2147483647)],\n  [\"upgradesProcessing\", xdr.varArray(xdr.lookup(\"UpgradeEntryMeta\"), 2147483647)],\n  [\"scpInfo\", xdr.varArray(xdr.lookup(\"ScpHistoryEntry\"), 2147483647)],\n]);\n\n// === xdr source ============================================================\n//\n//   union LedgerCloseMeta switch (int v)\n//   {\n//   case 0:\n//       LedgerCloseMetaV0 v0;\n//   case 1:\n//       LedgerCloseMetaV1 v1;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LedgerCloseMeta\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, \"v0\"],\n    [1, \"v1\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"LedgerCloseMetaV0\"),\n    v1: xdr.lookup(\"LedgerCloseMetaV1\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ErrorCode\n//   {\n//       ERR_MISC = 0, // Unspecific error\n//       ERR_DATA = 1, // Malformed data\n//       ERR_CONF = 2, // Misconfiguration error\n//       ERR_AUTH = 3, // Authentication failure\n//       ERR_LOAD = 4  // System overloaded\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ErrorCode\", {\n  errMisc: 0,\n  errData: 1,\n  errConf: 2,\n  errAuth: 3,\n  errLoad: 4,\n});\n\n// === xdr source ============================================================\n//\n//   struct Error\n//   {\n//       ErrorCode code;\n//       string msg<100>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Error\", [\n  [\"code\", xdr.lookup(\"ErrorCode\")],\n  [\"msg\", xdr.string(100)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SendMore\n//   {\n//       uint32 numMessages;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SendMore\", [\n  [\"numMessages\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct AuthCert\n//   {\n//       Curve25519Public pubkey;\n//       uint64 expiration;\n//       Signature sig;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AuthCert\", [\n  [\"pubkey\", xdr.lookup(\"Curve25519Public\")],\n  [\"expiration\", xdr.lookup(\"Uint64\")],\n  [\"sig\", xdr.lookup(\"Signature\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct Hello\n//   {\n//       uint32 ledgerVersion;\n//       uint32 overlayVersion;\n//       uint32 overlayMinVersion;\n//       Hash networkID;\n//       string versionStr<100>;\n//       int listeningPort;\n//       NodeID peerID;\n//       AuthCert cert;\n//       uint256 nonce;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Hello\", [\n  [\"ledgerVersion\", xdr.lookup(\"Uint32\")],\n  [\"overlayVersion\", xdr.lookup(\"Uint32\")],\n  [\"overlayMinVersion\", xdr.lookup(\"Uint32\")],\n  [\"networkId\", xdr.lookup(\"Hash\")],\n  [\"versionStr\", xdr.string(100)],\n  [\"listeningPort\", xdr.int()],\n  [\"peerId\", xdr.lookup(\"NodeId\")],\n  [\"cert\", xdr.lookup(\"AuthCert\")],\n  [\"nonce\", xdr.lookup(\"Uint256\")],\n]);\n\n// === xdr source ============================================================\n//\n//   const AUTH_MSG_FLAG_PULL_MODE_REQUESTED = 100;\n//\n// ===========================================================================\nxdr.const(\"AUTH_MSG_FLAG_PULL_MODE_REQUESTED\", 100);\n\n// === xdr source ============================================================\n//\n//   struct Auth\n//   {\n//       int flags;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Auth\", [\n  [\"flags\", xdr.int()],\n]);\n\n// === xdr source ============================================================\n//\n//   enum IPAddrType\n//   {\n//       IPv4 = 0,\n//       IPv6 = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"IpAddrType\", {\n  iPv4: 0,\n  iPv6: 1,\n});\n\n// === xdr source ============================================================\n//\n//   union switch (IPAddrType type)\n//       {\n//       case IPv4:\n//           opaque ipv4[4];\n//       case IPv6:\n//           opaque ipv6[16];\n//       }\n//\n// ===========================================================================\nxdr.union(\"PeerAddressIp\", {\n  switchOn: xdr.lookup(\"IpAddrType\"),\n  switchName: \"type\",\n  switches: [\n    [\"iPv4\", \"ipv4\"],\n    [\"iPv6\", \"ipv6\"],\n  ],\n  arms: {\n    ipv4: xdr.opaque(4),\n    ipv6: xdr.opaque(16),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct PeerAddress\n//   {\n//       union switch (IPAddrType type)\n//       {\n//       case IPv4:\n//           opaque ipv4[4];\n//       case IPv6:\n//           opaque ipv6[16];\n//       }\n//       ip;\n//       uint32 port;\n//       uint32 numFailures;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"PeerAddress\", [\n  [\"ip\", xdr.lookup(\"PeerAddressIp\")],\n  [\"port\", xdr.lookup(\"Uint32\")],\n  [\"numFailures\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum MessageType\n//   {\n//       ERROR_MSG = 0,\n//       AUTH = 2,\n//       DONT_HAVE = 3,\n//   \n//       GET_PEERS = 4, // gets a list of peers this guy knows about\n//       PEERS = 5,\n//   \n//       GET_TX_SET = 6, // gets a particular txset by hash\n//       TX_SET = 7,\n//       GENERALIZED_TX_SET = 17,\n//   \n//       TRANSACTION = 8, // pass on a tx you have heard about\n//   \n//       // SCP\n//       GET_SCP_QUORUMSET = 9,\n//       SCP_QUORUMSET = 10,\n//       SCP_MESSAGE = 11,\n//       GET_SCP_STATE = 12,\n//   \n//       // new messages\n//       HELLO = 13,\n//   \n//       SURVEY_REQUEST = 14,\n//       SURVEY_RESPONSE = 15,\n//   \n//       SEND_MORE = 16,\n//       FLOOD_ADVERT = 18,\n//       FLOOD_DEMAND = 19\n//   };\n//\n// ===========================================================================\nxdr.enum(\"MessageType\", {\n  errorMsg: 0,\n  auth: 2,\n  dontHave: 3,\n  getPeers: 4,\n  peers: 5,\n  getTxSet: 6,\n  txSet: 7,\n  generalizedTxSet: 17,\n  transaction: 8,\n  getScpQuorumset: 9,\n  scpQuorumset: 10,\n  scpMessage: 11,\n  getScpState: 12,\n  hello: 13,\n  surveyRequest: 14,\n  surveyResponse: 15,\n  sendMore: 16,\n  floodAdvert: 18,\n  floodDemand: 19,\n});\n\n// === xdr source ============================================================\n//\n//   struct DontHave\n//   {\n//       MessageType type;\n//       uint256 reqHash;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"DontHave\", [\n  [\"type\", xdr.lookup(\"MessageType\")],\n  [\"reqHash\", xdr.lookup(\"Uint256\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum SurveyMessageCommandType\n//   {\n//       SURVEY_TOPOLOGY = 0\n//   };\n//\n// ===========================================================================\nxdr.enum(\"SurveyMessageCommandType\", {\n  surveyTopology: 0,\n});\n\n// === xdr source ============================================================\n//\n//   struct SurveyRequestMessage\n//   {\n//       NodeID surveyorPeerID;\n//       NodeID surveyedPeerID;\n//       uint32 ledgerNum;\n//       Curve25519Public encryptionKey;\n//       SurveyMessageCommandType commandType;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SurveyRequestMessage\", [\n  [\"surveyorPeerId\", xdr.lookup(\"NodeId\")],\n  [\"surveyedPeerId\", xdr.lookup(\"NodeId\")],\n  [\"ledgerNum\", xdr.lookup(\"Uint32\")],\n  [\"encryptionKey\", xdr.lookup(\"Curve25519Public\")],\n  [\"commandType\", xdr.lookup(\"SurveyMessageCommandType\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SignedSurveyRequestMessage\n//   {\n//       Signature requestSignature;\n//       SurveyRequestMessage request;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SignedSurveyRequestMessage\", [\n  [\"requestSignature\", xdr.lookup(\"Signature\")],\n  [\"request\", xdr.lookup(\"SurveyRequestMessage\")],\n]);\n\n// === xdr source ============================================================\n//\n//   typedef opaque EncryptedBody<64000>;\n//\n// ===========================================================================\nxdr.typedef(\"EncryptedBody\", xdr.varOpaque(64000));\n\n// === xdr source ============================================================\n//\n//   struct SurveyResponseMessage\n//   {\n//       NodeID surveyorPeerID;\n//       NodeID surveyedPeerID;\n//       uint32 ledgerNum;\n//       SurveyMessageCommandType commandType;\n//       EncryptedBody encryptedBody;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SurveyResponseMessage\", [\n  [\"surveyorPeerId\", xdr.lookup(\"NodeId\")],\n  [\"surveyedPeerId\", xdr.lookup(\"NodeId\")],\n  [\"ledgerNum\", xdr.lookup(\"Uint32\")],\n  [\"commandType\", xdr.lookup(\"SurveyMessageCommandType\")],\n  [\"encryptedBody\", xdr.lookup(\"EncryptedBody\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SignedSurveyResponseMessage\n//   {\n//       Signature responseSignature;\n//       SurveyResponseMessage response;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SignedSurveyResponseMessage\", [\n  [\"responseSignature\", xdr.lookup(\"Signature\")],\n  [\"response\", xdr.lookup(\"SurveyResponseMessage\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct PeerStats\n//   {\n//       NodeID id;\n//       string versionStr<100>;\n//       uint64 messagesRead;\n//       uint64 messagesWritten;\n//       uint64 bytesRead;\n//       uint64 bytesWritten;\n//       uint64 secondsConnected;\n//   \n//       uint64 uniqueFloodBytesRecv;\n//       uint64 duplicateFloodBytesRecv;\n//       uint64 uniqueFetchBytesRecv;\n//       uint64 duplicateFetchBytesRecv;\n//   \n//       uint64 uniqueFloodMessageRecv;\n//       uint64 duplicateFloodMessageRecv;\n//       uint64 uniqueFetchMessageRecv;\n//       uint64 duplicateFetchMessageRecv;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"PeerStats\", [\n  [\"id\", xdr.lookup(\"NodeId\")],\n  [\"versionStr\", xdr.string(100)],\n  [\"messagesRead\", xdr.lookup(\"Uint64\")],\n  [\"messagesWritten\", xdr.lookup(\"Uint64\")],\n  [\"bytesRead\", xdr.lookup(\"Uint64\")],\n  [\"bytesWritten\", xdr.lookup(\"Uint64\")],\n  [\"secondsConnected\", xdr.lookup(\"Uint64\")],\n  [\"uniqueFloodBytesRecv\", xdr.lookup(\"Uint64\")],\n  [\"duplicateFloodBytesRecv\", xdr.lookup(\"Uint64\")],\n  [\"uniqueFetchBytesRecv\", xdr.lookup(\"Uint64\")],\n  [\"duplicateFetchBytesRecv\", xdr.lookup(\"Uint64\")],\n  [\"uniqueFloodMessageRecv\", xdr.lookup(\"Uint64\")],\n  [\"duplicateFloodMessageRecv\", xdr.lookup(\"Uint64\")],\n  [\"uniqueFetchMessageRecv\", xdr.lookup(\"Uint64\")],\n  [\"duplicateFetchMessageRecv\", xdr.lookup(\"Uint64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   typedef PeerStats PeerStatList<25>;\n//\n// ===========================================================================\nxdr.typedef(\"PeerStatList\", xdr.varArray(xdr.lookup(\"PeerStats\"), 25));\n\n// === xdr source ============================================================\n//\n//   struct TopologyResponseBody\n//   {\n//       PeerStatList inboundPeers;\n//       PeerStatList outboundPeers;\n//   \n//       uint32 totalInboundPeerCount;\n//       uint32 totalOutboundPeerCount;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TopologyResponseBody\", [\n  [\"inboundPeers\", xdr.lookup(\"PeerStatList\")],\n  [\"outboundPeers\", xdr.lookup(\"PeerStatList\")],\n  [\"totalInboundPeerCount\", xdr.lookup(\"Uint32\")],\n  [\"totalOutboundPeerCount\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union SurveyResponseBody switch (SurveyMessageCommandType type)\n//   {\n//   case SURVEY_TOPOLOGY:\n//       TopologyResponseBody topologyResponseBody;\n//   };\n//\n// ===========================================================================\nxdr.union(\"SurveyResponseBody\", {\n  switchOn: xdr.lookup(\"SurveyMessageCommandType\"),\n  switchName: \"type\",\n  switches: [\n    [\"surveyTopology\", \"topologyResponseBody\"],\n  ],\n  arms: {\n    topologyResponseBody: xdr.lookup(\"TopologyResponseBody\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   const TX_ADVERT_VECTOR_MAX_SIZE = 1000;\n//\n// ===========================================================================\nxdr.const(\"TX_ADVERT_VECTOR_MAX_SIZE\", 1000);\n\n// === xdr source ============================================================\n//\n//   typedef Hash TxAdvertVector<TX_ADVERT_VECTOR_MAX_SIZE>;\n//\n// ===========================================================================\nxdr.typedef(\"TxAdvertVector\", xdr.varArray(xdr.lookup(\"Hash\"), xdr.lookup(\"TX_ADVERT_VECTOR_MAX_SIZE\")));\n\n// === xdr source ============================================================\n//\n//   struct FloodAdvert\n//   {\n//       TxAdvertVector txHashes;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"FloodAdvert\", [\n  [\"txHashes\", xdr.lookup(\"TxAdvertVector\")],\n]);\n\n// === xdr source ============================================================\n//\n//   const TX_DEMAND_VECTOR_MAX_SIZE = 1000;\n//\n// ===========================================================================\nxdr.const(\"TX_DEMAND_VECTOR_MAX_SIZE\", 1000);\n\n// === xdr source ============================================================\n//\n//   typedef Hash TxDemandVector<TX_DEMAND_VECTOR_MAX_SIZE>;\n//\n// ===========================================================================\nxdr.typedef(\"TxDemandVector\", xdr.varArray(xdr.lookup(\"Hash\"), xdr.lookup(\"TX_DEMAND_VECTOR_MAX_SIZE\")));\n\n// === xdr source ============================================================\n//\n//   struct FloodDemand\n//   {\n//       TxDemandVector txHashes;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"FloodDemand\", [\n  [\"txHashes\", xdr.lookup(\"TxDemandVector\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union StellarMessage switch (MessageType type)\n//   {\n//   case ERROR_MSG:\n//       Error error;\n//   case HELLO:\n//       Hello hello;\n//   case AUTH:\n//       Auth auth;\n//   case DONT_HAVE:\n//       DontHave dontHave;\n//   case GET_PEERS:\n//       void;\n//   case PEERS:\n//       PeerAddress peers<100>;\n//   \n//   case GET_TX_SET:\n//       uint256 txSetHash;\n//   case TX_SET:\n//       TransactionSet txSet;\n//   case GENERALIZED_TX_SET:\n//       GeneralizedTransactionSet generalizedTxSet;\n//   \n//   case TRANSACTION:\n//       TransactionEnvelope transaction;\n//   \n//   case SURVEY_REQUEST:\n//       SignedSurveyRequestMessage signedSurveyRequestMessage;\n//   \n//   case SURVEY_RESPONSE:\n//       SignedSurveyResponseMessage signedSurveyResponseMessage;\n//   \n//   // SCP\n//   case GET_SCP_QUORUMSET:\n//       uint256 qSetHash;\n//   case SCP_QUORUMSET:\n//       SCPQuorumSet qSet;\n//   case SCP_MESSAGE:\n//       SCPEnvelope envelope;\n//   case GET_SCP_STATE:\n//       uint32 getSCPLedgerSeq; // ledger seq requested ; if 0, requests the latest\n//   case SEND_MORE:\n//       SendMore sendMoreMessage;\n//   \n//   // Pull mode\n//   case FLOOD_ADVERT:\n//        FloodAdvert floodAdvert;\n//   case FLOOD_DEMAND:\n//        FloodDemand floodDemand;\n//   };\n//\n// ===========================================================================\nxdr.union(\"StellarMessage\", {\n  switchOn: xdr.lookup(\"MessageType\"),\n  switchName: \"type\",\n  switches: [\n    [\"errorMsg\", \"error\"],\n    [\"hello\", \"hello\"],\n    [\"auth\", \"auth\"],\n    [\"dontHave\", \"dontHave\"],\n    [\"getPeers\", xdr.void()],\n    [\"peers\", \"peers\"],\n    [\"getTxSet\", \"txSetHash\"],\n    [\"txSet\", \"txSet\"],\n    [\"generalizedTxSet\", \"generalizedTxSet\"],\n    [\"transaction\", \"transaction\"],\n    [\"surveyRequest\", \"signedSurveyRequestMessage\"],\n    [\"surveyResponse\", \"signedSurveyResponseMessage\"],\n    [\"getScpQuorumset\", \"qSetHash\"],\n    [\"scpQuorumset\", \"qSet\"],\n    [\"scpMessage\", \"envelope\"],\n    [\"getScpState\", \"getScpLedgerSeq\"],\n    [\"sendMore\", \"sendMoreMessage\"],\n    [\"floodAdvert\", \"floodAdvert\"],\n    [\"floodDemand\", \"floodDemand\"],\n  ],\n  arms: {\n    error: xdr.lookup(\"Error\"),\n    hello: xdr.lookup(\"Hello\"),\n    auth: xdr.lookup(\"Auth\"),\n    dontHave: xdr.lookup(\"DontHave\"),\n    peers: xdr.varArray(xdr.lookup(\"PeerAddress\"), 100),\n    txSetHash: xdr.lookup(\"Uint256\"),\n    txSet: xdr.lookup(\"TransactionSet\"),\n    generalizedTxSet: xdr.lookup(\"GeneralizedTransactionSet\"),\n    transaction: xdr.lookup(\"TransactionEnvelope\"),\n    signedSurveyRequestMessage: xdr.lookup(\"SignedSurveyRequestMessage\"),\n    signedSurveyResponseMessage: xdr.lookup(\"SignedSurveyResponseMessage\"),\n    qSetHash: xdr.lookup(\"Uint256\"),\n    qSet: xdr.lookup(\"ScpQuorumSet\"),\n    envelope: xdr.lookup(\"ScpEnvelope\"),\n    getScpLedgerSeq: xdr.lookup(\"Uint32\"),\n    sendMoreMessage: xdr.lookup(\"SendMore\"),\n    floodAdvert: xdr.lookup(\"FloodAdvert\"),\n    floodDemand: xdr.lookup(\"FloodDemand\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           uint64 sequence;\n//           StellarMessage message;\n//           HmacSha256Mac mac;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"AuthenticatedMessageV0\", [\n  [\"sequence\", xdr.lookup(\"Uint64\")],\n  [\"message\", xdr.lookup(\"StellarMessage\")],\n  [\"mac\", xdr.lookup(\"HmacSha256Mac\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union AuthenticatedMessage switch (uint32 v)\n//   {\n//   case 0:\n//       struct\n//       {\n//           uint64 sequence;\n//           StellarMessage message;\n//           HmacSha256Mac mac;\n//       } v0;\n//   };\n//\n// ===========================================================================\nxdr.union(\"AuthenticatedMessage\", {\n  switchOn: xdr.lookup(\"Uint32\"),\n  switchName: \"v\",\n  switches: [\n    [0, \"v0\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"AuthenticatedMessageV0\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union LiquidityPoolParameters switch (LiquidityPoolType type)\n//   {\n//   case LIQUIDITY_POOL_CONSTANT_PRODUCT:\n//       LiquidityPoolConstantProductParameters constantProduct;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LiquidityPoolParameters\", {\n  switchOn: xdr.lookup(\"LiquidityPoolType\"),\n  switchName: \"type\",\n  switches: [\n    [\"liquidityPoolConstantProduct\", \"constantProduct\"],\n  ],\n  arms: {\n    constantProduct: xdr.lookup(\"LiquidityPoolConstantProductParameters\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           uint64 id;\n//           uint256 ed25519;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"MuxedAccountMed25519\", [\n  [\"id\", xdr.lookup(\"Uint64\")],\n  [\"ed25519\", xdr.lookup(\"Uint256\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union MuxedAccount switch (CryptoKeyType type)\n//   {\n//   case KEY_TYPE_ED25519:\n//       uint256 ed25519;\n//   case KEY_TYPE_MUXED_ED25519:\n//       struct\n//       {\n//           uint64 id;\n//           uint256 ed25519;\n//       } med25519;\n//   };\n//\n// ===========================================================================\nxdr.union(\"MuxedAccount\", {\n  switchOn: xdr.lookup(\"CryptoKeyType\"),\n  switchName: \"type\",\n  switches: [\n    [\"keyTypeEd25519\", \"ed25519\"],\n    [\"keyTypeMuxedEd25519\", \"med25519\"],\n  ],\n  arms: {\n    ed25519: xdr.lookup(\"Uint256\"),\n    med25519: xdr.lookup(\"MuxedAccountMed25519\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct DecoratedSignature\n//   {\n//       SignatureHint hint;  // last 4 bytes of the public key, used as a hint\n//       Signature signature; // actual signature\n//   };\n//\n// ===========================================================================\nxdr.struct(\"DecoratedSignature\", [\n  [\"hint\", xdr.lookup(\"SignatureHint\")],\n  [\"signature\", xdr.lookup(\"Signature\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum OperationType\n//   {\n//       CREATE_ACCOUNT = 0,\n//       PAYMENT = 1,\n//       PATH_PAYMENT_STRICT_RECEIVE = 2,\n//       MANAGE_SELL_OFFER = 3,\n//       CREATE_PASSIVE_SELL_OFFER = 4,\n//       SET_OPTIONS = 5,\n//       CHANGE_TRUST = 6,\n//       ALLOW_TRUST = 7,\n//       ACCOUNT_MERGE = 8,\n//       INFLATION = 9,\n//       MANAGE_DATA = 10,\n//       BUMP_SEQUENCE = 11,\n//       MANAGE_BUY_OFFER = 12,\n//       PATH_PAYMENT_STRICT_SEND = 13,\n//       CREATE_CLAIMABLE_BALANCE = 14,\n//       CLAIM_CLAIMABLE_BALANCE = 15,\n//       BEGIN_SPONSORING_FUTURE_RESERVES = 16,\n//       END_SPONSORING_FUTURE_RESERVES = 17,\n//       REVOKE_SPONSORSHIP = 18,\n//       CLAWBACK = 19,\n//       CLAWBACK_CLAIMABLE_BALANCE = 20,\n//       SET_TRUST_LINE_FLAGS = 21,\n//       LIQUIDITY_POOL_DEPOSIT = 22,\n//       LIQUIDITY_POOL_WITHDRAW = 23\n//   };\n//\n// ===========================================================================\nxdr.enum(\"OperationType\", {\n  createAccount: 0,\n  payment: 1,\n  pathPaymentStrictReceive: 2,\n  manageSellOffer: 3,\n  createPassiveSellOffer: 4,\n  setOptions: 5,\n  changeTrust: 6,\n  allowTrust: 7,\n  accountMerge: 8,\n  inflation: 9,\n  manageData: 10,\n  bumpSequence: 11,\n  manageBuyOffer: 12,\n  pathPaymentStrictSend: 13,\n  createClaimableBalance: 14,\n  claimClaimableBalance: 15,\n  beginSponsoringFutureReserves: 16,\n  endSponsoringFutureReserves: 17,\n  revokeSponsorship: 18,\n  clawback: 19,\n  clawbackClaimableBalance: 20,\n  setTrustLineFlags: 21,\n  liquidityPoolDeposit: 22,\n  liquidityPoolWithdraw: 23,\n});\n\n// === xdr source ============================================================\n//\n//   struct CreateAccountOp\n//   {\n//       AccountID destination; // account to create\n//       int64 startingBalance; // amount they end up with\n//   };\n//\n// ===========================================================================\nxdr.struct(\"CreateAccountOp\", [\n  [\"destination\", xdr.lookup(\"AccountId\")],\n  [\"startingBalance\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct PaymentOp\n//   {\n//       MuxedAccount destination; // recipient of the payment\n//       Asset asset;              // what they end up with\n//       int64 amount;             // amount they end up with\n//   };\n//\n// ===========================================================================\nxdr.struct(\"PaymentOp\", [\n  [\"destination\", xdr.lookup(\"MuxedAccount\")],\n  [\"asset\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct PathPaymentStrictReceiveOp\n//   {\n//       Asset sendAsset; // asset we pay with\n//       int64 sendMax;   // the maximum amount of sendAsset to\n//                        // send (excluding fees).\n//                        // The operation will fail if can't be met\n//   \n//       MuxedAccount destination; // recipient of the payment\n//       Asset destAsset;          // what they end up with\n//       int64 destAmount;         // amount they end up with\n//   \n//       Asset path<5>; // additional hops it must go through to get there\n//   };\n//\n// ===========================================================================\nxdr.struct(\"PathPaymentStrictReceiveOp\", [\n  [\"sendAsset\", xdr.lookup(\"Asset\")],\n  [\"sendMax\", xdr.lookup(\"Int64\")],\n  [\"destination\", xdr.lookup(\"MuxedAccount\")],\n  [\"destAsset\", xdr.lookup(\"Asset\")],\n  [\"destAmount\", xdr.lookup(\"Int64\")],\n  [\"path\", xdr.varArray(xdr.lookup(\"Asset\"), 5)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct PathPaymentStrictSendOp\n//   {\n//       Asset sendAsset;  // asset we pay with\n//       int64 sendAmount; // amount of sendAsset to send (excluding fees)\n//   \n//       MuxedAccount destination; // recipient of the payment\n//       Asset destAsset;          // what they end up with\n//       int64 destMin;            // the minimum amount of dest asset to\n//                                 // be received\n//                                 // The operation will fail if it can't be met\n//   \n//       Asset path<5>; // additional hops it must go through to get there\n//   };\n//\n// ===========================================================================\nxdr.struct(\"PathPaymentStrictSendOp\", [\n  [\"sendAsset\", xdr.lookup(\"Asset\")],\n  [\"sendAmount\", xdr.lookup(\"Int64\")],\n  [\"destination\", xdr.lookup(\"MuxedAccount\")],\n  [\"destAsset\", xdr.lookup(\"Asset\")],\n  [\"destMin\", xdr.lookup(\"Int64\")],\n  [\"path\", xdr.varArray(xdr.lookup(\"Asset\"), 5)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ManageSellOfferOp\n//   {\n//       Asset selling;\n//       Asset buying;\n//       int64 amount; // amount being sold. if set to 0, delete the offer\n//       Price price;  // price of thing being sold in terms of what you are buying\n//   \n//       // 0=create a new offer, otherwise edit an existing offer\n//       int64 offerID;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ManageSellOfferOp\", [\n  [\"selling\", xdr.lookup(\"Asset\")],\n  [\"buying\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n  [\"price\", xdr.lookup(\"Price\")],\n  [\"offerId\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ManageBuyOfferOp\n//   {\n//       Asset selling;\n//       Asset buying;\n//       int64 buyAmount; // amount being bought. if set to 0, delete the offer\n//       Price price;     // price of thing being bought in terms of what you are\n//                        // selling\n//   \n//       // 0=create a new offer, otherwise edit an existing offer\n//       int64 offerID;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ManageBuyOfferOp\", [\n  [\"selling\", xdr.lookup(\"Asset\")],\n  [\"buying\", xdr.lookup(\"Asset\")],\n  [\"buyAmount\", xdr.lookup(\"Int64\")],\n  [\"price\", xdr.lookup(\"Price\")],\n  [\"offerId\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct CreatePassiveSellOfferOp\n//   {\n//       Asset selling; // A\n//       Asset buying;  // B\n//       int64 amount;  // amount taker gets\n//       Price price;   // cost of A in terms of B\n//   };\n//\n// ===========================================================================\nxdr.struct(\"CreatePassiveSellOfferOp\", [\n  [\"selling\", xdr.lookup(\"Asset\")],\n  [\"buying\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n  [\"price\", xdr.lookup(\"Price\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SetOptionsOp\n//   {\n//       AccountID* inflationDest; // sets the inflation destination\n//   \n//       uint32* clearFlags; // which flags to clear\n//       uint32* setFlags;   // which flags to set\n//   \n//       // account threshold manipulation\n//       uint32* masterWeight; // weight of the master account\n//       uint32* lowThreshold;\n//       uint32* medThreshold;\n//       uint32* highThreshold;\n//   \n//       string32* homeDomain; // sets the home domain\n//   \n//       // Add, update or remove a signer for the account\n//       // signer is deleted if the weight is 0\n//       Signer* signer;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SetOptionsOp\", [\n  [\"inflationDest\", xdr.option(xdr.lookup(\"AccountId\"))],\n  [\"clearFlags\", xdr.option(xdr.lookup(\"Uint32\"))],\n  [\"setFlags\", xdr.option(xdr.lookup(\"Uint32\"))],\n  [\"masterWeight\", xdr.option(xdr.lookup(\"Uint32\"))],\n  [\"lowThreshold\", xdr.option(xdr.lookup(\"Uint32\"))],\n  [\"medThreshold\", xdr.option(xdr.lookup(\"Uint32\"))],\n  [\"highThreshold\", xdr.option(xdr.lookup(\"Uint32\"))],\n  [\"homeDomain\", xdr.option(xdr.lookup(\"String32\"))],\n  [\"signer\", xdr.option(xdr.lookup(\"Signer\"))],\n]);\n\n// === xdr source ============================================================\n//\n//   union ChangeTrustAsset switch (AssetType type)\n//   {\n//   case ASSET_TYPE_NATIVE: // Not credit\n//       void;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\n//       AlphaNum4 alphaNum4;\n//   \n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\n//       AlphaNum12 alphaNum12;\n//   \n//   case ASSET_TYPE_POOL_SHARE:\n//       LiquidityPoolParameters liquidityPool;\n//   \n//       // add other asset types here in the future\n//   };\n//\n// ===========================================================================\nxdr.union(\"ChangeTrustAsset\", {\n  switchOn: xdr.lookup(\"AssetType\"),\n  switchName: \"type\",\n  switches: [\n    [\"assetTypeNative\", xdr.void()],\n    [\"assetTypeCreditAlphanum4\", \"alphaNum4\"],\n    [\"assetTypeCreditAlphanum12\", \"alphaNum12\"],\n    [\"assetTypePoolShare\", \"liquidityPool\"],\n  ],\n  arms: {\n    alphaNum4: xdr.lookup(\"AlphaNum4\"),\n    alphaNum12: xdr.lookup(\"AlphaNum12\"),\n    liquidityPool: xdr.lookup(\"LiquidityPoolParameters\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ChangeTrustOp\n//   {\n//       ChangeTrustAsset line;\n//   \n//       // if limit is set to 0, deletes the trust line\n//       int64 limit;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ChangeTrustOp\", [\n  [\"line\", xdr.lookup(\"ChangeTrustAsset\")],\n  [\"limit\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct AllowTrustOp\n//   {\n//       AccountID trustor;\n//       AssetCode asset;\n//   \n//       // One of 0, AUTHORIZED_FLAG, or AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG\n//       uint32 authorize;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"AllowTrustOp\", [\n  [\"trustor\", xdr.lookup(\"AccountId\")],\n  [\"asset\", xdr.lookup(\"AssetCode\")],\n  [\"authorize\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ManageDataOp\n//   {\n//       string64 dataName;\n//       DataValue* dataValue; // set to null to clear\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ManageDataOp\", [\n  [\"dataName\", xdr.lookup(\"String64\")],\n  [\"dataValue\", xdr.option(xdr.lookup(\"DataValue\"))],\n]);\n\n// === xdr source ============================================================\n//\n//   struct BumpSequenceOp\n//   {\n//       SequenceNumber bumpTo;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"BumpSequenceOp\", [\n  [\"bumpTo\", xdr.lookup(\"SequenceNumber\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct CreateClaimableBalanceOp\n//   {\n//       Asset asset;\n//       int64 amount;\n//       Claimant claimants<10>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"CreateClaimableBalanceOp\", [\n  [\"asset\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n  [\"claimants\", xdr.varArray(xdr.lookup(\"Claimant\"), 10)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ClaimClaimableBalanceOp\n//   {\n//       ClaimableBalanceID balanceID;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClaimClaimableBalanceOp\", [\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct BeginSponsoringFutureReservesOp\n//   {\n//       AccountID sponsoredID;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"BeginSponsoringFutureReservesOp\", [\n  [\"sponsoredId\", xdr.lookup(\"AccountId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum RevokeSponsorshipType\n//   {\n//       REVOKE_SPONSORSHIP_LEDGER_ENTRY = 0,\n//       REVOKE_SPONSORSHIP_SIGNER = 1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"RevokeSponsorshipType\", {\n  revokeSponsorshipLedgerEntry: 0,\n  revokeSponsorshipSigner: 1,\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID accountID;\n//           SignerKey signerKey;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"RevokeSponsorshipOpSigner\", [\n  [\"accountId\", xdr.lookup(\"AccountId\")],\n  [\"signerKey\", xdr.lookup(\"SignerKey\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union RevokeSponsorshipOp switch (RevokeSponsorshipType type)\n//   {\n//   case REVOKE_SPONSORSHIP_LEDGER_ENTRY:\n//       LedgerKey ledgerKey;\n//   case REVOKE_SPONSORSHIP_SIGNER:\n//       struct\n//       {\n//           AccountID accountID;\n//           SignerKey signerKey;\n//       } signer;\n//   };\n//\n// ===========================================================================\nxdr.union(\"RevokeSponsorshipOp\", {\n  switchOn: xdr.lookup(\"RevokeSponsorshipType\"),\n  switchName: \"type\",\n  switches: [\n    [\"revokeSponsorshipLedgerEntry\", \"ledgerKey\"],\n    [\"revokeSponsorshipSigner\", \"signer\"],\n  ],\n  arms: {\n    ledgerKey: xdr.lookup(\"LedgerKey\"),\n    signer: xdr.lookup(\"RevokeSponsorshipOpSigner\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ClawbackOp\n//   {\n//       Asset asset;\n//       MuxedAccount from;\n//       int64 amount;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClawbackOp\", [\n  [\"asset\", xdr.lookup(\"Asset\")],\n  [\"from\", xdr.lookup(\"MuxedAccount\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ClawbackClaimableBalanceOp\n//   {\n//       ClaimableBalanceID balanceID;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClawbackClaimableBalanceOp\", [\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct SetTrustLineFlagsOp\n//   {\n//       AccountID trustor;\n//       Asset asset;\n//   \n//       uint32 clearFlags; // which flags to clear\n//       uint32 setFlags;   // which flags to set\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SetTrustLineFlagsOp\", [\n  [\"trustor\", xdr.lookup(\"AccountId\")],\n  [\"asset\", xdr.lookup(\"Asset\")],\n  [\"clearFlags\", xdr.lookup(\"Uint32\")],\n  [\"setFlags\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   const LIQUIDITY_POOL_FEE_V18 = 30;\n//\n// ===========================================================================\nxdr.const(\"LIQUIDITY_POOL_FEE_V18\", 30);\n\n// === xdr source ============================================================\n//\n//   struct LiquidityPoolDepositOp\n//   {\n//       PoolID liquidityPoolID;\n//       int64 maxAmountA; // maximum amount of first asset to deposit\n//       int64 maxAmountB; // maximum amount of second asset to deposit\n//       Price minPrice;   // minimum depositA/depositB\n//       Price maxPrice;   // maximum depositA/depositB\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LiquidityPoolDepositOp\", [\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\n  [\"maxAmountA\", xdr.lookup(\"Int64\")],\n  [\"maxAmountB\", xdr.lookup(\"Int64\")],\n  [\"minPrice\", xdr.lookup(\"Price\")],\n  [\"maxPrice\", xdr.lookup(\"Price\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct LiquidityPoolWithdrawOp\n//   {\n//       PoolID liquidityPoolID;\n//       int64 amount;     // amount of pool shares to withdraw\n//       int64 minAmountA; // minimum amount of first asset to withdraw\n//       int64 minAmountB; // minimum amount of second asset to withdraw\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LiquidityPoolWithdrawOp\", [\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n  [\"minAmountA\", xdr.lookup(\"Int64\")],\n  [\"minAmountB\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (OperationType type)\n//       {\n//       case CREATE_ACCOUNT:\n//           CreateAccountOp createAccountOp;\n//       case PAYMENT:\n//           PaymentOp paymentOp;\n//       case PATH_PAYMENT_STRICT_RECEIVE:\n//           PathPaymentStrictReceiveOp pathPaymentStrictReceiveOp;\n//       case MANAGE_SELL_OFFER:\n//           ManageSellOfferOp manageSellOfferOp;\n//       case CREATE_PASSIVE_SELL_OFFER:\n//           CreatePassiveSellOfferOp createPassiveSellOfferOp;\n//       case SET_OPTIONS:\n//           SetOptionsOp setOptionsOp;\n//       case CHANGE_TRUST:\n//           ChangeTrustOp changeTrustOp;\n//       case ALLOW_TRUST:\n//           AllowTrustOp allowTrustOp;\n//       case ACCOUNT_MERGE:\n//           MuxedAccount destination;\n//       case INFLATION:\n//           void;\n//       case MANAGE_DATA:\n//           ManageDataOp manageDataOp;\n//       case BUMP_SEQUENCE:\n//           BumpSequenceOp bumpSequenceOp;\n//       case MANAGE_BUY_OFFER:\n//           ManageBuyOfferOp manageBuyOfferOp;\n//       case PATH_PAYMENT_STRICT_SEND:\n//           PathPaymentStrictSendOp pathPaymentStrictSendOp;\n//       case CREATE_CLAIMABLE_BALANCE:\n//           CreateClaimableBalanceOp createClaimableBalanceOp;\n//       case CLAIM_CLAIMABLE_BALANCE:\n//           ClaimClaimableBalanceOp claimClaimableBalanceOp;\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\n//           BeginSponsoringFutureReservesOp beginSponsoringFutureReservesOp;\n//       case END_SPONSORING_FUTURE_RESERVES:\n//           void;\n//       case REVOKE_SPONSORSHIP:\n//           RevokeSponsorshipOp revokeSponsorshipOp;\n//       case CLAWBACK:\n//           ClawbackOp clawbackOp;\n//       case CLAWBACK_CLAIMABLE_BALANCE:\n//           ClawbackClaimableBalanceOp clawbackClaimableBalanceOp;\n//       case SET_TRUST_LINE_FLAGS:\n//           SetTrustLineFlagsOp setTrustLineFlagsOp;\n//       case LIQUIDITY_POOL_DEPOSIT:\n//           LiquidityPoolDepositOp liquidityPoolDepositOp;\n//       case LIQUIDITY_POOL_WITHDRAW:\n//           LiquidityPoolWithdrawOp liquidityPoolWithdrawOp;\n//       }\n//\n// ===========================================================================\nxdr.union(\"OperationBody\", {\n  switchOn: xdr.lookup(\"OperationType\"),\n  switchName: \"type\",\n  switches: [\n    [\"createAccount\", \"createAccountOp\"],\n    [\"payment\", \"paymentOp\"],\n    [\"pathPaymentStrictReceive\", \"pathPaymentStrictReceiveOp\"],\n    [\"manageSellOffer\", \"manageSellOfferOp\"],\n    [\"createPassiveSellOffer\", \"createPassiveSellOfferOp\"],\n    [\"setOptions\", \"setOptionsOp\"],\n    [\"changeTrust\", \"changeTrustOp\"],\n    [\"allowTrust\", \"allowTrustOp\"],\n    [\"accountMerge\", \"destination\"],\n    [\"inflation\", xdr.void()],\n    [\"manageData\", \"manageDataOp\"],\n    [\"bumpSequence\", \"bumpSequenceOp\"],\n    [\"manageBuyOffer\", \"manageBuyOfferOp\"],\n    [\"pathPaymentStrictSend\", \"pathPaymentStrictSendOp\"],\n    [\"createClaimableBalance\", \"createClaimableBalanceOp\"],\n    [\"claimClaimableBalance\", \"claimClaimableBalanceOp\"],\n    [\"beginSponsoringFutureReserves\", \"beginSponsoringFutureReservesOp\"],\n    [\"endSponsoringFutureReserves\", xdr.void()],\n    [\"revokeSponsorship\", \"revokeSponsorshipOp\"],\n    [\"clawback\", \"clawbackOp\"],\n    [\"clawbackClaimableBalance\", \"clawbackClaimableBalanceOp\"],\n    [\"setTrustLineFlags\", \"setTrustLineFlagsOp\"],\n    [\"liquidityPoolDeposit\", \"liquidityPoolDepositOp\"],\n    [\"liquidityPoolWithdraw\", \"liquidityPoolWithdrawOp\"],\n  ],\n  arms: {\n    createAccountOp: xdr.lookup(\"CreateAccountOp\"),\n    paymentOp: xdr.lookup(\"PaymentOp\"),\n    pathPaymentStrictReceiveOp: xdr.lookup(\"PathPaymentStrictReceiveOp\"),\n    manageSellOfferOp: xdr.lookup(\"ManageSellOfferOp\"),\n    createPassiveSellOfferOp: xdr.lookup(\"CreatePassiveSellOfferOp\"),\n    setOptionsOp: xdr.lookup(\"SetOptionsOp\"),\n    changeTrustOp: xdr.lookup(\"ChangeTrustOp\"),\n    allowTrustOp: xdr.lookup(\"AllowTrustOp\"),\n    destination: xdr.lookup(\"MuxedAccount\"),\n    manageDataOp: xdr.lookup(\"ManageDataOp\"),\n    bumpSequenceOp: xdr.lookup(\"BumpSequenceOp\"),\n    manageBuyOfferOp: xdr.lookup(\"ManageBuyOfferOp\"),\n    pathPaymentStrictSendOp: xdr.lookup(\"PathPaymentStrictSendOp\"),\n    createClaimableBalanceOp: xdr.lookup(\"CreateClaimableBalanceOp\"),\n    claimClaimableBalanceOp: xdr.lookup(\"ClaimClaimableBalanceOp\"),\n    beginSponsoringFutureReservesOp: xdr.lookup(\"BeginSponsoringFutureReservesOp\"),\n    revokeSponsorshipOp: xdr.lookup(\"RevokeSponsorshipOp\"),\n    clawbackOp: xdr.lookup(\"ClawbackOp\"),\n    clawbackClaimableBalanceOp: xdr.lookup(\"ClawbackClaimableBalanceOp\"),\n    setTrustLineFlagsOp: xdr.lookup(\"SetTrustLineFlagsOp\"),\n    liquidityPoolDepositOp: xdr.lookup(\"LiquidityPoolDepositOp\"),\n    liquidityPoolWithdrawOp: xdr.lookup(\"LiquidityPoolWithdrawOp\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct Operation\n//   {\n//       // sourceAccount is the account used to run the operation\n//       // if not set, the runtime defaults to \"sourceAccount\" specified at\n//       // the transaction level\n//       MuxedAccount* sourceAccount;\n//   \n//       union switch (OperationType type)\n//       {\n//       case CREATE_ACCOUNT:\n//           CreateAccountOp createAccountOp;\n//       case PAYMENT:\n//           PaymentOp paymentOp;\n//       case PATH_PAYMENT_STRICT_RECEIVE:\n//           PathPaymentStrictReceiveOp pathPaymentStrictReceiveOp;\n//       case MANAGE_SELL_OFFER:\n//           ManageSellOfferOp manageSellOfferOp;\n//       case CREATE_PASSIVE_SELL_OFFER:\n//           CreatePassiveSellOfferOp createPassiveSellOfferOp;\n//       case SET_OPTIONS:\n//           SetOptionsOp setOptionsOp;\n//       case CHANGE_TRUST:\n//           ChangeTrustOp changeTrustOp;\n//       case ALLOW_TRUST:\n//           AllowTrustOp allowTrustOp;\n//       case ACCOUNT_MERGE:\n//           MuxedAccount destination;\n//       case INFLATION:\n//           void;\n//       case MANAGE_DATA:\n//           ManageDataOp manageDataOp;\n//       case BUMP_SEQUENCE:\n//           BumpSequenceOp bumpSequenceOp;\n//       case MANAGE_BUY_OFFER:\n//           ManageBuyOfferOp manageBuyOfferOp;\n//       case PATH_PAYMENT_STRICT_SEND:\n//           PathPaymentStrictSendOp pathPaymentStrictSendOp;\n//       case CREATE_CLAIMABLE_BALANCE:\n//           CreateClaimableBalanceOp createClaimableBalanceOp;\n//       case CLAIM_CLAIMABLE_BALANCE:\n//           ClaimClaimableBalanceOp claimClaimableBalanceOp;\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\n//           BeginSponsoringFutureReservesOp beginSponsoringFutureReservesOp;\n//       case END_SPONSORING_FUTURE_RESERVES:\n//           void;\n//       case REVOKE_SPONSORSHIP:\n//           RevokeSponsorshipOp revokeSponsorshipOp;\n//       case CLAWBACK:\n//           ClawbackOp clawbackOp;\n//       case CLAWBACK_CLAIMABLE_BALANCE:\n//           ClawbackClaimableBalanceOp clawbackClaimableBalanceOp;\n//       case SET_TRUST_LINE_FLAGS:\n//           SetTrustLineFlagsOp setTrustLineFlagsOp;\n//       case LIQUIDITY_POOL_DEPOSIT:\n//           LiquidityPoolDepositOp liquidityPoolDepositOp;\n//       case LIQUIDITY_POOL_WITHDRAW:\n//           LiquidityPoolWithdrawOp liquidityPoolWithdrawOp;\n//       }\n//       body;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Operation\", [\n  [\"sourceAccount\", xdr.option(xdr.lookup(\"MuxedAccount\"))],\n  [\"body\", xdr.lookup(\"OperationBody\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID sourceAccount;\n//           SequenceNumber seqNum;\n//           uint32 opNum;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"HashIdPreimageOperationId\", [\n  [\"sourceAccount\", xdr.lookup(\"AccountId\")],\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\n  [\"opNum\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           AccountID sourceAccount;\n//           SequenceNumber seqNum;\n//           uint32 opNum;\n//           PoolID liquidityPoolID;\n//           Asset asset;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"HashIdPreimageRevokeId\", [\n  [\"sourceAccount\", xdr.lookup(\"AccountId\")],\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\n  [\"opNum\", xdr.lookup(\"Uint32\")],\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\n  [\"asset\", xdr.lookup(\"Asset\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union HashIDPreimage switch (EnvelopeType type)\n//   {\n//   case ENVELOPE_TYPE_OP_ID:\n//       struct\n//       {\n//           AccountID sourceAccount;\n//           SequenceNumber seqNum;\n//           uint32 opNum;\n//       } operationID;\n//   case ENVELOPE_TYPE_POOL_REVOKE_OP_ID:\n//       struct\n//       {\n//           AccountID sourceAccount;\n//           SequenceNumber seqNum;\n//           uint32 opNum;\n//           PoolID liquidityPoolID;\n//           Asset asset;\n//       } revokeID;\n//   };\n//\n// ===========================================================================\nxdr.union(\"HashIdPreimage\", {\n  switchOn: xdr.lookup(\"EnvelopeType\"),\n  switchName: \"type\",\n  switches: [\n    [\"envelopeTypeOpId\", \"operationId\"],\n    [\"envelopeTypePoolRevokeOpId\", \"revokeId\"],\n  ],\n  arms: {\n    operationId: xdr.lookup(\"HashIdPreimageOperationId\"),\n    revokeId: xdr.lookup(\"HashIdPreimageRevokeId\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum MemoType\n//   {\n//       MEMO_NONE = 0,\n//       MEMO_TEXT = 1,\n//       MEMO_ID = 2,\n//       MEMO_HASH = 3,\n//       MEMO_RETURN = 4\n//   };\n//\n// ===========================================================================\nxdr.enum(\"MemoType\", {\n  memoNone: 0,\n  memoText: 1,\n  memoId: 2,\n  memoHash: 3,\n  memoReturn: 4,\n});\n\n// === xdr source ============================================================\n//\n//   union Memo switch (MemoType type)\n//   {\n//   case MEMO_NONE:\n//       void;\n//   case MEMO_TEXT:\n//       string text<28>;\n//   case MEMO_ID:\n//       uint64 id;\n//   case MEMO_HASH:\n//       Hash hash; // the hash of what to pull from the content server\n//   case MEMO_RETURN:\n//       Hash retHash; // the hash of the tx you are rejecting\n//   };\n//\n// ===========================================================================\nxdr.union(\"Memo\", {\n  switchOn: xdr.lookup(\"MemoType\"),\n  switchName: \"type\",\n  switches: [\n    [\"memoNone\", xdr.void()],\n    [\"memoText\", \"text\"],\n    [\"memoId\", \"id\"],\n    [\"memoHash\", \"hash\"],\n    [\"memoReturn\", \"retHash\"],\n  ],\n  arms: {\n    text: xdr.string(28),\n    id: xdr.lookup(\"Uint64\"),\n    hash: xdr.lookup(\"Hash\"),\n    retHash: xdr.lookup(\"Hash\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TimeBounds\n//   {\n//       TimePoint minTime;\n//       TimePoint maxTime; // 0 here means no maxTime\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TimeBounds\", [\n  [\"minTime\", xdr.lookup(\"TimePoint\")],\n  [\"maxTime\", xdr.lookup(\"TimePoint\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct LedgerBounds\n//   {\n//       uint32 minLedger;\n//       uint32 maxLedger; // 0 here means no maxLedger\n//   };\n//\n// ===========================================================================\nxdr.struct(\"LedgerBounds\", [\n  [\"minLedger\", xdr.lookup(\"Uint32\")],\n  [\"maxLedger\", xdr.lookup(\"Uint32\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct PreconditionsV2\n//   {\n//       TimeBounds* timeBounds;\n//   \n//       // Transaction only valid for ledger numbers n such that\n//       // minLedger <= n < maxLedger (if maxLedger == 0, then\n//       // only minLedger is checked)\n//       LedgerBounds* ledgerBounds;\n//   \n//       // If NULL, only valid when sourceAccount's sequence number\n//       // is seqNum - 1.  Otherwise, valid when sourceAccount's\n//       // sequence number n satisfies minSeqNum <= n < tx.seqNum.\n//       // Note that after execution the account's sequence number\n//       // is always raised to tx.seqNum, and a transaction is not\n//       // valid if tx.seqNum is too high to ensure replay protection.\n//       SequenceNumber* minSeqNum;\n//   \n//       // For the transaction to be valid, the current ledger time must\n//       // be at least minSeqAge greater than sourceAccount's seqTime.\n//       Duration minSeqAge;\n//   \n//       // For the transaction to be valid, the current ledger number\n//       // must be at least minSeqLedgerGap greater than sourceAccount's\n//       // seqLedger.\n//       uint32 minSeqLedgerGap;\n//   \n//       // For the transaction to be valid, there must be a signature\n//       // corresponding to every Signer in this array, even if the\n//       // signature is not otherwise required by the sourceAccount or\n//       // operations.\n//       SignerKey extraSigners<2>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"PreconditionsV2\", [\n  [\"timeBounds\", xdr.option(xdr.lookup(\"TimeBounds\"))],\n  [\"ledgerBounds\", xdr.option(xdr.lookup(\"LedgerBounds\"))],\n  [\"minSeqNum\", xdr.option(xdr.lookup(\"SequenceNumber\"))],\n  [\"minSeqAge\", xdr.lookup(\"Duration\")],\n  [\"minSeqLedgerGap\", xdr.lookup(\"Uint32\")],\n  [\"extraSigners\", xdr.varArray(xdr.lookup(\"SignerKey\"), 2)],\n]);\n\n// === xdr source ============================================================\n//\n//   enum PreconditionType\n//   {\n//       PRECOND_NONE = 0,\n//       PRECOND_TIME = 1,\n//       PRECOND_V2 = 2\n//   };\n//\n// ===========================================================================\nxdr.enum(\"PreconditionType\", {\n  precondNone: 0,\n  precondTime: 1,\n  precondV2: 2,\n});\n\n// === xdr source ============================================================\n//\n//   union Preconditions switch (PreconditionType type)\n//   {\n//   case PRECOND_NONE:\n//       void;\n//   case PRECOND_TIME:\n//       TimeBounds timeBounds;\n//   case PRECOND_V2:\n//       PreconditionsV2 v2;\n//   };\n//\n// ===========================================================================\nxdr.union(\"Preconditions\", {\n  switchOn: xdr.lookup(\"PreconditionType\"),\n  switchName: \"type\",\n  switches: [\n    [\"precondNone\", xdr.void()],\n    [\"precondTime\", \"timeBounds\"],\n    [\"precondV2\", \"v2\"],\n  ],\n  arms: {\n    timeBounds: xdr.lookup(\"TimeBounds\"),\n    v2: xdr.lookup(\"PreconditionsV2\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   const MAX_OPS_PER_TX = 100;\n//\n// ===========================================================================\nxdr.const(\"MAX_OPS_PER_TX\", 100);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionV0Ext\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionV0\n//   {\n//       uint256 sourceAccountEd25519;\n//       uint32 fee;\n//       SequenceNumber seqNum;\n//       TimeBounds* timeBounds;\n//       Memo memo;\n//       Operation operations<MAX_OPS_PER_TX>;\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionV0\", [\n  [\"sourceAccountEd25519\", xdr.lookup(\"Uint256\")],\n  [\"fee\", xdr.lookup(\"Uint32\")],\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\n  [\"timeBounds\", xdr.option(xdr.lookup(\"TimeBounds\"))],\n  [\"memo\", xdr.lookup(\"Memo\")],\n  [\"operations\", xdr.varArray(xdr.lookup(\"Operation\"), xdr.lookup(\"MAX_OPS_PER_TX\"))],\n  [\"ext\", xdr.lookup(\"TransactionV0Ext\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TransactionV0Envelope\n//   {\n//       TransactionV0 tx;\n//       /* Each decorated signature is a signature over the SHA256 hash of\n//        * a TransactionSignaturePayload */\n//       DecoratedSignature signatures<20>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionV0Envelope\", [\n  [\"tx\", xdr.lookup(\"TransactionV0\")],\n  [\"signatures\", xdr.varArray(xdr.lookup(\"DecoratedSignature\"), 20)],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct Transaction\n//   {\n//       // account used to run the transaction\n//       MuxedAccount sourceAccount;\n//   \n//       // the fee the sourceAccount will pay\n//       uint32 fee;\n//   \n//       // sequence number to consume in the account\n//       SequenceNumber seqNum;\n//   \n//       // validity conditions\n//       Preconditions cond;\n//   \n//       Memo memo;\n//   \n//       Operation operations<MAX_OPS_PER_TX>;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Transaction\", [\n  [\"sourceAccount\", xdr.lookup(\"MuxedAccount\")],\n  [\"fee\", xdr.lookup(\"Uint32\")],\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\n  [\"cond\", xdr.lookup(\"Preconditions\")],\n  [\"memo\", xdr.lookup(\"Memo\")],\n  [\"operations\", xdr.varArray(xdr.lookup(\"Operation\"), xdr.lookup(\"MAX_OPS_PER_TX\"))],\n  [\"ext\", xdr.lookup(\"TransactionExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct TransactionV1Envelope\n//   {\n//       Transaction tx;\n//       /* Each decorated signature is a signature over the SHA256 hash of\n//        * a TransactionSignaturePayload */\n//       DecoratedSignature signatures<20>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionV1Envelope\", [\n  [\"tx\", xdr.lookup(\"Transaction\")],\n  [\"signatures\", xdr.varArray(xdr.lookup(\"DecoratedSignature\"), 20)],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (EnvelopeType type)\n//       {\n//       case ENVELOPE_TYPE_TX:\n//           TransactionV1Envelope v1;\n//       }\n//\n// ===========================================================================\nxdr.union(\"FeeBumpTransactionInnerTx\", {\n  switchOn: xdr.lookup(\"EnvelopeType\"),\n  switchName: \"type\",\n  switches: [\n    [\"envelopeTypeTx\", \"v1\"],\n  ],\n  arms: {\n    v1: xdr.lookup(\"TransactionV1Envelope\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"FeeBumpTransactionExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct FeeBumpTransaction\n//   {\n//       MuxedAccount feeSource;\n//       int64 fee;\n//       union switch (EnvelopeType type)\n//       {\n//       case ENVELOPE_TYPE_TX:\n//           TransactionV1Envelope v1;\n//       }\n//       innerTx;\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"FeeBumpTransaction\", [\n  [\"feeSource\", xdr.lookup(\"MuxedAccount\")],\n  [\"fee\", xdr.lookup(\"Int64\")],\n  [\"innerTx\", xdr.lookup(\"FeeBumpTransactionInnerTx\")],\n  [\"ext\", xdr.lookup(\"FeeBumpTransactionExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct FeeBumpTransactionEnvelope\n//   {\n//       FeeBumpTransaction tx;\n//       /* Each decorated signature is a signature over the SHA256 hash of\n//        * a TransactionSignaturePayload */\n//       DecoratedSignature signatures<20>;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"FeeBumpTransactionEnvelope\", [\n  [\"tx\", xdr.lookup(\"FeeBumpTransaction\")],\n  [\"signatures\", xdr.varArray(xdr.lookup(\"DecoratedSignature\"), 20)],\n]);\n\n// === xdr source ============================================================\n//\n//   union TransactionEnvelope switch (EnvelopeType type)\n//   {\n//   case ENVELOPE_TYPE_TX_V0:\n//       TransactionV0Envelope v0;\n//   case ENVELOPE_TYPE_TX:\n//       TransactionV1Envelope v1;\n//   case ENVELOPE_TYPE_TX_FEE_BUMP:\n//       FeeBumpTransactionEnvelope feeBump;\n//   };\n//\n// ===========================================================================\nxdr.union(\"TransactionEnvelope\", {\n  switchOn: xdr.lookup(\"EnvelopeType\"),\n  switchName: \"type\",\n  switches: [\n    [\"envelopeTypeTxV0\", \"v0\"],\n    [\"envelopeTypeTx\", \"v1\"],\n    [\"envelopeTypeTxFeeBump\", \"feeBump\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"TransactionV0Envelope\"),\n    v1: xdr.lookup(\"TransactionV1Envelope\"),\n    feeBump: xdr.lookup(\"FeeBumpTransactionEnvelope\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union switch (EnvelopeType type)\n//       {\n//       // Backwards Compatibility: Use ENVELOPE_TYPE_TX to sign ENVELOPE_TYPE_TX_V0\n//       case ENVELOPE_TYPE_TX:\n//           Transaction tx;\n//       case ENVELOPE_TYPE_TX_FEE_BUMP:\n//           FeeBumpTransaction feeBump;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionSignaturePayloadTaggedTransaction\", {\n  switchOn: xdr.lookup(\"EnvelopeType\"),\n  switchName: \"type\",\n  switches: [\n    [\"envelopeTypeTx\", \"tx\"],\n    [\"envelopeTypeTxFeeBump\", \"feeBump\"],\n  ],\n  arms: {\n    tx: xdr.lookup(\"Transaction\"),\n    feeBump: xdr.lookup(\"FeeBumpTransaction\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionSignaturePayload\n//   {\n//       Hash networkId;\n//       union switch (EnvelopeType type)\n//       {\n//       // Backwards Compatibility: Use ENVELOPE_TYPE_TX to sign ENVELOPE_TYPE_TX_V0\n//       case ENVELOPE_TYPE_TX:\n//           Transaction tx;\n//       case ENVELOPE_TYPE_TX_FEE_BUMP:\n//           FeeBumpTransaction feeBump;\n//       }\n//       taggedTransaction;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionSignaturePayload\", [\n  [\"networkId\", xdr.lookup(\"Hash\")],\n  [\"taggedTransaction\", xdr.lookup(\"TransactionSignaturePayloadTaggedTransaction\")],\n]);\n\n// === xdr source ============================================================\n//\n//   enum ClaimAtomType\n//   {\n//       CLAIM_ATOM_TYPE_V0 = 0,\n//       CLAIM_ATOM_TYPE_ORDER_BOOK = 1,\n//       CLAIM_ATOM_TYPE_LIQUIDITY_POOL = 2\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClaimAtomType\", {\n  claimAtomTypeV0: 0,\n  claimAtomTypeOrderBook: 1,\n  claimAtomTypeLiquidityPool: 2,\n});\n\n// === xdr source ============================================================\n//\n//   struct ClaimOfferAtomV0\n//   {\n//       // emitted to identify the offer\n//       uint256 sellerEd25519; // Account that owns the offer\n//       int64 offerID;\n//   \n//       // amount and asset taken from the owner\n//       Asset assetSold;\n//       int64 amountSold;\n//   \n//       // amount and asset sent to the owner\n//       Asset assetBought;\n//       int64 amountBought;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClaimOfferAtomV0\", [\n  [\"sellerEd25519\", xdr.lookup(\"Uint256\")],\n  [\"offerId\", xdr.lookup(\"Int64\")],\n  [\"assetSold\", xdr.lookup(\"Asset\")],\n  [\"amountSold\", xdr.lookup(\"Int64\")],\n  [\"assetBought\", xdr.lookup(\"Asset\")],\n  [\"amountBought\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ClaimOfferAtom\n//   {\n//       // emitted to identify the offer\n//       AccountID sellerID; // Account that owns the offer\n//       int64 offerID;\n//   \n//       // amount and asset taken from the owner\n//       Asset assetSold;\n//       int64 amountSold;\n//   \n//       // amount and asset sent to the owner\n//       Asset assetBought;\n//       int64 amountBought;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClaimOfferAtom\", [\n  [\"sellerId\", xdr.lookup(\"AccountId\")],\n  [\"offerId\", xdr.lookup(\"Int64\")],\n  [\"assetSold\", xdr.lookup(\"Asset\")],\n  [\"amountSold\", xdr.lookup(\"Int64\")],\n  [\"assetBought\", xdr.lookup(\"Asset\")],\n  [\"amountBought\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct ClaimLiquidityAtom\n//   {\n//       PoolID liquidityPoolID;\n//   \n//       // amount and asset taken from the pool\n//       Asset assetSold;\n//       int64 amountSold;\n//   \n//       // amount and asset sent to the pool\n//       Asset assetBought;\n//       int64 amountBought;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ClaimLiquidityAtom\", [\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\n  [\"assetSold\", xdr.lookup(\"Asset\")],\n  [\"amountSold\", xdr.lookup(\"Int64\")],\n  [\"assetBought\", xdr.lookup(\"Asset\")],\n  [\"amountBought\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union ClaimAtom switch (ClaimAtomType type)\n//   {\n//   case CLAIM_ATOM_TYPE_V0:\n//       ClaimOfferAtomV0 v0;\n//   case CLAIM_ATOM_TYPE_ORDER_BOOK:\n//       ClaimOfferAtom orderBook;\n//   case CLAIM_ATOM_TYPE_LIQUIDITY_POOL:\n//       ClaimLiquidityAtom liquidityPool;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ClaimAtom\", {\n  switchOn: xdr.lookup(\"ClaimAtomType\"),\n  switchName: \"type\",\n  switches: [\n    [\"claimAtomTypeV0\", \"v0\"],\n    [\"claimAtomTypeOrderBook\", \"orderBook\"],\n    [\"claimAtomTypeLiquidityPool\", \"liquidityPool\"],\n  ],\n  arms: {\n    v0: xdr.lookup(\"ClaimOfferAtomV0\"),\n    orderBook: xdr.lookup(\"ClaimOfferAtom\"),\n    liquidityPool: xdr.lookup(\"ClaimLiquidityAtom\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum CreateAccountResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       CREATE_ACCOUNT_SUCCESS = 0, // account was created\n//   \n//       // codes considered as \"failure\" for the operation\n//       CREATE_ACCOUNT_MALFORMED = -1,   // invalid destination\n//       CREATE_ACCOUNT_UNDERFUNDED = -2, // not enough funds in source account\n//       CREATE_ACCOUNT_LOW_RESERVE =\n//           -3, // would create an account below the min reserve\n//       CREATE_ACCOUNT_ALREADY_EXIST = -4 // account already exists\n//   };\n//\n// ===========================================================================\nxdr.enum(\"CreateAccountResultCode\", {\n  createAccountSuccess: 0,\n  createAccountMalformed: -1,\n  createAccountUnderfunded: -2,\n  createAccountLowReserve: -3,\n  createAccountAlreadyExist: -4,\n});\n\n// === xdr source ============================================================\n//\n//   union CreateAccountResult switch (CreateAccountResultCode code)\n//   {\n//   case CREATE_ACCOUNT_SUCCESS:\n//       void;\n//   case CREATE_ACCOUNT_MALFORMED:\n//   case CREATE_ACCOUNT_UNDERFUNDED:\n//   case CREATE_ACCOUNT_LOW_RESERVE:\n//   case CREATE_ACCOUNT_ALREADY_EXIST:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"CreateAccountResult\", {\n  switchOn: xdr.lookup(\"CreateAccountResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"createAccountSuccess\", xdr.void()],\n    [\"createAccountMalformed\", xdr.void()],\n    [\"createAccountUnderfunded\", xdr.void()],\n    [\"createAccountLowReserve\", xdr.void()],\n    [\"createAccountAlreadyExist\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum PaymentResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       PAYMENT_SUCCESS = 0, // payment successfully completed\n//   \n//       // codes considered as \"failure\" for the operation\n//       PAYMENT_MALFORMED = -1,          // bad input\n//       PAYMENT_UNDERFUNDED = -2,        // not enough funds in source account\n//       PAYMENT_SRC_NO_TRUST = -3,       // no trust line on source account\n//       PAYMENT_SRC_NOT_AUTHORIZED = -4, // source not authorized to transfer\n//       PAYMENT_NO_DESTINATION = -5,     // destination account does not exist\n//       PAYMENT_NO_TRUST = -6,       // destination missing a trust line for asset\n//       PAYMENT_NOT_AUTHORIZED = -7, // destination not authorized to hold asset\n//       PAYMENT_LINE_FULL = -8,      // destination would go above their limit\n//       PAYMENT_NO_ISSUER = -9       // missing issuer on asset\n//   };\n//\n// ===========================================================================\nxdr.enum(\"PaymentResultCode\", {\n  paymentSuccess: 0,\n  paymentMalformed: -1,\n  paymentUnderfunded: -2,\n  paymentSrcNoTrust: -3,\n  paymentSrcNotAuthorized: -4,\n  paymentNoDestination: -5,\n  paymentNoTrust: -6,\n  paymentNotAuthorized: -7,\n  paymentLineFull: -8,\n  paymentNoIssuer: -9,\n});\n\n// === xdr source ============================================================\n//\n//   union PaymentResult switch (PaymentResultCode code)\n//   {\n//   case PAYMENT_SUCCESS:\n//       void;\n//   case PAYMENT_MALFORMED:\n//   case PAYMENT_UNDERFUNDED:\n//   case PAYMENT_SRC_NO_TRUST:\n//   case PAYMENT_SRC_NOT_AUTHORIZED:\n//   case PAYMENT_NO_DESTINATION:\n//   case PAYMENT_NO_TRUST:\n//   case PAYMENT_NOT_AUTHORIZED:\n//   case PAYMENT_LINE_FULL:\n//   case PAYMENT_NO_ISSUER:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"PaymentResult\", {\n  switchOn: xdr.lookup(\"PaymentResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"paymentSuccess\", xdr.void()],\n    [\"paymentMalformed\", xdr.void()],\n    [\"paymentUnderfunded\", xdr.void()],\n    [\"paymentSrcNoTrust\", xdr.void()],\n    [\"paymentSrcNotAuthorized\", xdr.void()],\n    [\"paymentNoDestination\", xdr.void()],\n    [\"paymentNoTrust\", xdr.void()],\n    [\"paymentNotAuthorized\", xdr.void()],\n    [\"paymentLineFull\", xdr.void()],\n    [\"paymentNoIssuer\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum PathPaymentStrictReceiveResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       PATH_PAYMENT_STRICT_RECEIVE_SUCCESS = 0, // success\n//   \n//       // codes considered as \"failure\" for the operation\n//       PATH_PAYMENT_STRICT_RECEIVE_MALFORMED = -1, // bad input\n//       PATH_PAYMENT_STRICT_RECEIVE_UNDERFUNDED =\n//           -2, // not enough funds in source account\n//       PATH_PAYMENT_STRICT_RECEIVE_SRC_NO_TRUST =\n//           -3, // no trust line on source account\n//       PATH_PAYMENT_STRICT_RECEIVE_SRC_NOT_AUTHORIZED =\n//           -4, // source not authorized to transfer\n//       PATH_PAYMENT_STRICT_RECEIVE_NO_DESTINATION =\n//           -5, // destination account does not exist\n//       PATH_PAYMENT_STRICT_RECEIVE_NO_TRUST =\n//           -6, // dest missing a trust line for asset\n//       PATH_PAYMENT_STRICT_RECEIVE_NOT_AUTHORIZED =\n//           -7, // dest not authorized to hold asset\n//       PATH_PAYMENT_STRICT_RECEIVE_LINE_FULL =\n//           -8, // dest would go above their limit\n//       PATH_PAYMENT_STRICT_RECEIVE_NO_ISSUER = -9, // missing issuer on one asset\n//       PATH_PAYMENT_STRICT_RECEIVE_TOO_FEW_OFFERS =\n//           -10, // not enough offers to satisfy path\n//       PATH_PAYMENT_STRICT_RECEIVE_OFFER_CROSS_SELF =\n//           -11, // would cross one of its own offers\n//       PATH_PAYMENT_STRICT_RECEIVE_OVER_SENDMAX = -12 // could not satisfy sendmax\n//   };\n//\n// ===========================================================================\nxdr.enum(\"PathPaymentStrictReceiveResultCode\", {\n  pathPaymentStrictReceiveSuccess: 0,\n  pathPaymentStrictReceiveMalformed: -1,\n  pathPaymentStrictReceiveUnderfunded: -2,\n  pathPaymentStrictReceiveSrcNoTrust: -3,\n  pathPaymentStrictReceiveSrcNotAuthorized: -4,\n  pathPaymentStrictReceiveNoDestination: -5,\n  pathPaymentStrictReceiveNoTrust: -6,\n  pathPaymentStrictReceiveNotAuthorized: -7,\n  pathPaymentStrictReceiveLineFull: -8,\n  pathPaymentStrictReceiveNoIssuer: -9,\n  pathPaymentStrictReceiveTooFewOffers: -10,\n  pathPaymentStrictReceiveOfferCrossSelf: -11,\n  pathPaymentStrictReceiveOverSendmax: -12,\n});\n\n// === xdr source ============================================================\n//\n//   struct SimplePaymentResult\n//   {\n//       AccountID destination;\n//       Asset asset;\n//       int64 amount;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"SimplePaymentResult\", [\n  [\"destination\", xdr.lookup(\"AccountId\")],\n  [\"asset\", xdr.lookup(\"Asset\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           ClaimAtom offers<>;\n//           SimplePaymentResult last;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"PathPaymentStrictReceiveResultSuccess\", [\n  [\"offers\", xdr.varArray(xdr.lookup(\"ClaimAtom\"), 2147483647)],\n  [\"last\", xdr.lookup(\"SimplePaymentResult\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union PathPaymentStrictReceiveResult switch (\n//       PathPaymentStrictReceiveResultCode code)\n//   {\n//   case PATH_PAYMENT_STRICT_RECEIVE_SUCCESS:\n//       struct\n//       {\n//           ClaimAtom offers<>;\n//           SimplePaymentResult last;\n//       } success;\n//   case PATH_PAYMENT_STRICT_RECEIVE_MALFORMED:\n//   case PATH_PAYMENT_STRICT_RECEIVE_UNDERFUNDED:\n//   case PATH_PAYMENT_STRICT_RECEIVE_SRC_NO_TRUST:\n//   case PATH_PAYMENT_STRICT_RECEIVE_SRC_NOT_AUTHORIZED:\n//   case PATH_PAYMENT_STRICT_RECEIVE_NO_DESTINATION:\n//   case PATH_PAYMENT_STRICT_RECEIVE_NO_TRUST:\n//   case PATH_PAYMENT_STRICT_RECEIVE_NOT_AUTHORIZED:\n//   case PATH_PAYMENT_STRICT_RECEIVE_LINE_FULL:\n//       void;\n//   case PATH_PAYMENT_STRICT_RECEIVE_NO_ISSUER:\n//       Asset noIssuer; // the asset that caused the error\n//   case PATH_PAYMENT_STRICT_RECEIVE_TOO_FEW_OFFERS:\n//   case PATH_PAYMENT_STRICT_RECEIVE_OFFER_CROSS_SELF:\n//   case PATH_PAYMENT_STRICT_RECEIVE_OVER_SENDMAX:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"PathPaymentStrictReceiveResult\", {\n  switchOn: xdr.lookup(\"PathPaymentStrictReceiveResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"pathPaymentStrictReceiveSuccess\", \"success\"],\n    [\"pathPaymentStrictReceiveMalformed\", xdr.void()],\n    [\"pathPaymentStrictReceiveUnderfunded\", xdr.void()],\n    [\"pathPaymentStrictReceiveSrcNoTrust\", xdr.void()],\n    [\"pathPaymentStrictReceiveSrcNotAuthorized\", xdr.void()],\n    [\"pathPaymentStrictReceiveNoDestination\", xdr.void()],\n    [\"pathPaymentStrictReceiveNoTrust\", xdr.void()],\n    [\"pathPaymentStrictReceiveNotAuthorized\", xdr.void()],\n    [\"pathPaymentStrictReceiveLineFull\", xdr.void()],\n    [\"pathPaymentStrictReceiveNoIssuer\", \"noIssuer\"],\n    [\"pathPaymentStrictReceiveTooFewOffers\", xdr.void()],\n    [\"pathPaymentStrictReceiveOfferCrossSelf\", xdr.void()],\n    [\"pathPaymentStrictReceiveOverSendmax\", xdr.void()],\n  ],\n  arms: {\n    success: xdr.lookup(\"PathPaymentStrictReceiveResultSuccess\"),\n    noIssuer: xdr.lookup(\"Asset\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum PathPaymentStrictSendResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       PATH_PAYMENT_STRICT_SEND_SUCCESS = 0, // success\n//   \n//       // codes considered as \"failure\" for the operation\n//       PATH_PAYMENT_STRICT_SEND_MALFORMED = -1, // bad input\n//       PATH_PAYMENT_STRICT_SEND_UNDERFUNDED =\n//           -2, // not enough funds in source account\n//       PATH_PAYMENT_STRICT_SEND_SRC_NO_TRUST =\n//           -3, // no trust line on source account\n//       PATH_PAYMENT_STRICT_SEND_SRC_NOT_AUTHORIZED =\n//           -4, // source not authorized to transfer\n//       PATH_PAYMENT_STRICT_SEND_NO_DESTINATION =\n//           -5, // destination account does not exist\n//       PATH_PAYMENT_STRICT_SEND_NO_TRUST =\n//           -6, // dest missing a trust line for asset\n//       PATH_PAYMENT_STRICT_SEND_NOT_AUTHORIZED =\n//           -7, // dest not authorized to hold asset\n//       PATH_PAYMENT_STRICT_SEND_LINE_FULL = -8, // dest would go above their limit\n//       PATH_PAYMENT_STRICT_SEND_NO_ISSUER = -9, // missing issuer on one asset\n//       PATH_PAYMENT_STRICT_SEND_TOO_FEW_OFFERS =\n//           -10, // not enough offers to satisfy path\n//       PATH_PAYMENT_STRICT_SEND_OFFER_CROSS_SELF =\n//           -11, // would cross one of its own offers\n//       PATH_PAYMENT_STRICT_SEND_UNDER_DESTMIN = -12 // could not satisfy destMin\n//   };\n//\n// ===========================================================================\nxdr.enum(\"PathPaymentStrictSendResultCode\", {\n  pathPaymentStrictSendSuccess: 0,\n  pathPaymentStrictSendMalformed: -1,\n  pathPaymentStrictSendUnderfunded: -2,\n  pathPaymentStrictSendSrcNoTrust: -3,\n  pathPaymentStrictSendSrcNotAuthorized: -4,\n  pathPaymentStrictSendNoDestination: -5,\n  pathPaymentStrictSendNoTrust: -6,\n  pathPaymentStrictSendNotAuthorized: -7,\n  pathPaymentStrictSendLineFull: -8,\n  pathPaymentStrictSendNoIssuer: -9,\n  pathPaymentStrictSendTooFewOffers: -10,\n  pathPaymentStrictSendOfferCrossSelf: -11,\n  pathPaymentStrictSendUnderDestmin: -12,\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           ClaimAtom offers<>;\n//           SimplePaymentResult last;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"PathPaymentStrictSendResultSuccess\", [\n  [\"offers\", xdr.varArray(xdr.lookup(\"ClaimAtom\"), 2147483647)],\n  [\"last\", xdr.lookup(\"SimplePaymentResult\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union PathPaymentStrictSendResult switch (PathPaymentStrictSendResultCode code)\n//   {\n//   case PATH_PAYMENT_STRICT_SEND_SUCCESS:\n//       struct\n//       {\n//           ClaimAtom offers<>;\n//           SimplePaymentResult last;\n//       } success;\n//   case PATH_PAYMENT_STRICT_SEND_MALFORMED:\n//   case PATH_PAYMENT_STRICT_SEND_UNDERFUNDED:\n//   case PATH_PAYMENT_STRICT_SEND_SRC_NO_TRUST:\n//   case PATH_PAYMENT_STRICT_SEND_SRC_NOT_AUTHORIZED:\n//   case PATH_PAYMENT_STRICT_SEND_NO_DESTINATION:\n//   case PATH_PAYMENT_STRICT_SEND_NO_TRUST:\n//   case PATH_PAYMENT_STRICT_SEND_NOT_AUTHORIZED:\n//   case PATH_PAYMENT_STRICT_SEND_LINE_FULL:\n//       void;\n//   case PATH_PAYMENT_STRICT_SEND_NO_ISSUER:\n//       Asset noIssuer; // the asset that caused the error\n//   case PATH_PAYMENT_STRICT_SEND_TOO_FEW_OFFERS:\n//   case PATH_PAYMENT_STRICT_SEND_OFFER_CROSS_SELF:\n//   case PATH_PAYMENT_STRICT_SEND_UNDER_DESTMIN:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"PathPaymentStrictSendResult\", {\n  switchOn: xdr.lookup(\"PathPaymentStrictSendResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"pathPaymentStrictSendSuccess\", \"success\"],\n    [\"pathPaymentStrictSendMalformed\", xdr.void()],\n    [\"pathPaymentStrictSendUnderfunded\", xdr.void()],\n    [\"pathPaymentStrictSendSrcNoTrust\", xdr.void()],\n    [\"pathPaymentStrictSendSrcNotAuthorized\", xdr.void()],\n    [\"pathPaymentStrictSendNoDestination\", xdr.void()],\n    [\"pathPaymentStrictSendNoTrust\", xdr.void()],\n    [\"pathPaymentStrictSendNotAuthorized\", xdr.void()],\n    [\"pathPaymentStrictSendLineFull\", xdr.void()],\n    [\"pathPaymentStrictSendNoIssuer\", \"noIssuer\"],\n    [\"pathPaymentStrictSendTooFewOffers\", xdr.void()],\n    [\"pathPaymentStrictSendOfferCrossSelf\", xdr.void()],\n    [\"pathPaymentStrictSendUnderDestmin\", xdr.void()],\n  ],\n  arms: {\n    success: xdr.lookup(\"PathPaymentStrictSendResultSuccess\"),\n    noIssuer: xdr.lookup(\"Asset\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ManageSellOfferResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       MANAGE_SELL_OFFER_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       MANAGE_SELL_OFFER_MALFORMED = -1, // generated offer would be invalid\n//       MANAGE_SELL_OFFER_SELL_NO_TRUST =\n//           -2,                              // no trust line for what we're selling\n//       MANAGE_SELL_OFFER_BUY_NO_TRUST = -3, // no trust line for what we're buying\n//       MANAGE_SELL_OFFER_SELL_NOT_AUTHORIZED = -4, // not authorized to sell\n//       MANAGE_SELL_OFFER_BUY_NOT_AUTHORIZED = -5,  // not authorized to buy\n//       MANAGE_SELL_OFFER_LINE_FULL = -6, // can't receive more of what it's buying\n//       MANAGE_SELL_OFFER_UNDERFUNDED = -7, // doesn't hold what it's trying to sell\n//       MANAGE_SELL_OFFER_CROSS_SELF =\n//           -8, // would cross an offer from the same user\n//       MANAGE_SELL_OFFER_SELL_NO_ISSUER = -9, // no issuer for what we're selling\n//       MANAGE_SELL_OFFER_BUY_NO_ISSUER = -10, // no issuer for what we're buying\n//   \n//       // update errors\n//       MANAGE_SELL_OFFER_NOT_FOUND =\n//           -11, // offerID does not match an existing offer\n//   \n//       MANAGE_SELL_OFFER_LOW_RESERVE =\n//           -12 // not enough funds to create a new Offer\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ManageSellOfferResultCode\", {\n  manageSellOfferSuccess: 0,\n  manageSellOfferMalformed: -1,\n  manageSellOfferSellNoTrust: -2,\n  manageSellOfferBuyNoTrust: -3,\n  manageSellOfferSellNotAuthorized: -4,\n  manageSellOfferBuyNotAuthorized: -5,\n  manageSellOfferLineFull: -6,\n  manageSellOfferUnderfunded: -7,\n  manageSellOfferCrossSelf: -8,\n  manageSellOfferSellNoIssuer: -9,\n  manageSellOfferBuyNoIssuer: -10,\n  manageSellOfferNotFound: -11,\n  manageSellOfferLowReserve: -12,\n});\n\n// === xdr source ============================================================\n//\n//   enum ManageOfferEffect\n//   {\n//       MANAGE_OFFER_CREATED = 0,\n//       MANAGE_OFFER_UPDATED = 1,\n//       MANAGE_OFFER_DELETED = 2\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ManageOfferEffect\", {\n  manageOfferCreated: 0,\n  manageOfferUpdated: 1,\n  manageOfferDeleted: 2,\n});\n\n// === xdr source ============================================================\n//\n//   union switch (ManageOfferEffect effect)\n//       {\n//       case MANAGE_OFFER_CREATED:\n//       case MANAGE_OFFER_UPDATED:\n//           OfferEntry offer;\n//       case MANAGE_OFFER_DELETED:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"ManageOfferSuccessResultOffer\", {\n  switchOn: xdr.lookup(\"ManageOfferEffect\"),\n  switchName: \"effect\",\n  switches: [\n    [\"manageOfferCreated\", \"offer\"],\n    [\"manageOfferUpdated\", \"offer\"],\n    [\"manageOfferDeleted\", xdr.void()],\n  ],\n  arms: {\n    offer: xdr.lookup(\"OfferEntry\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct ManageOfferSuccessResult\n//   {\n//       // offers that got claimed while creating this offer\n//       ClaimAtom offersClaimed<>;\n//   \n//       union switch (ManageOfferEffect effect)\n//       {\n//       case MANAGE_OFFER_CREATED:\n//       case MANAGE_OFFER_UPDATED:\n//           OfferEntry offer;\n//       case MANAGE_OFFER_DELETED:\n//           void;\n//       }\n//       offer;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"ManageOfferSuccessResult\", [\n  [\"offersClaimed\", xdr.varArray(xdr.lookup(\"ClaimAtom\"), 2147483647)],\n  [\"offer\", xdr.lookup(\"ManageOfferSuccessResultOffer\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union ManageSellOfferResult switch (ManageSellOfferResultCode code)\n//   {\n//   case MANAGE_SELL_OFFER_SUCCESS:\n//       ManageOfferSuccessResult success;\n//   case MANAGE_SELL_OFFER_MALFORMED:\n//   case MANAGE_SELL_OFFER_SELL_NO_TRUST:\n//   case MANAGE_SELL_OFFER_BUY_NO_TRUST:\n//   case MANAGE_SELL_OFFER_SELL_NOT_AUTHORIZED:\n//   case MANAGE_SELL_OFFER_BUY_NOT_AUTHORIZED:\n//   case MANAGE_SELL_OFFER_LINE_FULL:\n//   case MANAGE_SELL_OFFER_UNDERFUNDED:\n//   case MANAGE_SELL_OFFER_CROSS_SELF:\n//   case MANAGE_SELL_OFFER_SELL_NO_ISSUER:\n//   case MANAGE_SELL_OFFER_BUY_NO_ISSUER:\n//   case MANAGE_SELL_OFFER_NOT_FOUND:\n//   case MANAGE_SELL_OFFER_LOW_RESERVE:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ManageSellOfferResult\", {\n  switchOn: xdr.lookup(\"ManageSellOfferResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"manageSellOfferSuccess\", \"success\"],\n    [\"manageSellOfferMalformed\", xdr.void()],\n    [\"manageSellOfferSellNoTrust\", xdr.void()],\n    [\"manageSellOfferBuyNoTrust\", xdr.void()],\n    [\"manageSellOfferSellNotAuthorized\", xdr.void()],\n    [\"manageSellOfferBuyNotAuthorized\", xdr.void()],\n    [\"manageSellOfferLineFull\", xdr.void()],\n    [\"manageSellOfferUnderfunded\", xdr.void()],\n    [\"manageSellOfferCrossSelf\", xdr.void()],\n    [\"manageSellOfferSellNoIssuer\", xdr.void()],\n    [\"manageSellOfferBuyNoIssuer\", xdr.void()],\n    [\"manageSellOfferNotFound\", xdr.void()],\n    [\"manageSellOfferLowReserve\", xdr.void()],\n  ],\n  arms: {\n    success: xdr.lookup(\"ManageOfferSuccessResult\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ManageBuyOfferResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       MANAGE_BUY_OFFER_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       MANAGE_BUY_OFFER_MALFORMED = -1,     // generated offer would be invalid\n//       MANAGE_BUY_OFFER_SELL_NO_TRUST = -2, // no trust line for what we're selling\n//       MANAGE_BUY_OFFER_BUY_NO_TRUST = -3,  // no trust line for what we're buying\n//       MANAGE_BUY_OFFER_SELL_NOT_AUTHORIZED = -4, // not authorized to sell\n//       MANAGE_BUY_OFFER_BUY_NOT_AUTHORIZED = -5,  // not authorized to buy\n//       MANAGE_BUY_OFFER_LINE_FULL = -6,   // can't receive more of what it's buying\n//       MANAGE_BUY_OFFER_UNDERFUNDED = -7, // doesn't hold what it's trying to sell\n//       MANAGE_BUY_OFFER_CROSS_SELF = -8, // would cross an offer from the same user\n//       MANAGE_BUY_OFFER_SELL_NO_ISSUER = -9, // no issuer for what we're selling\n//       MANAGE_BUY_OFFER_BUY_NO_ISSUER = -10, // no issuer for what we're buying\n//   \n//       // update errors\n//       MANAGE_BUY_OFFER_NOT_FOUND =\n//           -11, // offerID does not match an existing offer\n//   \n//       MANAGE_BUY_OFFER_LOW_RESERVE = -12 // not enough funds to create a new Offer\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ManageBuyOfferResultCode\", {\n  manageBuyOfferSuccess: 0,\n  manageBuyOfferMalformed: -1,\n  manageBuyOfferSellNoTrust: -2,\n  manageBuyOfferBuyNoTrust: -3,\n  manageBuyOfferSellNotAuthorized: -4,\n  manageBuyOfferBuyNotAuthorized: -5,\n  manageBuyOfferLineFull: -6,\n  manageBuyOfferUnderfunded: -7,\n  manageBuyOfferCrossSelf: -8,\n  manageBuyOfferSellNoIssuer: -9,\n  manageBuyOfferBuyNoIssuer: -10,\n  manageBuyOfferNotFound: -11,\n  manageBuyOfferLowReserve: -12,\n});\n\n// === xdr source ============================================================\n//\n//   union ManageBuyOfferResult switch (ManageBuyOfferResultCode code)\n//   {\n//   case MANAGE_BUY_OFFER_SUCCESS:\n//       ManageOfferSuccessResult success;\n//   case MANAGE_BUY_OFFER_MALFORMED:\n//   case MANAGE_BUY_OFFER_SELL_NO_TRUST:\n//   case MANAGE_BUY_OFFER_BUY_NO_TRUST:\n//   case MANAGE_BUY_OFFER_SELL_NOT_AUTHORIZED:\n//   case MANAGE_BUY_OFFER_BUY_NOT_AUTHORIZED:\n//   case MANAGE_BUY_OFFER_LINE_FULL:\n//   case MANAGE_BUY_OFFER_UNDERFUNDED:\n//   case MANAGE_BUY_OFFER_CROSS_SELF:\n//   case MANAGE_BUY_OFFER_SELL_NO_ISSUER:\n//   case MANAGE_BUY_OFFER_BUY_NO_ISSUER:\n//   case MANAGE_BUY_OFFER_NOT_FOUND:\n//   case MANAGE_BUY_OFFER_LOW_RESERVE:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ManageBuyOfferResult\", {\n  switchOn: xdr.lookup(\"ManageBuyOfferResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"manageBuyOfferSuccess\", \"success\"],\n    [\"manageBuyOfferMalformed\", xdr.void()],\n    [\"manageBuyOfferSellNoTrust\", xdr.void()],\n    [\"manageBuyOfferBuyNoTrust\", xdr.void()],\n    [\"manageBuyOfferSellNotAuthorized\", xdr.void()],\n    [\"manageBuyOfferBuyNotAuthorized\", xdr.void()],\n    [\"manageBuyOfferLineFull\", xdr.void()],\n    [\"manageBuyOfferUnderfunded\", xdr.void()],\n    [\"manageBuyOfferCrossSelf\", xdr.void()],\n    [\"manageBuyOfferSellNoIssuer\", xdr.void()],\n    [\"manageBuyOfferBuyNoIssuer\", xdr.void()],\n    [\"manageBuyOfferNotFound\", xdr.void()],\n    [\"manageBuyOfferLowReserve\", xdr.void()],\n  ],\n  arms: {\n    success: xdr.lookup(\"ManageOfferSuccessResult\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum SetOptionsResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       SET_OPTIONS_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       SET_OPTIONS_LOW_RESERVE = -1,      // not enough funds to add a signer\n//       SET_OPTIONS_TOO_MANY_SIGNERS = -2, // max number of signers already reached\n//       SET_OPTIONS_BAD_FLAGS = -3,        // invalid combination of clear/set flags\n//       SET_OPTIONS_INVALID_INFLATION = -4,      // inflation account does not exist\n//       SET_OPTIONS_CANT_CHANGE = -5,            // can no longer change this option\n//       SET_OPTIONS_UNKNOWN_FLAG = -6,           // can't set an unknown flag\n//       SET_OPTIONS_THRESHOLD_OUT_OF_RANGE = -7, // bad value for weight/threshold\n//       SET_OPTIONS_BAD_SIGNER = -8,             // signer cannot be masterkey\n//       SET_OPTIONS_INVALID_HOME_DOMAIN = -9,    // malformed home domain\n//       SET_OPTIONS_AUTH_REVOCABLE_REQUIRED =\n//           -10 // auth revocable is required for clawback\n//   };\n//\n// ===========================================================================\nxdr.enum(\"SetOptionsResultCode\", {\n  setOptionsSuccess: 0,\n  setOptionsLowReserve: -1,\n  setOptionsTooManySigners: -2,\n  setOptionsBadFlags: -3,\n  setOptionsInvalidInflation: -4,\n  setOptionsCantChange: -5,\n  setOptionsUnknownFlag: -6,\n  setOptionsThresholdOutOfRange: -7,\n  setOptionsBadSigner: -8,\n  setOptionsInvalidHomeDomain: -9,\n  setOptionsAuthRevocableRequired: -10,\n});\n\n// === xdr source ============================================================\n//\n//   union SetOptionsResult switch (SetOptionsResultCode code)\n//   {\n//   case SET_OPTIONS_SUCCESS:\n//       void;\n//   case SET_OPTIONS_LOW_RESERVE:\n//   case SET_OPTIONS_TOO_MANY_SIGNERS:\n//   case SET_OPTIONS_BAD_FLAGS:\n//   case SET_OPTIONS_INVALID_INFLATION:\n//   case SET_OPTIONS_CANT_CHANGE:\n//   case SET_OPTIONS_UNKNOWN_FLAG:\n//   case SET_OPTIONS_THRESHOLD_OUT_OF_RANGE:\n//   case SET_OPTIONS_BAD_SIGNER:\n//   case SET_OPTIONS_INVALID_HOME_DOMAIN:\n//   case SET_OPTIONS_AUTH_REVOCABLE_REQUIRED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"SetOptionsResult\", {\n  switchOn: xdr.lookup(\"SetOptionsResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"setOptionsSuccess\", xdr.void()],\n    [\"setOptionsLowReserve\", xdr.void()],\n    [\"setOptionsTooManySigners\", xdr.void()],\n    [\"setOptionsBadFlags\", xdr.void()],\n    [\"setOptionsInvalidInflation\", xdr.void()],\n    [\"setOptionsCantChange\", xdr.void()],\n    [\"setOptionsUnknownFlag\", xdr.void()],\n    [\"setOptionsThresholdOutOfRange\", xdr.void()],\n    [\"setOptionsBadSigner\", xdr.void()],\n    [\"setOptionsInvalidHomeDomain\", xdr.void()],\n    [\"setOptionsAuthRevocableRequired\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ChangeTrustResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       CHANGE_TRUST_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       CHANGE_TRUST_MALFORMED = -1,     // bad input\n//       CHANGE_TRUST_NO_ISSUER = -2,     // could not find issuer\n//       CHANGE_TRUST_INVALID_LIMIT = -3, // cannot drop limit below balance\n//                                        // cannot create with a limit of 0\n//       CHANGE_TRUST_LOW_RESERVE =\n//           -4, // not enough funds to create a new trust line,\n//       CHANGE_TRUST_SELF_NOT_ALLOWED = -5,   // trusting self is not allowed\n//       CHANGE_TRUST_TRUST_LINE_MISSING = -6, // Asset trustline is missing for pool\n//       CHANGE_TRUST_CANNOT_DELETE =\n//           -7, // Asset trustline is still referenced in a pool\n//       CHANGE_TRUST_NOT_AUTH_MAINTAIN_LIABILITIES =\n//           -8 // Asset trustline is deauthorized\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ChangeTrustResultCode\", {\n  changeTrustSuccess: 0,\n  changeTrustMalformed: -1,\n  changeTrustNoIssuer: -2,\n  changeTrustInvalidLimit: -3,\n  changeTrustLowReserve: -4,\n  changeTrustSelfNotAllowed: -5,\n  changeTrustTrustLineMissing: -6,\n  changeTrustCannotDelete: -7,\n  changeTrustNotAuthMaintainLiabilities: -8,\n});\n\n// === xdr source ============================================================\n//\n//   union ChangeTrustResult switch (ChangeTrustResultCode code)\n//   {\n//   case CHANGE_TRUST_SUCCESS:\n//       void;\n//   case CHANGE_TRUST_MALFORMED:\n//   case CHANGE_TRUST_NO_ISSUER:\n//   case CHANGE_TRUST_INVALID_LIMIT:\n//   case CHANGE_TRUST_LOW_RESERVE:\n//   case CHANGE_TRUST_SELF_NOT_ALLOWED:\n//   case CHANGE_TRUST_TRUST_LINE_MISSING:\n//   case CHANGE_TRUST_CANNOT_DELETE:\n//   case CHANGE_TRUST_NOT_AUTH_MAINTAIN_LIABILITIES:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ChangeTrustResult\", {\n  switchOn: xdr.lookup(\"ChangeTrustResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"changeTrustSuccess\", xdr.void()],\n    [\"changeTrustMalformed\", xdr.void()],\n    [\"changeTrustNoIssuer\", xdr.void()],\n    [\"changeTrustInvalidLimit\", xdr.void()],\n    [\"changeTrustLowReserve\", xdr.void()],\n    [\"changeTrustSelfNotAllowed\", xdr.void()],\n    [\"changeTrustTrustLineMissing\", xdr.void()],\n    [\"changeTrustCannotDelete\", xdr.void()],\n    [\"changeTrustNotAuthMaintainLiabilities\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum AllowTrustResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       ALLOW_TRUST_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       ALLOW_TRUST_MALFORMED = -1,     // asset is not ASSET_TYPE_ALPHANUM\n//       ALLOW_TRUST_NO_TRUST_LINE = -2, // trustor does not have a trustline\n//                                       // source account does not require trust\n//       ALLOW_TRUST_TRUST_NOT_REQUIRED = -3,\n//       ALLOW_TRUST_CANT_REVOKE = -4,      // source account can't revoke trust,\n//       ALLOW_TRUST_SELF_NOT_ALLOWED = -5, // trusting self is not allowed\n//       ALLOW_TRUST_LOW_RESERVE = -6       // claimable balances can't be created\n//                                          // on revoke due to low reserves\n//   };\n//\n// ===========================================================================\nxdr.enum(\"AllowTrustResultCode\", {\n  allowTrustSuccess: 0,\n  allowTrustMalformed: -1,\n  allowTrustNoTrustLine: -2,\n  allowTrustTrustNotRequired: -3,\n  allowTrustCantRevoke: -4,\n  allowTrustSelfNotAllowed: -5,\n  allowTrustLowReserve: -6,\n});\n\n// === xdr source ============================================================\n//\n//   union AllowTrustResult switch (AllowTrustResultCode code)\n//   {\n//   case ALLOW_TRUST_SUCCESS:\n//       void;\n//   case ALLOW_TRUST_MALFORMED:\n//   case ALLOW_TRUST_NO_TRUST_LINE:\n//   case ALLOW_TRUST_TRUST_NOT_REQUIRED:\n//   case ALLOW_TRUST_CANT_REVOKE:\n//   case ALLOW_TRUST_SELF_NOT_ALLOWED:\n//   case ALLOW_TRUST_LOW_RESERVE:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"AllowTrustResult\", {\n  switchOn: xdr.lookup(\"AllowTrustResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"allowTrustSuccess\", xdr.void()],\n    [\"allowTrustMalformed\", xdr.void()],\n    [\"allowTrustNoTrustLine\", xdr.void()],\n    [\"allowTrustTrustNotRequired\", xdr.void()],\n    [\"allowTrustCantRevoke\", xdr.void()],\n    [\"allowTrustSelfNotAllowed\", xdr.void()],\n    [\"allowTrustLowReserve\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum AccountMergeResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       ACCOUNT_MERGE_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       ACCOUNT_MERGE_MALFORMED = -1,       // can't merge onto itself\n//       ACCOUNT_MERGE_NO_ACCOUNT = -2,      // destination does not exist\n//       ACCOUNT_MERGE_IMMUTABLE_SET = -3,   // source account has AUTH_IMMUTABLE set\n//       ACCOUNT_MERGE_HAS_SUB_ENTRIES = -4, // account has trust lines/offers\n//       ACCOUNT_MERGE_SEQNUM_TOO_FAR = -5,  // sequence number is over max allowed\n//       ACCOUNT_MERGE_DEST_FULL = -6,       // can't add source balance to\n//                                           // destination balance\n//       ACCOUNT_MERGE_IS_SPONSOR = -7       // can't merge account that is a sponsor\n//   };\n//\n// ===========================================================================\nxdr.enum(\"AccountMergeResultCode\", {\n  accountMergeSuccess: 0,\n  accountMergeMalformed: -1,\n  accountMergeNoAccount: -2,\n  accountMergeImmutableSet: -3,\n  accountMergeHasSubEntries: -4,\n  accountMergeSeqnumTooFar: -5,\n  accountMergeDestFull: -6,\n  accountMergeIsSponsor: -7,\n});\n\n// === xdr source ============================================================\n//\n//   union AccountMergeResult switch (AccountMergeResultCode code)\n//   {\n//   case ACCOUNT_MERGE_SUCCESS:\n//       int64 sourceAccountBalance; // how much got transferred from source account\n//   case ACCOUNT_MERGE_MALFORMED:\n//   case ACCOUNT_MERGE_NO_ACCOUNT:\n//   case ACCOUNT_MERGE_IMMUTABLE_SET:\n//   case ACCOUNT_MERGE_HAS_SUB_ENTRIES:\n//   case ACCOUNT_MERGE_SEQNUM_TOO_FAR:\n//   case ACCOUNT_MERGE_DEST_FULL:\n//   case ACCOUNT_MERGE_IS_SPONSOR:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"AccountMergeResult\", {\n  switchOn: xdr.lookup(\"AccountMergeResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"accountMergeSuccess\", \"sourceAccountBalance\"],\n    [\"accountMergeMalformed\", xdr.void()],\n    [\"accountMergeNoAccount\", xdr.void()],\n    [\"accountMergeImmutableSet\", xdr.void()],\n    [\"accountMergeHasSubEntries\", xdr.void()],\n    [\"accountMergeSeqnumTooFar\", xdr.void()],\n    [\"accountMergeDestFull\", xdr.void()],\n    [\"accountMergeIsSponsor\", xdr.void()],\n  ],\n  arms: {\n    sourceAccountBalance: xdr.lookup(\"Int64\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum InflationResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       INFLATION_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       INFLATION_NOT_TIME = -1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"InflationResultCode\", {\n  inflationSuccess: 0,\n  inflationNotTime: -1,\n});\n\n// === xdr source ============================================================\n//\n//   struct InflationPayout // or use PaymentResultAtom to limit types?\n//   {\n//       AccountID destination;\n//       int64 amount;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"InflationPayout\", [\n  [\"destination\", xdr.lookup(\"AccountId\")],\n  [\"amount\", xdr.lookup(\"Int64\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union InflationResult switch (InflationResultCode code)\n//   {\n//   case INFLATION_SUCCESS:\n//       InflationPayout payouts<>;\n//   case INFLATION_NOT_TIME:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"InflationResult\", {\n  switchOn: xdr.lookup(\"InflationResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"inflationSuccess\", \"payouts\"],\n    [\"inflationNotTime\", xdr.void()],\n  ],\n  arms: {\n    payouts: xdr.varArray(xdr.lookup(\"InflationPayout\"), 2147483647),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ManageDataResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       MANAGE_DATA_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       MANAGE_DATA_NOT_SUPPORTED_YET =\n//           -1, // The network hasn't moved to this protocol change yet\n//       MANAGE_DATA_NAME_NOT_FOUND =\n//           -2, // Trying to remove a Data Entry that isn't there\n//       MANAGE_DATA_LOW_RESERVE = -3, // not enough funds to create a new Data Entry\n//       MANAGE_DATA_INVALID_NAME = -4 // Name not a valid string\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ManageDataResultCode\", {\n  manageDataSuccess: 0,\n  manageDataNotSupportedYet: -1,\n  manageDataNameNotFound: -2,\n  manageDataLowReserve: -3,\n  manageDataInvalidName: -4,\n});\n\n// === xdr source ============================================================\n//\n//   union ManageDataResult switch (ManageDataResultCode code)\n//   {\n//   case MANAGE_DATA_SUCCESS:\n//       void;\n//   case MANAGE_DATA_NOT_SUPPORTED_YET:\n//   case MANAGE_DATA_NAME_NOT_FOUND:\n//   case MANAGE_DATA_LOW_RESERVE:\n//   case MANAGE_DATA_INVALID_NAME:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ManageDataResult\", {\n  switchOn: xdr.lookup(\"ManageDataResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"manageDataSuccess\", xdr.void()],\n    [\"manageDataNotSupportedYet\", xdr.void()],\n    [\"manageDataNameNotFound\", xdr.void()],\n    [\"manageDataLowReserve\", xdr.void()],\n    [\"manageDataInvalidName\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum BumpSequenceResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       BUMP_SEQUENCE_SUCCESS = 0,\n//       // codes considered as \"failure\" for the operation\n//       BUMP_SEQUENCE_BAD_SEQ = -1 // `bumpTo` is not within bounds\n//   };\n//\n// ===========================================================================\nxdr.enum(\"BumpSequenceResultCode\", {\n  bumpSequenceSuccess: 0,\n  bumpSequenceBadSeq: -1,\n});\n\n// === xdr source ============================================================\n//\n//   union BumpSequenceResult switch (BumpSequenceResultCode code)\n//   {\n//   case BUMP_SEQUENCE_SUCCESS:\n//       void;\n//   case BUMP_SEQUENCE_BAD_SEQ:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"BumpSequenceResult\", {\n  switchOn: xdr.lookup(\"BumpSequenceResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"bumpSequenceSuccess\", xdr.void()],\n    [\"bumpSequenceBadSeq\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum CreateClaimableBalanceResultCode\n//   {\n//       CREATE_CLAIMABLE_BALANCE_SUCCESS = 0,\n//       CREATE_CLAIMABLE_BALANCE_MALFORMED = -1,\n//       CREATE_CLAIMABLE_BALANCE_LOW_RESERVE = -2,\n//       CREATE_CLAIMABLE_BALANCE_NO_TRUST = -3,\n//       CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED = -4,\n//       CREATE_CLAIMABLE_BALANCE_UNDERFUNDED = -5\n//   };\n//\n// ===========================================================================\nxdr.enum(\"CreateClaimableBalanceResultCode\", {\n  createClaimableBalanceSuccess: 0,\n  createClaimableBalanceMalformed: -1,\n  createClaimableBalanceLowReserve: -2,\n  createClaimableBalanceNoTrust: -3,\n  createClaimableBalanceNotAuthorized: -4,\n  createClaimableBalanceUnderfunded: -5,\n});\n\n// === xdr source ============================================================\n//\n//   union CreateClaimableBalanceResult switch (\n//       CreateClaimableBalanceResultCode code)\n//   {\n//   case CREATE_CLAIMABLE_BALANCE_SUCCESS:\n//       ClaimableBalanceID balanceID;\n//   case CREATE_CLAIMABLE_BALANCE_MALFORMED:\n//   case CREATE_CLAIMABLE_BALANCE_LOW_RESERVE:\n//   case CREATE_CLAIMABLE_BALANCE_NO_TRUST:\n//   case CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED:\n//   case CREATE_CLAIMABLE_BALANCE_UNDERFUNDED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"CreateClaimableBalanceResult\", {\n  switchOn: xdr.lookup(\"CreateClaimableBalanceResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"createClaimableBalanceSuccess\", \"balanceId\"],\n    [\"createClaimableBalanceMalformed\", xdr.void()],\n    [\"createClaimableBalanceLowReserve\", xdr.void()],\n    [\"createClaimableBalanceNoTrust\", xdr.void()],\n    [\"createClaimableBalanceNotAuthorized\", xdr.void()],\n    [\"createClaimableBalanceUnderfunded\", xdr.void()],\n  ],\n  arms: {\n    balanceId: xdr.lookup(\"ClaimableBalanceId\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ClaimClaimableBalanceResultCode\n//   {\n//       CLAIM_CLAIMABLE_BALANCE_SUCCESS = 0,\n//       CLAIM_CLAIMABLE_BALANCE_DOES_NOT_EXIST = -1,\n//       CLAIM_CLAIMABLE_BALANCE_CANNOT_CLAIM = -2,\n//       CLAIM_CLAIMABLE_BALANCE_LINE_FULL = -3,\n//       CLAIM_CLAIMABLE_BALANCE_NO_TRUST = -4,\n//       CLAIM_CLAIMABLE_BALANCE_NOT_AUTHORIZED = -5\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClaimClaimableBalanceResultCode\", {\n  claimClaimableBalanceSuccess: 0,\n  claimClaimableBalanceDoesNotExist: -1,\n  claimClaimableBalanceCannotClaim: -2,\n  claimClaimableBalanceLineFull: -3,\n  claimClaimableBalanceNoTrust: -4,\n  claimClaimableBalanceNotAuthorized: -5,\n});\n\n// === xdr source ============================================================\n//\n//   union ClaimClaimableBalanceResult switch (ClaimClaimableBalanceResultCode code)\n//   {\n//   case CLAIM_CLAIMABLE_BALANCE_SUCCESS:\n//       void;\n//   case CLAIM_CLAIMABLE_BALANCE_DOES_NOT_EXIST:\n//   case CLAIM_CLAIMABLE_BALANCE_CANNOT_CLAIM:\n//   case CLAIM_CLAIMABLE_BALANCE_LINE_FULL:\n//   case CLAIM_CLAIMABLE_BALANCE_NO_TRUST:\n//   case CLAIM_CLAIMABLE_BALANCE_NOT_AUTHORIZED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ClaimClaimableBalanceResult\", {\n  switchOn: xdr.lookup(\"ClaimClaimableBalanceResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"claimClaimableBalanceSuccess\", xdr.void()],\n    [\"claimClaimableBalanceDoesNotExist\", xdr.void()],\n    [\"claimClaimableBalanceCannotClaim\", xdr.void()],\n    [\"claimClaimableBalanceLineFull\", xdr.void()],\n    [\"claimClaimableBalanceNoTrust\", xdr.void()],\n    [\"claimClaimableBalanceNotAuthorized\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum BeginSponsoringFutureReservesResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       BEGIN_SPONSORING_FUTURE_RESERVES_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       BEGIN_SPONSORING_FUTURE_RESERVES_MALFORMED = -1,\n//       BEGIN_SPONSORING_FUTURE_RESERVES_ALREADY_SPONSORED = -2,\n//       BEGIN_SPONSORING_FUTURE_RESERVES_RECURSIVE = -3\n//   };\n//\n// ===========================================================================\nxdr.enum(\"BeginSponsoringFutureReservesResultCode\", {\n  beginSponsoringFutureReservesSuccess: 0,\n  beginSponsoringFutureReservesMalformed: -1,\n  beginSponsoringFutureReservesAlreadySponsored: -2,\n  beginSponsoringFutureReservesRecursive: -3,\n});\n\n// === xdr source ============================================================\n//\n//   union BeginSponsoringFutureReservesResult switch (\n//       BeginSponsoringFutureReservesResultCode code)\n//   {\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_SUCCESS:\n//       void;\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_MALFORMED:\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_ALREADY_SPONSORED:\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_RECURSIVE:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"BeginSponsoringFutureReservesResult\", {\n  switchOn: xdr.lookup(\"BeginSponsoringFutureReservesResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"beginSponsoringFutureReservesSuccess\", xdr.void()],\n    [\"beginSponsoringFutureReservesMalformed\", xdr.void()],\n    [\"beginSponsoringFutureReservesAlreadySponsored\", xdr.void()],\n    [\"beginSponsoringFutureReservesRecursive\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum EndSponsoringFutureReservesResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       END_SPONSORING_FUTURE_RESERVES_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       END_SPONSORING_FUTURE_RESERVES_NOT_SPONSORED = -1\n//   };\n//\n// ===========================================================================\nxdr.enum(\"EndSponsoringFutureReservesResultCode\", {\n  endSponsoringFutureReservesSuccess: 0,\n  endSponsoringFutureReservesNotSponsored: -1,\n});\n\n// === xdr source ============================================================\n//\n//   union EndSponsoringFutureReservesResult switch (\n//       EndSponsoringFutureReservesResultCode code)\n//   {\n//   case END_SPONSORING_FUTURE_RESERVES_SUCCESS:\n//       void;\n//   case END_SPONSORING_FUTURE_RESERVES_NOT_SPONSORED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"EndSponsoringFutureReservesResult\", {\n  switchOn: xdr.lookup(\"EndSponsoringFutureReservesResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"endSponsoringFutureReservesSuccess\", xdr.void()],\n    [\"endSponsoringFutureReservesNotSponsored\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum RevokeSponsorshipResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       REVOKE_SPONSORSHIP_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       REVOKE_SPONSORSHIP_DOES_NOT_EXIST = -1,\n//       REVOKE_SPONSORSHIP_NOT_SPONSOR = -2,\n//       REVOKE_SPONSORSHIP_LOW_RESERVE = -3,\n//       REVOKE_SPONSORSHIP_ONLY_TRANSFERABLE = -4,\n//       REVOKE_SPONSORSHIP_MALFORMED = -5\n//   };\n//\n// ===========================================================================\nxdr.enum(\"RevokeSponsorshipResultCode\", {\n  revokeSponsorshipSuccess: 0,\n  revokeSponsorshipDoesNotExist: -1,\n  revokeSponsorshipNotSponsor: -2,\n  revokeSponsorshipLowReserve: -3,\n  revokeSponsorshipOnlyTransferable: -4,\n  revokeSponsorshipMalformed: -5,\n});\n\n// === xdr source ============================================================\n//\n//   union RevokeSponsorshipResult switch (RevokeSponsorshipResultCode code)\n//   {\n//   case REVOKE_SPONSORSHIP_SUCCESS:\n//       void;\n//   case REVOKE_SPONSORSHIP_DOES_NOT_EXIST:\n//   case REVOKE_SPONSORSHIP_NOT_SPONSOR:\n//   case REVOKE_SPONSORSHIP_LOW_RESERVE:\n//   case REVOKE_SPONSORSHIP_ONLY_TRANSFERABLE:\n//   case REVOKE_SPONSORSHIP_MALFORMED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"RevokeSponsorshipResult\", {\n  switchOn: xdr.lookup(\"RevokeSponsorshipResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"revokeSponsorshipSuccess\", xdr.void()],\n    [\"revokeSponsorshipDoesNotExist\", xdr.void()],\n    [\"revokeSponsorshipNotSponsor\", xdr.void()],\n    [\"revokeSponsorshipLowReserve\", xdr.void()],\n    [\"revokeSponsorshipOnlyTransferable\", xdr.void()],\n    [\"revokeSponsorshipMalformed\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ClawbackResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       CLAWBACK_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       CLAWBACK_MALFORMED = -1,\n//       CLAWBACK_NOT_CLAWBACK_ENABLED = -2,\n//       CLAWBACK_NO_TRUST = -3,\n//       CLAWBACK_UNDERFUNDED = -4\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClawbackResultCode\", {\n  clawbackSuccess: 0,\n  clawbackMalformed: -1,\n  clawbackNotClawbackEnabled: -2,\n  clawbackNoTrust: -3,\n  clawbackUnderfunded: -4,\n});\n\n// === xdr source ============================================================\n//\n//   union ClawbackResult switch (ClawbackResultCode code)\n//   {\n//   case CLAWBACK_SUCCESS:\n//       void;\n//   case CLAWBACK_MALFORMED:\n//   case CLAWBACK_NOT_CLAWBACK_ENABLED:\n//   case CLAWBACK_NO_TRUST:\n//   case CLAWBACK_UNDERFUNDED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ClawbackResult\", {\n  switchOn: xdr.lookup(\"ClawbackResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"clawbackSuccess\", xdr.void()],\n    [\"clawbackMalformed\", xdr.void()],\n    [\"clawbackNotClawbackEnabled\", xdr.void()],\n    [\"clawbackNoTrust\", xdr.void()],\n    [\"clawbackUnderfunded\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum ClawbackClaimableBalanceResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       CLAWBACK_CLAIMABLE_BALANCE_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST = -1,\n//       CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER = -2,\n//       CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED = -3\n//   };\n//\n// ===========================================================================\nxdr.enum(\"ClawbackClaimableBalanceResultCode\", {\n  clawbackClaimableBalanceSuccess: 0,\n  clawbackClaimableBalanceDoesNotExist: -1,\n  clawbackClaimableBalanceNotIssuer: -2,\n  clawbackClaimableBalanceNotClawbackEnabled: -3,\n});\n\n// === xdr source ============================================================\n//\n//   union ClawbackClaimableBalanceResult switch (\n//       ClawbackClaimableBalanceResultCode code)\n//   {\n//   case CLAWBACK_CLAIMABLE_BALANCE_SUCCESS:\n//       void;\n//   case CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST:\n//   case CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER:\n//   case CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ClawbackClaimableBalanceResult\", {\n  switchOn: xdr.lookup(\"ClawbackClaimableBalanceResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"clawbackClaimableBalanceSuccess\", xdr.void()],\n    [\"clawbackClaimableBalanceDoesNotExist\", xdr.void()],\n    [\"clawbackClaimableBalanceNotIssuer\", xdr.void()],\n    [\"clawbackClaimableBalanceNotClawbackEnabled\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum SetTrustLineFlagsResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       SET_TRUST_LINE_FLAGS_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       SET_TRUST_LINE_FLAGS_MALFORMED = -1,\n//       SET_TRUST_LINE_FLAGS_NO_TRUST_LINE = -2,\n//       SET_TRUST_LINE_FLAGS_CANT_REVOKE = -3,\n//       SET_TRUST_LINE_FLAGS_INVALID_STATE = -4,\n//       SET_TRUST_LINE_FLAGS_LOW_RESERVE = -5 // claimable balances can't be created\n//                                             // on revoke due to low reserves\n//   };\n//\n// ===========================================================================\nxdr.enum(\"SetTrustLineFlagsResultCode\", {\n  setTrustLineFlagsSuccess: 0,\n  setTrustLineFlagsMalformed: -1,\n  setTrustLineFlagsNoTrustLine: -2,\n  setTrustLineFlagsCantRevoke: -3,\n  setTrustLineFlagsInvalidState: -4,\n  setTrustLineFlagsLowReserve: -5,\n});\n\n// === xdr source ============================================================\n//\n//   union SetTrustLineFlagsResult switch (SetTrustLineFlagsResultCode code)\n//   {\n//   case SET_TRUST_LINE_FLAGS_SUCCESS:\n//       void;\n//   case SET_TRUST_LINE_FLAGS_MALFORMED:\n//   case SET_TRUST_LINE_FLAGS_NO_TRUST_LINE:\n//   case SET_TRUST_LINE_FLAGS_CANT_REVOKE:\n//   case SET_TRUST_LINE_FLAGS_INVALID_STATE:\n//   case SET_TRUST_LINE_FLAGS_LOW_RESERVE:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"SetTrustLineFlagsResult\", {\n  switchOn: xdr.lookup(\"SetTrustLineFlagsResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"setTrustLineFlagsSuccess\", xdr.void()],\n    [\"setTrustLineFlagsMalformed\", xdr.void()],\n    [\"setTrustLineFlagsNoTrustLine\", xdr.void()],\n    [\"setTrustLineFlagsCantRevoke\", xdr.void()],\n    [\"setTrustLineFlagsInvalidState\", xdr.void()],\n    [\"setTrustLineFlagsLowReserve\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum LiquidityPoolDepositResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       LIQUIDITY_POOL_DEPOSIT_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       LIQUIDITY_POOL_DEPOSIT_MALFORMED = -1,      // bad input\n//       LIQUIDITY_POOL_DEPOSIT_NO_TRUST = -2,       // no trust line for one of the\n//                                                   // assets\n//       LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED = -3, // not authorized for one of the\n//                                                   // assets\n//       LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED = -4,    // not enough balance for one of\n//                                                   // the assets\n//       LIQUIDITY_POOL_DEPOSIT_LINE_FULL = -5,      // pool share trust line doesn't\n//                                                   // have sufficient limit\n//       LIQUIDITY_POOL_DEPOSIT_BAD_PRICE = -6,      // deposit price outside bounds\n//       LIQUIDITY_POOL_DEPOSIT_POOL_FULL = -7       // pool reserves are full\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LiquidityPoolDepositResultCode\", {\n  liquidityPoolDepositSuccess: 0,\n  liquidityPoolDepositMalformed: -1,\n  liquidityPoolDepositNoTrust: -2,\n  liquidityPoolDepositNotAuthorized: -3,\n  liquidityPoolDepositUnderfunded: -4,\n  liquidityPoolDepositLineFull: -5,\n  liquidityPoolDepositBadPrice: -6,\n  liquidityPoolDepositPoolFull: -7,\n});\n\n// === xdr source ============================================================\n//\n//   union LiquidityPoolDepositResult switch (LiquidityPoolDepositResultCode code)\n//   {\n//   case LIQUIDITY_POOL_DEPOSIT_SUCCESS:\n//       void;\n//   case LIQUIDITY_POOL_DEPOSIT_MALFORMED:\n//   case LIQUIDITY_POOL_DEPOSIT_NO_TRUST:\n//   case LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED:\n//   case LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED:\n//   case LIQUIDITY_POOL_DEPOSIT_LINE_FULL:\n//   case LIQUIDITY_POOL_DEPOSIT_BAD_PRICE:\n//   case LIQUIDITY_POOL_DEPOSIT_POOL_FULL:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LiquidityPoolDepositResult\", {\n  switchOn: xdr.lookup(\"LiquidityPoolDepositResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"liquidityPoolDepositSuccess\", xdr.void()],\n    [\"liquidityPoolDepositMalformed\", xdr.void()],\n    [\"liquidityPoolDepositNoTrust\", xdr.void()],\n    [\"liquidityPoolDepositNotAuthorized\", xdr.void()],\n    [\"liquidityPoolDepositUnderfunded\", xdr.void()],\n    [\"liquidityPoolDepositLineFull\", xdr.void()],\n    [\"liquidityPoolDepositBadPrice\", xdr.void()],\n    [\"liquidityPoolDepositPoolFull\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum LiquidityPoolWithdrawResultCode\n//   {\n//       // codes considered as \"success\" for the operation\n//       LIQUIDITY_POOL_WITHDRAW_SUCCESS = 0,\n//   \n//       // codes considered as \"failure\" for the operation\n//       LIQUIDITY_POOL_WITHDRAW_MALFORMED = -1,    // bad input\n//       LIQUIDITY_POOL_WITHDRAW_NO_TRUST = -2,     // no trust line for one of the\n//                                                  // assets\n//       LIQUIDITY_POOL_WITHDRAW_UNDERFUNDED = -3,  // not enough balance of the\n//                                                  // pool share\n//       LIQUIDITY_POOL_WITHDRAW_LINE_FULL = -4,    // would go above limit for one\n//                                                  // of the assets\n//       LIQUIDITY_POOL_WITHDRAW_UNDER_MINIMUM = -5 // didn't withdraw enough\n//   };\n//\n// ===========================================================================\nxdr.enum(\"LiquidityPoolWithdrawResultCode\", {\n  liquidityPoolWithdrawSuccess: 0,\n  liquidityPoolWithdrawMalformed: -1,\n  liquidityPoolWithdrawNoTrust: -2,\n  liquidityPoolWithdrawUnderfunded: -3,\n  liquidityPoolWithdrawLineFull: -4,\n  liquidityPoolWithdrawUnderMinimum: -5,\n});\n\n// === xdr source ============================================================\n//\n//   union LiquidityPoolWithdrawResult switch (LiquidityPoolWithdrawResultCode code)\n//   {\n//   case LIQUIDITY_POOL_WITHDRAW_SUCCESS:\n//       void;\n//   case LIQUIDITY_POOL_WITHDRAW_MALFORMED:\n//   case LIQUIDITY_POOL_WITHDRAW_NO_TRUST:\n//   case LIQUIDITY_POOL_WITHDRAW_UNDERFUNDED:\n//   case LIQUIDITY_POOL_WITHDRAW_LINE_FULL:\n//   case LIQUIDITY_POOL_WITHDRAW_UNDER_MINIMUM:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"LiquidityPoolWithdrawResult\", {\n  switchOn: xdr.lookup(\"LiquidityPoolWithdrawResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"liquidityPoolWithdrawSuccess\", xdr.void()],\n    [\"liquidityPoolWithdrawMalformed\", xdr.void()],\n    [\"liquidityPoolWithdrawNoTrust\", xdr.void()],\n    [\"liquidityPoolWithdrawUnderfunded\", xdr.void()],\n    [\"liquidityPoolWithdrawLineFull\", xdr.void()],\n    [\"liquidityPoolWithdrawUnderMinimum\", xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum OperationResultCode\n//   {\n//       opINNER = 0, // inner object result is valid\n//   \n//       opBAD_AUTH = -1,            // too few valid signatures / wrong network\n//       opNO_ACCOUNT = -2,          // source account was not found\n//       opNOT_SUPPORTED = -3,       // operation not supported at this time\n//       opTOO_MANY_SUBENTRIES = -4, // max number of subentries already reached\n//       opEXCEEDED_WORK_LIMIT = -5, // operation did too much work\n//       opTOO_MANY_SPONSORING = -6  // account is sponsoring too many entries\n//   };\n//\n// ===========================================================================\nxdr.enum(\"OperationResultCode\", {\n  opInner: 0,\n  opBadAuth: -1,\n  opNoAccount: -2,\n  opNotSupported: -3,\n  opTooManySubentries: -4,\n  opExceededWorkLimit: -5,\n  opTooManySponsoring: -6,\n});\n\n// === xdr source ============================================================\n//\n//   union switch (OperationType type)\n//       {\n//       case CREATE_ACCOUNT:\n//           CreateAccountResult createAccountResult;\n//       case PAYMENT:\n//           PaymentResult paymentResult;\n//       case PATH_PAYMENT_STRICT_RECEIVE:\n//           PathPaymentStrictReceiveResult pathPaymentStrictReceiveResult;\n//       case MANAGE_SELL_OFFER:\n//           ManageSellOfferResult manageSellOfferResult;\n//       case CREATE_PASSIVE_SELL_OFFER:\n//           ManageSellOfferResult createPassiveSellOfferResult;\n//       case SET_OPTIONS:\n//           SetOptionsResult setOptionsResult;\n//       case CHANGE_TRUST:\n//           ChangeTrustResult changeTrustResult;\n//       case ALLOW_TRUST:\n//           AllowTrustResult allowTrustResult;\n//       case ACCOUNT_MERGE:\n//           AccountMergeResult accountMergeResult;\n//       case INFLATION:\n//           InflationResult inflationResult;\n//       case MANAGE_DATA:\n//           ManageDataResult manageDataResult;\n//       case BUMP_SEQUENCE:\n//           BumpSequenceResult bumpSeqResult;\n//       case MANAGE_BUY_OFFER:\n//           ManageBuyOfferResult manageBuyOfferResult;\n//       case PATH_PAYMENT_STRICT_SEND:\n//           PathPaymentStrictSendResult pathPaymentStrictSendResult;\n//       case CREATE_CLAIMABLE_BALANCE:\n//           CreateClaimableBalanceResult createClaimableBalanceResult;\n//       case CLAIM_CLAIMABLE_BALANCE:\n//           ClaimClaimableBalanceResult claimClaimableBalanceResult;\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\n//           BeginSponsoringFutureReservesResult beginSponsoringFutureReservesResult;\n//       case END_SPONSORING_FUTURE_RESERVES:\n//           EndSponsoringFutureReservesResult endSponsoringFutureReservesResult;\n//       case REVOKE_SPONSORSHIP:\n//           RevokeSponsorshipResult revokeSponsorshipResult;\n//       case CLAWBACK:\n//           ClawbackResult clawbackResult;\n//       case CLAWBACK_CLAIMABLE_BALANCE:\n//           ClawbackClaimableBalanceResult clawbackClaimableBalanceResult;\n//       case SET_TRUST_LINE_FLAGS:\n//           SetTrustLineFlagsResult setTrustLineFlagsResult;\n//       case LIQUIDITY_POOL_DEPOSIT:\n//           LiquidityPoolDepositResult liquidityPoolDepositResult;\n//       case LIQUIDITY_POOL_WITHDRAW:\n//           LiquidityPoolWithdrawResult liquidityPoolWithdrawResult;\n//       }\n//\n// ===========================================================================\nxdr.union(\"OperationResultTr\", {\n  switchOn: xdr.lookup(\"OperationType\"),\n  switchName: \"type\",\n  switches: [\n    [\"createAccount\", \"createAccountResult\"],\n    [\"payment\", \"paymentResult\"],\n    [\"pathPaymentStrictReceive\", \"pathPaymentStrictReceiveResult\"],\n    [\"manageSellOffer\", \"manageSellOfferResult\"],\n    [\"createPassiveSellOffer\", \"createPassiveSellOfferResult\"],\n    [\"setOptions\", \"setOptionsResult\"],\n    [\"changeTrust\", \"changeTrustResult\"],\n    [\"allowTrust\", \"allowTrustResult\"],\n    [\"accountMerge\", \"accountMergeResult\"],\n    [\"inflation\", \"inflationResult\"],\n    [\"manageData\", \"manageDataResult\"],\n    [\"bumpSequence\", \"bumpSeqResult\"],\n    [\"manageBuyOffer\", \"manageBuyOfferResult\"],\n    [\"pathPaymentStrictSend\", \"pathPaymentStrictSendResult\"],\n    [\"createClaimableBalance\", \"createClaimableBalanceResult\"],\n    [\"claimClaimableBalance\", \"claimClaimableBalanceResult\"],\n    [\"beginSponsoringFutureReserves\", \"beginSponsoringFutureReservesResult\"],\n    [\"endSponsoringFutureReserves\", \"endSponsoringFutureReservesResult\"],\n    [\"revokeSponsorship\", \"revokeSponsorshipResult\"],\n    [\"clawback\", \"clawbackResult\"],\n    [\"clawbackClaimableBalance\", \"clawbackClaimableBalanceResult\"],\n    [\"setTrustLineFlags\", \"setTrustLineFlagsResult\"],\n    [\"liquidityPoolDeposit\", \"liquidityPoolDepositResult\"],\n    [\"liquidityPoolWithdraw\", \"liquidityPoolWithdrawResult\"],\n  ],\n  arms: {\n    createAccountResult: xdr.lookup(\"CreateAccountResult\"),\n    paymentResult: xdr.lookup(\"PaymentResult\"),\n    pathPaymentStrictReceiveResult: xdr.lookup(\"PathPaymentStrictReceiveResult\"),\n    manageSellOfferResult: xdr.lookup(\"ManageSellOfferResult\"),\n    createPassiveSellOfferResult: xdr.lookup(\"ManageSellOfferResult\"),\n    setOptionsResult: xdr.lookup(\"SetOptionsResult\"),\n    changeTrustResult: xdr.lookup(\"ChangeTrustResult\"),\n    allowTrustResult: xdr.lookup(\"AllowTrustResult\"),\n    accountMergeResult: xdr.lookup(\"AccountMergeResult\"),\n    inflationResult: xdr.lookup(\"InflationResult\"),\n    manageDataResult: xdr.lookup(\"ManageDataResult\"),\n    bumpSeqResult: xdr.lookup(\"BumpSequenceResult\"),\n    manageBuyOfferResult: xdr.lookup(\"ManageBuyOfferResult\"),\n    pathPaymentStrictSendResult: xdr.lookup(\"PathPaymentStrictSendResult\"),\n    createClaimableBalanceResult: xdr.lookup(\"CreateClaimableBalanceResult\"),\n    claimClaimableBalanceResult: xdr.lookup(\"ClaimClaimableBalanceResult\"),\n    beginSponsoringFutureReservesResult: xdr.lookup(\"BeginSponsoringFutureReservesResult\"),\n    endSponsoringFutureReservesResult: xdr.lookup(\"EndSponsoringFutureReservesResult\"),\n    revokeSponsorshipResult: xdr.lookup(\"RevokeSponsorshipResult\"),\n    clawbackResult: xdr.lookup(\"ClawbackResult\"),\n    clawbackClaimableBalanceResult: xdr.lookup(\"ClawbackClaimableBalanceResult\"),\n    setTrustLineFlagsResult: xdr.lookup(\"SetTrustLineFlagsResult\"),\n    liquidityPoolDepositResult: xdr.lookup(\"LiquidityPoolDepositResult\"),\n    liquidityPoolWithdrawResult: xdr.lookup(\"LiquidityPoolWithdrawResult\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union OperationResult switch (OperationResultCode code)\n//   {\n//   case opINNER:\n//       union switch (OperationType type)\n//       {\n//       case CREATE_ACCOUNT:\n//           CreateAccountResult createAccountResult;\n//       case PAYMENT:\n//           PaymentResult paymentResult;\n//       case PATH_PAYMENT_STRICT_RECEIVE:\n//           PathPaymentStrictReceiveResult pathPaymentStrictReceiveResult;\n//       case MANAGE_SELL_OFFER:\n//           ManageSellOfferResult manageSellOfferResult;\n//       case CREATE_PASSIVE_SELL_OFFER:\n//           ManageSellOfferResult createPassiveSellOfferResult;\n//       case SET_OPTIONS:\n//           SetOptionsResult setOptionsResult;\n//       case CHANGE_TRUST:\n//           ChangeTrustResult changeTrustResult;\n//       case ALLOW_TRUST:\n//           AllowTrustResult allowTrustResult;\n//       case ACCOUNT_MERGE:\n//           AccountMergeResult accountMergeResult;\n//       case INFLATION:\n//           InflationResult inflationResult;\n//       case MANAGE_DATA:\n//           ManageDataResult manageDataResult;\n//       case BUMP_SEQUENCE:\n//           BumpSequenceResult bumpSeqResult;\n//       case MANAGE_BUY_OFFER:\n//           ManageBuyOfferResult manageBuyOfferResult;\n//       case PATH_PAYMENT_STRICT_SEND:\n//           PathPaymentStrictSendResult pathPaymentStrictSendResult;\n//       case CREATE_CLAIMABLE_BALANCE:\n//           CreateClaimableBalanceResult createClaimableBalanceResult;\n//       case CLAIM_CLAIMABLE_BALANCE:\n//           ClaimClaimableBalanceResult claimClaimableBalanceResult;\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\n//           BeginSponsoringFutureReservesResult beginSponsoringFutureReservesResult;\n//       case END_SPONSORING_FUTURE_RESERVES:\n//           EndSponsoringFutureReservesResult endSponsoringFutureReservesResult;\n//       case REVOKE_SPONSORSHIP:\n//           RevokeSponsorshipResult revokeSponsorshipResult;\n//       case CLAWBACK:\n//           ClawbackResult clawbackResult;\n//       case CLAWBACK_CLAIMABLE_BALANCE:\n//           ClawbackClaimableBalanceResult clawbackClaimableBalanceResult;\n//       case SET_TRUST_LINE_FLAGS:\n//           SetTrustLineFlagsResult setTrustLineFlagsResult;\n//       case LIQUIDITY_POOL_DEPOSIT:\n//           LiquidityPoolDepositResult liquidityPoolDepositResult;\n//       case LIQUIDITY_POOL_WITHDRAW:\n//           LiquidityPoolWithdrawResult liquidityPoolWithdrawResult;\n//       }\n//       tr;\n//   case opBAD_AUTH:\n//   case opNO_ACCOUNT:\n//   case opNOT_SUPPORTED:\n//   case opTOO_MANY_SUBENTRIES:\n//   case opEXCEEDED_WORK_LIMIT:\n//   case opTOO_MANY_SPONSORING:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"OperationResult\", {\n  switchOn: xdr.lookup(\"OperationResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"opInner\", \"tr\"],\n    [\"opBadAuth\", xdr.void()],\n    [\"opNoAccount\", xdr.void()],\n    [\"opNotSupported\", xdr.void()],\n    [\"opTooManySubentries\", xdr.void()],\n    [\"opExceededWorkLimit\", xdr.void()],\n    [\"opTooManySponsoring\", xdr.void()],\n  ],\n  arms: {\n    tr: xdr.lookup(\"OperationResultTr\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum TransactionResultCode\n//   {\n//       txFEE_BUMP_INNER_SUCCESS = 1, // fee bump inner transaction succeeded\n//       txSUCCESS = 0,                // all operations succeeded\n//   \n//       txFAILED = -1, // one of the operations failed (none were applied)\n//   \n//       txTOO_EARLY = -2,         // ledger closeTime before minTime\n//       txTOO_LATE = -3,          // ledger closeTime after maxTime\n//       txMISSING_OPERATION = -4, // no operation was specified\n//       txBAD_SEQ = -5,           // sequence number does not match source account\n//   \n//       txBAD_AUTH = -6,             // too few valid signatures / wrong network\n//       txINSUFFICIENT_BALANCE = -7, // fee would bring account below reserve\n//       txNO_ACCOUNT = -8,           // source account not found\n//       txINSUFFICIENT_FEE = -9,     // fee is too small\n//       txBAD_AUTH_EXTRA = -10,      // unused signatures attached to transaction\n//       txINTERNAL_ERROR = -11,      // an unknown error occurred\n//   \n//       txNOT_SUPPORTED = -12,         // transaction type not supported\n//       txFEE_BUMP_INNER_FAILED = -13, // fee bump inner transaction failed\n//       txBAD_SPONSORSHIP = -14,       // sponsorship not confirmed\n//       txBAD_MIN_SEQ_AGE_OR_GAP =\n//           -15, // minSeqAge or minSeqLedgerGap conditions not met\n//       txMALFORMED = -16 // precondition is invalid\n//   };\n//\n// ===========================================================================\nxdr.enum(\"TransactionResultCode\", {\n  txFeeBumpInnerSuccess: 1,\n  txSuccess: 0,\n  txFailed: -1,\n  txTooEarly: -2,\n  txTooLate: -3,\n  txMissingOperation: -4,\n  txBadSeq: -5,\n  txBadAuth: -6,\n  txInsufficientBalance: -7,\n  txNoAccount: -8,\n  txInsufficientFee: -9,\n  txBadAuthExtra: -10,\n  txInternalError: -11,\n  txNotSupported: -12,\n  txFeeBumpInnerFailed: -13,\n  txBadSponsorship: -14,\n  txBadMinSeqAgeOrGap: -15,\n  txMalformed: -16,\n});\n\n// === xdr source ============================================================\n//\n//   union switch (TransactionResultCode code)\n//       {\n//       // txFEE_BUMP_INNER_SUCCESS is not included\n//       case txSUCCESS:\n//       case txFAILED:\n//           OperationResult results<>;\n//       case txTOO_EARLY:\n//       case txTOO_LATE:\n//       case txMISSING_OPERATION:\n//       case txBAD_SEQ:\n//       case txBAD_AUTH:\n//       case txINSUFFICIENT_BALANCE:\n//       case txNO_ACCOUNT:\n//       case txINSUFFICIENT_FEE:\n//       case txBAD_AUTH_EXTRA:\n//       case txINTERNAL_ERROR:\n//       case txNOT_SUPPORTED:\n//       // txFEE_BUMP_INNER_FAILED is not included\n//       case txBAD_SPONSORSHIP:\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\n//       case txMALFORMED:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"InnerTransactionResultResult\", {\n  switchOn: xdr.lookup(\"TransactionResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"txSuccess\", \"results\"],\n    [\"txFailed\", \"results\"],\n    [\"txTooEarly\", xdr.void()],\n    [\"txTooLate\", xdr.void()],\n    [\"txMissingOperation\", xdr.void()],\n    [\"txBadSeq\", xdr.void()],\n    [\"txBadAuth\", xdr.void()],\n    [\"txInsufficientBalance\", xdr.void()],\n    [\"txNoAccount\", xdr.void()],\n    [\"txInsufficientFee\", xdr.void()],\n    [\"txBadAuthExtra\", xdr.void()],\n    [\"txInternalError\", xdr.void()],\n    [\"txNotSupported\", xdr.void()],\n    [\"txBadSponsorship\", xdr.void()],\n    [\"txBadMinSeqAgeOrGap\", xdr.void()],\n    [\"txMalformed\", xdr.void()],\n  ],\n  arms: {\n    results: xdr.varArray(xdr.lookup(\"OperationResult\"), 2147483647),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"InnerTransactionResultExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct InnerTransactionResult\n//   {\n//       // Always 0. Here for binary compatibility.\n//       int64 feeCharged;\n//   \n//       union switch (TransactionResultCode code)\n//       {\n//       // txFEE_BUMP_INNER_SUCCESS is not included\n//       case txSUCCESS:\n//       case txFAILED:\n//           OperationResult results<>;\n//       case txTOO_EARLY:\n//       case txTOO_LATE:\n//       case txMISSING_OPERATION:\n//       case txBAD_SEQ:\n//       case txBAD_AUTH:\n//       case txINSUFFICIENT_BALANCE:\n//       case txNO_ACCOUNT:\n//       case txINSUFFICIENT_FEE:\n//       case txBAD_AUTH_EXTRA:\n//       case txINTERNAL_ERROR:\n//       case txNOT_SUPPORTED:\n//       // txFEE_BUMP_INNER_FAILED is not included\n//       case txBAD_SPONSORSHIP:\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\n//       case txMALFORMED:\n//           void;\n//       }\n//       result;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"InnerTransactionResult\", [\n  [\"feeCharged\", xdr.lookup(\"Int64\")],\n  [\"result\", xdr.lookup(\"InnerTransactionResultResult\")],\n  [\"ext\", xdr.lookup(\"InnerTransactionResultExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   struct InnerTransactionResultPair\n//   {\n//       Hash transactionHash;          // hash of the inner transaction\n//       InnerTransactionResult result; // result for the inner transaction\n//   };\n//\n// ===========================================================================\nxdr.struct(\"InnerTransactionResultPair\", [\n  [\"transactionHash\", xdr.lookup(\"Hash\")],\n  [\"result\", xdr.lookup(\"InnerTransactionResult\")],\n]);\n\n// === xdr source ============================================================\n//\n//   union switch (TransactionResultCode code)\n//       {\n//       case txFEE_BUMP_INNER_SUCCESS:\n//       case txFEE_BUMP_INNER_FAILED:\n//           InnerTransactionResultPair innerResultPair;\n//       case txSUCCESS:\n//       case txFAILED:\n//           OperationResult results<>;\n//       case txTOO_EARLY:\n//       case txTOO_LATE:\n//       case txMISSING_OPERATION:\n//       case txBAD_SEQ:\n//       case txBAD_AUTH:\n//       case txINSUFFICIENT_BALANCE:\n//       case txNO_ACCOUNT:\n//       case txINSUFFICIENT_FEE:\n//       case txBAD_AUTH_EXTRA:\n//       case txINTERNAL_ERROR:\n//       case txNOT_SUPPORTED:\n//       // case txFEE_BUMP_INNER_FAILED: handled above\n//       case txBAD_SPONSORSHIP:\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\n//       case txMALFORMED:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionResultResult\", {\n  switchOn: xdr.lookup(\"TransactionResultCode\"),\n  switchName: \"code\",\n  switches: [\n    [\"txFeeBumpInnerSuccess\", \"innerResultPair\"],\n    [\"txFeeBumpInnerFailed\", \"innerResultPair\"],\n    [\"txSuccess\", \"results\"],\n    [\"txFailed\", \"results\"],\n    [\"txTooEarly\", xdr.void()],\n    [\"txTooLate\", xdr.void()],\n    [\"txMissingOperation\", xdr.void()],\n    [\"txBadSeq\", xdr.void()],\n    [\"txBadAuth\", xdr.void()],\n    [\"txInsufficientBalance\", xdr.void()],\n    [\"txNoAccount\", xdr.void()],\n    [\"txInsufficientFee\", xdr.void()],\n    [\"txBadAuthExtra\", xdr.void()],\n    [\"txInternalError\", xdr.void()],\n    [\"txNotSupported\", xdr.void()],\n    [\"txBadSponsorship\", xdr.void()],\n    [\"txBadMinSeqAgeOrGap\", xdr.void()],\n    [\"txMalformed\", xdr.void()],\n  ],\n  arms: {\n    innerResultPair: xdr.lookup(\"InnerTransactionResultPair\"),\n    results: xdr.varArray(xdr.lookup(\"OperationResult\"), 2147483647),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//\n// ===========================================================================\nxdr.union(\"TransactionResultExt\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct TransactionResult\n//   {\n//       int64 feeCharged; // actual fee charged for the transaction\n//   \n//       union switch (TransactionResultCode code)\n//       {\n//       case txFEE_BUMP_INNER_SUCCESS:\n//       case txFEE_BUMP_INNER_FAILED:\n//           InnerTransactionResultPair innerResultPair;\n//       case txSUCCESS:\n//       case txFAILED:\n//           OperationResult results<>;\n//       case txTOO_EARLY:\n//       case txTOO_LATE:\n//       case txMISSING_OPERATION:\n//       case txBAD_SEQ:\n//       case txBAD_AUTH:\n//       case txINSUFFICIENT_BALANCE:\n//       case txNO_ACCOUNT:\n//       case txINSUFFICIENT_FEE:\n//       case txBAD_AUTH_EXTRA:\n//       case txINTERNAL_ERROR:\n//       case txNOT_SUPPORTED:\n//       // case txFEE_BUMP_INNER_FAILED: handled above\n//       case txBAD_SPONSORSHIP:\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\n//       case txMALFORMED:\n//           void;\n//       }\n//       result;\n//   \n//       // reserved for future use\n//       union switch (int v)\n//       {\n//       case 0:\n//           void;\n//       }\n//       ext;\n//   };\n//\n// ===========================================================================\nxdr.struct(\"TransactionResult\", [\n  [\"feeCharged\", xdr.lookup(\"Int64\")],\n  [\"result\", xdr.lookup(\"TransactionResultResult\")],\n  [\"ext\", xdr.lookup(\"TransactionResultExt\")],\n]);\n\n// === xdr source ============================================================\n//\n//   typedef opaque Hash[32];\n//\n// ===========================================================================\nxdr.typedef(\"Hash\", xdr.opaque(32));\n\n// === xdr source ============================================================\n//\n//   typedef opaque uint256[32];\n//\n// ===========================================================================\nxdr.typedef(\"Uint256\", xdr.opaque(32));\n\n// === xdr source ============================================================\n//\n//   typedef unsigned int uint32;\n//\n// ===========================================================================\nxdr.typedef(\"Uint32\", xdr.uint());\n\n// === xdr source ============================================================\n//\n//   typedef int int32;\n//\n// ===========================================================================\nxdr.typedef(\"Int32\", xdr.int());\n\n// === xdr source ============================================================\n//\n//   typedef unsigned hyper uint64;\n//\n// ===========================================================================\nxdr.typedef(\"Uint64\", xdr.uhyper());\n\n// === xdr source ============================================================\n//\n//   typedef hyper int64;\n//\n// ===========================================================================\nxdr.typedef(\"Int64\", xdr.hyper());\n\n// === xdr source ============================================================\n//\n//   union ExtensionPoint switch (int v)\n//   {\n//   case 0:\n//       void;\n//   };\n//\n// ===========================================================================\nxdr.union(\"ExtensionPoint\", {\n  switchOn: xdr.int(),\n  switchName: \"v\",\n  switches: [\n    [0, xdr.void()],\n  ],\n  arms: {\n  },\n});\n\n// === xdr source ============================================================\n//\n//   enum CryptoKeyType\n//   {\n//       KEY_TYPE_ED25519 = 0,\n//       KEY_TYPE_PRE_AUTH_TX = 1,\n//       KEY_TYPE_HASH_X = 2,\n//       KEY_TYPE_ED25519_SIGNED_PAYLOAD = 3,\n//       // MUXED enum values for supported type are derived from the enum values\n//       // above by ORing them with 0x100\n//       KEY_TYPE_MUXED_ED25519 = 0x100\n//   };\n//\n// ===========================================================================\nxdr.enum(\"CryptoKeyType\", {\n  keyTypeEd25519: 0,\n  keyTypePreAuthTx: 1,\n  keyTypeHashX: 2,\n  keyTypeEd25519SignedPayload: 3,\n  keyTypeMuxedEd25519: 256,\n});\n\n// === xdr source ============================================================\n//\n//   enum PublicKeyType\n//   {\n//       PUBLIC_KEY_TYPE_ED25519 = KEY_TYPE_ED25519\n//   };\n//\n// ===========================================================================\nxdr.enum(\"PublicKeyType\", {\n  publicKeyTypeEd25519: 0,\n});\n\n// === xdr source ============================================================\n//\n//   enum SignerKeyType\n//   {\n//       SIGNER_KEY_TYPE_ED25519 = KEY_TYPE_ED25519,\n//       SIGNER_KEY_TYPE_PRE_AUTH_TX = KEY_TYPE_PRE_AUTH_TX,\n//       SIGNER_KEY_TYPE_HASH_X = KEY_TYPE_HASH_X,\n//       SIGNER_KEY_TYPE_ED25519_SIGNED_PAYLOAD = KEY_TYPE_ED25519_SIGNED_PAYLOAD\n//   };\n//\n// ===========================================================================\nxdr.enum(\"SignerKeyType\", {\n  signerKeyTypeEd25519: 0,\n  signerKeyTypePreAuthTx: 1,\n  signerKeyTypeHashX: 2,\n  signerKeyTypeEd25519SignedPayload: 3,\n});\n\n// === xdr source ============================================================\n//\n//   union PublicKey switch (PublicKeyType type)\n//   {\n//   case PUBLIC_KEY_TYPE_ED25519:\n//       uint256 ed25519;\n//   };\n//\n// ===========================================================================\nxdr.union(\"PublicKey\", {\n  switchOn: xdr.lookup(\"PublicKeyType\"),\n  switchName: \"type\",\n  switches: [\n    [\"publicKeyTypeEd25519\", \"ed25519\"],\n  ],\n  arms: {\n    ed25519: xdr.lookup(\"Uint256\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   struct\n//       {\n//           /* Public key that must sign the payload. */\n//           uint256 ed25519;\n//           /* Payload to be raw signed by ed25519. */\n//           opaque payload<64>;\n//       }\n//\n// ===========================================================================\nxdr.struct(\"SignerKeyEd25519SignedPayload\", [\n  [\"ed25519\", xdr.lookup(\"Uint256\")],\n  [\"payload\", xdr.varOpaque(64)],\n]);\n\n// === xdr source ============================================================\n//\n//   union SignerKey switch (SignerKeyType type)\n//   {\n//   case SIGNER_KEY_TYPE_ED25519:\n//       uint256 ed25519;\n//   case SIGNER_KEY_TYPE_PRE_AUTH_TX:\n//       /* SHA-256 Hash of TransactionSignaturePayload structure */\n//       uint256 preAuthTx;\n//   case SIGNER_KEY_TYPE_HASH_X:\n//       /* Hash of random 256 bit preimage X */\n//       uint256 hashX;\n//   case SIGNER_KEY_TYPE_ED25519_SIGNED_PAYLOAD:\n//       struct\n//       {\n//           /* Public key that must sign the payload. */\n//           uint256 ed25519;\n//           /* Payload to be raw signed by ed25519. */\n//           opaque payload<64>;\n//       } ed25519SignedPayload;\n//   };\n//\n// ===========================================================================\nxdr.union(\"SignerKey\", {\n  switchOn: xdr.lookup(\"SignerKeyType\"),\n  switchName: \"type\",\n  switches: [\n    [\"signerKeyTypeEd25519\", \"ed25519\"],\n    [\"signerKeyTypePreAuthTx\", \"preAuthTx\"],\n    [\"signerKeyTypeHashX\", \"hashX\"],\n    [\"signerKeyTypeEd25519SignedPayload\", \"ed25519SignedPayload\"],\n  ],\n  arms: {\n    ed25519: xdr.lookup(\"Uint256\"),\n    preAuthTx: xdr.lookup(\"Uint256\"),\n    hashX: xdr.lookup(\"Uint256\"),\n    ed25519SignedPayload: xdr.lookup(\"SignerKeyEd25519SignedPayload\"),\n  },\n});\n\n// === xdr source ============================================================\n//\n//   typedef opaque Signature<64>;\n//\n// ===========================================================================\nxdr.typedef(\"Signature\", xdr.varOpaque(64));\n\n// === xdr source ============================================================\n//\n//   typedef opaque SignatureHint[4];\n//\n// ===========================================================================\nxdr.typedef(\"SignatureHint\", xdr.opaque(4));\n\n// === xdr source ============================================================\n//\n//   typedef PublicKey NodeID;\n//\n// ===========================================================================\nxdr.typedef(\"NodeId\", xdr.lookup(\"PublicKey\"));\n\n// === xdr source ============================================================\n//\n//   struct Curve25519Secret\n//   {\n//       opaque key[32];\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Curve25519Secret\", [\n  [\"key\", xdr.opaque(32)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct Curve25519Public\n//   {\n//       opaque key[32];\n//   };\n//\n// ===========================================================================\nxdr.struct(\"Curve25519Public\", [\n  [\"key\", xdr.opaque(32)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct HmacSha256Key\n//   {\n//       opaque key[32];\n//   };\n//\n// ===========================================================================\nxdr.struct(\"HmacSha256Key\", [\n  [\"key\", xdr.opaque(32)],\n]);\n\n// === xdr source ============================================================\n//\n//   struct HmacSha256Mac\n//   {\n//       opaque mac[32];\n//   };\n//\n// ===========================================================================\nxdr.struct(\"HmacSha256Mac\", [\n  [\"mac\", xdr.opaque(32)],\n]);\n\n});\nexport default types;\n","import xdr from './xdr';\nimport { Asset } from './asset';\nimport { hash } from './hashing';\nimport BrowserBuffer from './util/BrowserBuffer';\n\n// LiquidityPoolFeeV18 is the default liquidity pool fee in protocol v18. It defaults to 30 base points (0.3%).\nexport const LiquidityPoolFeeV18 = 30;\n\n/**\n * getLiquidityPoolId computes the Pool ID for the given assets, fee and pool type.\n *\n * @see [stellar-core getPoolID](https://github.com/stellar/stellar-core/blob/9f3a48c6a8f1aa77b6043a055d0638661f718080/src/ledger/test/LedgerTxnTests.cpp#L3746-L3751)\n *\n * @export\n * @param {string} liquidityPoolType – A string representing the liquidity pool type.\n * @param {object} liquidityPoolParameters        – The liquidity pool parameters.\n * @param {Asset}  liquidityPoolParameters.assetA – The first asset in the Pool, it must respect the rule assetA < assetB.\n * @param {Asset}  liquidityPoolParameters.assetB – The second asset in the Pool, it must respect the rule assetA < assetB.\n * @param {number} liquidityPoolParameters.fee    – The liquidity pool fee. For now the only fee supported is `30`.\n *\n * @return {Uint8Array} the raw Pool ID buffer, which can be stringfied with `toString('hex')`\n */\nexport function getLiquidityPoolId(\n  liquidityPoolType,\n  liquidityPoolParameters = {}\n) {\n  if (liquidityPoolType !== 'constant_product') {\n    throw new Error('liquidityPoolType is invalid');\n  }\n\n  const { assetA, assetB, fee } = liquidityPoolParameters;\n  if (!assetA || !(assetA instanceof Asset)) {\n    throw new Error('assetA is invalid');\n  }\n  if (!assetB || !(assetB instanceof Asset)) {\n    throw new Error('assetB is invalid');\n  }\n  if (!fee || fee !== LiquidityPoolFeeV18) {\n    throw new Error('fee is invalid');\n  }\n\n  if (Asset.compare(assetA, assetB) !== -1) {\n    throw new Error('Assets are not in lexicographic order');\n  }\n\n  const lpTypeData =\n    xdr.LiquidityPoolType.liquidityPoolConstantProduct().toXDR();\n  const lpParamsData = new xdr.LiquidityPoolConstantProductParameters({\n    assetA: assetA.toXDRObject(),\n    assetB: assetB.toXDRObject(),\n    fee\n  }).toXDR();\n  const payload = BrowserBuffer.concat([lpTypeData, lpParamsData]);\n  return hash(payload);\n}\n","import { sha256 } from 'sha.js';\n\nexport function hash(data) {\n  const hasher = new sha256();\n  hasher.update(data, 'utf8');\n  return hasher.digest();\n}\n","/* eslint-disable import/no-import-module-exports */\nimport BigNumber from 'bignumber.js';\nimport xdr from './xdr';\n\nBigNumber.DEBUG = true; // gives us exceptions on bad constructor values\n\nexport { xdr };\nexport { hash } from './hashing';\nexport { sign, verify, FastSigning } from './signing';\nexport {\n  getLiquidityPoolId,\n  LiquidityPoolFeeV18\n} from './get_liquidity_pool_id';\nexport { Keypair } from './keypair';\nexport { UnsignedHyper, Hyper } from 'js-xdr';\nexport { TransactionBase } from './transaction_base';\nexport { Transaction } from './transaction';\nexport { FeeBumpTransaction } from './fee_bump_transaction';\nexport {\n  TransactionBuilder,\n  TimeoutInfinite,\n  BASE_FEE\n} from './transaction_builder';\nexport { Asset } from './asset';\nexport { LiquidityPoolAsset } from './liquidity_pool_asset';\nexport { LiquidityPoolId } from './liquidity_pool_id';\nexport {\n  Operation,\n  AuthRequiredFlag,\n  AuthRevocableFlag,\n  AuthImmutableFlag,\n  AuthClawbackEnabledFlag\n} from './operation';\nexport * from './memo';\nexport { Account } from './account';\nexport { MuxedAccount } from './muxed_account';\nexport { Claimant } from './claimant';\nexport { Networks } from './network';\nexport { StrKey } from './strkey';\nexport { SignerKey } from './signerkey';\nexport {\n  decodeAddressToMuxedAccount,\n  encodeMuxedAccountToAddress,\n  extractBaseAddress,\n  encodeMuxedAccount\n} from './util/decode_encode_muxed_account';\n\nexport default module.exports;\n","/* eslint no-bitwise: [\"error\", {\"allow\": [\"^\"]}] */\n\nimport nacl from 'tweetnacl';\nimport isUndefined from 'lodash/isUndefined';\nimport isString from 'lodash/isString';\n\nimport BrowserBuffer from  './util/BrowserBuffer'\n\nimport { sign, verify, generate } from './signing';\nimport { StrKey } from './strkey';\nimport { hash } from './hashing';\n\nimport xdr from './xdr';\n\n\n/**\n * `Keypair` represents public (and secret) keys of the account.\n *\n * Currently `Keypair` only supports ed25519 but in a future this class can be abstraction layer for other\n * public-key signature systems.\n *\n * Use more convenient methods to create `Keypair` object:\n * * `{@link Keypair.fromPublicKey}`\n * * `{@link Keypair.fromSecret}`\n * * `{@link Keypair.random}`\n *\n * @constructor\n * @param {object} keys At least one of keys must be provided.\n * @param {string} keys.type Public-key signature system name. (currently only `ed25519` keys are supported)\n * @param {Uint8Array} [keys.publicKey] Raw public key\n * @param {Uint8Array} [keys.secretKey] Raw secret key (32-byte secret seed in ed25519`)\n */\nexport class Keypair {\n  constructor(keys) {\n    if (keys.type !== 'ed25519') {\n      throw new Error('Invalid keys type');\n    }\n\n    this.type = keys.type;\n\n    if (keys.secretKey) {\n      // Probably should make a copy here...\n      keys.secretKey = BrowserBuffer.from(keys.secretKey);\n\n      if (keys.secretKey.length !== 32) {\n        throw new Error('secretKey length is invalid');\n      }\n\n      this._secretSeed = keys.secretKey;\n      this._publicKey = generate(keys.secretKey);\n      this._secretKey = BrowserBuffer.concat([keys.secretKey, this._publicKey]);\n\n      if (\n        keys.publicKey &&\n        !this._publicKey.equals(BrowserBuffer.from(keys.publicKey))\n      ) {\n        throw new Error('secretKey does not match publicKey');\n      }\n    } else {\n      this._publicKey = BrowserBuffer.from(keys.publicKey);\n\n      if (this._publicKey.length !== 32) {\n        throw new Error('publicKey length is invalid');\n      }\n    }\n  }\n\n  /**\n   * Creates a new `Keypair` instance from secret. This can either be secret key or secret seed depending\n   * on underlying public-key signature system. Currently `Keypair` only supports ed25519.\n   * @param {string} secret secret key (ex. `SDAKFNYEIAORZKKCYRILFQKLLOCNPL5SWJ3YY5NM3ZH6GJSZGXHZEPQS`)\n   * @returns {Keypair}\n   */\n  static fromSecret(secret) {\n    const rawSecret = StrKey.decodeEd25519SecretSeed(secret);\n    return this.fromRawEd25519Seed(rawSecret);\n  }\n\n  /**\n   * Creates a new `Keypair` object from ed25519 secret key seed raw bytes.\n   *\n   * @param {Uint8Array} rawSeed Raw 32-byte ed25519 secret key seed\n   * @returns {Keypair}\n   */\n  static fromRawEd25519Seed(rawSeed) {\n    return new this({ type: 'ed25519', secretKey: rawSeed });\n  }\n\n  /**\n   * Returns `Keypair` object representing network master key.\n   * @param {string} networkPassphrase passphrase of the target stellar network (e.g. \"Public Global Stellar Network ; September 2015\").\n   * @returns {Keypair}\n   */\n  static master(networkPassphrase) {\n    if (!networkPassphrase) {\n      throw new Error(\n        'No network selected. Please pass a network argument, e.g. `Keypair.master(Networks.PUBLIC)`.'\n      );\n    }\n\n    return this.fromRawEd25519Seed(hash(networkPassphrase));\n  }\n\n  /**\n   * Creates a new `Keypair` object from public key.\n   * @param {string} publicKey public key (ex. `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`)\n   * @returns {Keypair}\n   */\n  static fromPublicKey(publicKey) {\n    publicKey = StrKey.decodeEd25519PublicKey(publicKey);\n    if (publicKey.length !== 32) {\n      throw new Error('Invalid Stellar public key');\n    }\n    return new this({ type: 'ed25519', publicKey });\n  }\n\n  /**\n   * Create a random `Keypair` object.\n   * @returns {Keypair}\n   */\n  static random() {\n    const secret = nacl.randomBytes(32);\n    return this.fromRawEd25519Seed(secret);\n  }\n\n  xdrAccountId() {\n    return new xdr.AccountId.publicKeyTypeEd25519(this._publicKey);\n  }\n\n  xdrPublicKey() {\n    return new xdr.PublicKey.publicKeyTypeEd25519(this._publicKey);\n  }\n\n  /**\n   * Creates a {@link xdr.MuxedAccount} object from the public key.\n   *\n   * You will get a different type of muxed account depending on whether or not\n   * you pass an ID.\n   *\n   * @param  {string} [id] - stringified integer indicating the underlying muxed\n   *     ID of the new account object\n   *\n   * @return {xdr.MuxedAccount}\n   */\n  xdrMuxedAccount(id) {\n    if (!isUndefined(id)) {\n      if (!isString(id)) {\n        throw new TypeError(`expected string for ID, got ${typeof id}`);\n      }\n\n      return xdr.MuxedAccount.keyTypeMuxedEd25519(\n        new xdr.MuxedAccountMed25519({\n          id: xdr.Uint64.fromString(id),\n          ed25519: this._publicKey\n        })\n      );\n    }\n\n    return new xdr.MuxedAccount.keyTypeEd25519(this._publicKey);\n  }\n\n  /**\n   * Returns raw public key\n   * @returns {Uint8Array}\n   */\n  rawPublicKey() {\n    return this._publicKey;\n  }\n\n  signatureHint() {\n    const a = this.xdrAccountId().toXDR();\n\n    return a.slice(a.length - 4);\n  }\n\n  /**\n   * Returns public key associated with this `Keypair` object.\n   * @returns {string}\n   */\n  publicKey() {\n    return StrKey.encodeEd25519PublicKey(this._publicKey);\n  }\n\n  /**\n   * Returns secret key associated with this `Keypair` object\n   * @returns {string}\n   */\n  secret() {\n    if (!this._secretSeed) {\n      throw new Error('no secret key available');\n    }\n\n    if (this.type === 'ed25519') {\n      return StrKey.encodeEd25519SecretSeed(this._secretSeed);\n    }\n\n    throw new Error('Invalid Keypair type');\n  }\n\n  /**\n   * Returns raw secret key.\n   * @returns {Uint8Array}\n   */\n  rawSecretKey() {\n    return this._secretSeed;\n  }\n\n  /**\n   * Returns `true` if this `Keypair` object contains secret key and can sign.\n   * @returns {boolean}\n   */\n  canSign() {\n    return !!this._secretKey;\n  }\n\n  /**\n   * Signs data.\n   * @param {Uint8Array} data Data to sign\n   * @returns {Uint8Array}\n   */\n  sign(data) {\n    if (!this.canSign()) {\n      throw new Error('cannot sign: no secret key available');\n    }\n\n    return sign(data, this._secretKey);\n  }\n\n  /**\n   * Verifies if `signature` for `data` is valid.\n   * @param {Uint8Array} data Signed data\n   * @param {Uint8Array} signature Signature\n   * @returns {boolean}\n   */\n  verify(data, signature) {\n    return verify(data, signature, this._publicKey);\n  }\n\n  /**\n   * Returns the decorated signature (hint+sig) for arbitrary data.\n   *\n   * @param  {Uint8Array} data  arbitrary data to sign\n   * @return {xdr.DecoratedSignature}   the raw signature structure which can be\n   *     added directly to a transaction envelope\n   *\n   * @see TransactionBase.addDecoratedSignature\n   */\n  signDecorated(data) {\n    const signature = this.sign(data);\n    const hint = this.signatureHint();\n\n    return new xdr.DecoratedSignature({ hint, signature });\n  }\n\n  /**\n   * Returns the raw decorated signature (hint+sig) for a signed payload signer.\n   *\n   *  The hint is defined as the last 4 bytes of the signer key XORed with last\n   *  4 bytes of the payload (zero-left-padded if necessary).\n   *\n   * @param  {Uint8Array} data    data to both sign and treat as the payload\n   * @return {xdr.DecoratedSignature}\n   *\n   * @see https://github.com/stellar/stellar-protocol/blob/master/core/cap-0040.md#signature-hint\n   * @see TransactionBase.addDecoratedSignature\n   */\n  signPayloadDecorated(data) {\n    const signature = this.sign(data);\n    const keyHint = this.signatureHint();\n\n    let hint = BrowserBuffer.from(data.slice(-4));\n    if (hint.length < 4) {\n      // append zeroes as needed\n      hint = BrowserBuffer.concat([hint, BrowserBuffer.alloc(4 - data.length, 0)]);\n    }\n\n    return new xdr.DecoratedSignature({\n      hint: hint.map((byte, i) => byte ^ keyHint[i]),\n      signature\n    });\n  }\n}\n","import clone from 'lodash/clone';\nimport xdr from './xdr';\nimport { Asset } from './asset';\nimport {\n  LiquidityPoolFeeV18,\n  getLiquidityPoolId\n} from './get_liquidity_pool_id';\n\n/**\n * LiquidityPoolAsset class represents a liquidity pool trustline change.\n *\n * @constructor\n * @param {Asset} assetA – The first asset in the Pool, it must respect the rule assetA < assetB. See {@link Asset.compare} for more details on how assets are sorted.\n * @param {Asset} assetB – The second asset in the Pool, it must respect the rule assetA < assetB. See {@link Asset.compare} for more details on how assets are sorted.\n * @param {number} fee – The liquidity pool fee. For now the only fee supported is `30`.\n */\nexport class LiquidityPoolAsset {\n  constructor(assetA, assetB, fee) {\n    if (!assetA || !(assetA instanceof Asset)) {\n      throw new Error('assetA is invalid');\n    }\n    if (!assetB || !(assetB instanceof Asset)) {\n      throw new Error('assetB is invalid');\n    }\n    if (Asset.compare(assetA, assetB) !== -1) {\n      throw new Error('Assets are not in lexicographic order');\n    }\n    if (!fee || fee !== LiquidityPoolFeeV18) {\n      throw new Error('fee is invalid');\n    }\n\n    this.assetA = assetA;\n    this.assetB = assetB;\n    this.fee = fee;\n  }\n\n  /**\n   * Returns a liquidity pool asset object from its XDR ChangeTrustAsset object\n   * representation.\n   * @param {xdr.ChangeTrustAsset} ctAssetXdr - The asset XDR object.\n   * @returns {LiquidityPoolAsset}\n   */\n  static fromOperation(ctAssetXdr) {\n    const assetType = ctAssetXdr.switch();\n    if (assetType === xdr.AssetType.assetTypePoolShare()) {\n      const liquidityPoolParameters = ctAssetXdr\n        .liquidityPool()\n        .constantProduct();\n      return new this(\n        Asset.fromOperation(liquidityPoolParameters.assetA()),\n        Asset.fromOperation(liquidityPoolParameters.assetB()),\n        liquidityPoolParameters.fee()\n      );\n    }\n\n    throw new Error(`Invalid asset type: ${assetType.name}`);\n  }\n\n  /**\n   * Returns the `xdr.ChangeTrustAsset` object for this liquidity pool asset.\n   *\n   * Note: To convert from an {@link Asset `Asset`} to `xdr.ChangeTrustAsset`\n   * please refer to the\n   * {@link Asset.toChangeTrustXDRObject `Asset.toChangeTrustXDRObject`} method.\n   *\n   * @returns {xdr.ChangeTrustAsset} XDR ChangeTrustAsset object.\n   */\n  toXDRObject() {\n    const lpConstantProductParamsXdr =\n      new xdr.LiquidityPoolConstantProductParameters({\n        assetA: this.assetA.toXDRObject(),\n        assetB: this.assetB.toXDRObject(),\n        fee: this.fee\n      });\n    const lpParamsXdr = new xdr.LiquidityPoolParameters(\n      'liquidityPoolConstantProduct',\n      lpConstantProductParamsXdr\n    );\n    return new xdr.ChangeTrustAsset('assetTypePoolShare', lpParamsXdr);\n  }\n\n  /**\n   * @returns {LiquidityPoolParameters} Liquidity pool parameters.\n   */\n  getLiquidityPoolParameters() {\n    return clone({\n      assetA: this.assetA,\n      assetB: this.assetB,\n      fee: this.fee\n    });\n  }\n\n  /**\n   * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)\n   * @returns {AssetType.liquidityPoolShares} asset type. Can only be `liquidity_pool_shares`.\n   */\n  getAssetType() {\n    return 'liquidity_pool_shares';\n  }\n\n  /**\n   * @param {LiquidityPoolAsset} other the LiquidityPoolAsset to compare\n   * @returns {boolean} `true` if this asset equals the given asset.\n   */\n  equals(other) {\n    return (\n      this.assetA.equals(other.assetA) &&\n      this.assetB.equals(other.assetB) &&\n      this.fee === other.fee\n    );\n  }\n\n  toString() {\n    const poolId = getLiquidityPoolId(\n      'constant_product',\n      this.getLiquidityPoolParameters()\n    ).toString('hex');\n    return `liquidity_pool:${poolId}`;\n  }\n}\n","import clone from 'lodash/clone';\nimport xdr from './xdr';\n\n/**\n * LiquidityPoolId class represents the asset referenced by a trustline to a\n * liquidity pool.\n *\n * @constructor\n * @param {string} liquidityPoolId - The ID of the liquidity pool in string 'hex'.\n */\nexport class LiquidityPoolId {\n  constructor(liquidityPoolId) {\n    if (!liquidityPoolId) {\n      throw new Error('liquidityPoolId cannot be empty');\n    }\n    if (!/^[a-f0-9]{64}$/.test(liquidityPoolId)) {\n      throw new Error('Liquidity pool ID is not a valid hash');\n    }\n\n    this.liquidityPoolId = liquidityPoolId;\n  }\n\n  /**\n   * Returns a liquidity pool ID object from its xdr.TrustLineAsset representation.\n   * @param {xdr.TrustLineAsset} tlAssetXdr - The asset XDR object.\n   * @returns {LiquidityPoolId}\n   */\n  static fromOperation(tlAssetXdr) {\n    const assetType = tlAssetXdr.switch();\n    if (assetType === xdr.AssetType.assetTypePoolShare()) {\n      const liquidityPoolId = tlAssetXdr.liquidityPoolId().toString('hex');\n      return new this(liquidityPoolId);\n    }\n\n    throw new Error(`Invalid asset type: ${assetType.name}`);\n  }\n\n  /**\n   * Returns the `xdr.TrustLineAsset` object for this liquidity pool ID.\n   *\n   * Note: To convert from {@link Asset `Asset`} to `xdr.TrustLineAsset` please\n   * refer to the\n   * {@link Asset.toTrustLineXDRObject `Asset.toTrustLineXDRObject`} method.\n   *\n   * @returns {xdr.TrustLineAsset} XDR LiquidityPoolId object\n   */\n  toXDRObject() {\n    const xdrPoolId = xdr.PoolId.fromXDR(this.liquidityPoolId, 'hex');\n    return new xdr.TrustLineAsset('assetTypePoolShare', xdrPoolId);\n  }\n\n  /**\n   * @returns {string} Liquidity pool ID.\n   */\n  getLiquidityPoolId() {\n    return clone(this.liquidityPoolId);\n  }\n\n  /**\n   * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)\n   * @returns {AssetType.liquidityPoolShares} asset type. Can only be `liquidity_pool_shares`.\n   */\n  getAssetType() {\n    return 'liquidity_pool_shares';\n  }\n\n  /**\n   * @param {LiquidityPoolId} asset LiquidityPoolId to compare.\n   * @returns {boolean} `true` if this asset equals the given asset.\n   */\n  equals(asset) {\n    return this.liquidityPoolId === asset.getLiquidityPoolId();\n  }\n\n  toString() {\n    return `liquidity_pool:${this.liquidityPoolId}`;\n  }\n}\n","import isUndefined from 'lodash/isUndefined';\nimport isString from 'lodash/isString';\nimport clone from 'lodash/clone';\nimport { UnsignedHyper } from 'js-xdr';\nimport BigNumber from 'bignumber.js';\nimport xdr from './xdr';\nimport BrowserBuffer from './util/BrowserBuffer';\n\n/**\n * Type of {@link Memo}.\n */\nexport const MemoNone = 'none';\n/**\n * Type of {@link Memo}.\n */\nexport const MemoID = 'id';\n/**\n * Type of {@link Memo}.\n */\nexport const MemoText = 'text';\n/**\n * Type of {@link Memo}.\n */\nexport const MemoHash = 'hash';\n/**\n * Type of {@link Memo}.\n */\nexport const MemoReturn = 'return';\n\n/**\n * `Memo` represents memos attached to transactions.\n *\n * @param {string} type - `MemoNone`, `MemoID`, `MemoText`, `MemoHash` or `MemoReturn`\n * @param {*} value - `string` for `MemoID`, `MemoText`, buffer of hex string for `MemoHash` or `MemoReturn`\n * @see [Transactions concept](https://developers.stellar.org/docs/glossary/transactions/)\n * @class Memo\n */\nexport class Memo {\n  constructor(type, value = null) {\n    this._type = type;\n    this._value = value;\n\n    switch (this._type) {\n      case MemoNone:\n        break;\n      case MemoID:\n        Memo._validateIdValue(value);\n        break;\n      case MemoText:\n        Memo._validateTextValue(value);\n        break;\n      case MemoHash:\n      case MemoReturn:\n        Memo._validateHashValue(value);\n        // We want MemoHash and MemoReturn to have BrowserBuffer as a value\n        if (isString(value)) {\n          this._value = BrowserBuffer.from(value, 'hex');\n        }\n        break;\n      default:\n        throw new Error('Invalid memo type');\n    }\n  }\n\n  /**\n   * Contains memo type: `MemoNone`, `MemoID`, `MemoText`, `MemoHash` or `MemoReturn`\n   */\n  get type() {\n    return clone(this._type);\n  }\n\n  set type(type) {\n    throw new Error('Memo is immutable');\n  }\n\n  /**\n   * Contains memo value:\n   * * `null` for `MemoNone`,\n   * * `string` for `MemoID`,\n   * * `Buffer` for `MemoText` after decoding using `fromXDRObject`, original value otherwise,\n   * * `Buffer` for `MemoHash`, `MemoReturn`.\n   */\n  get value() {\n    switch (this._type) {\n      case MemoNone:\n        return null;\n      case MemoID:\n      case MemoText:\n        return clone(this._value);\n      case MemoHash:\n      case MemoReturn:\n        return BrowserBuffer.from(this._value);\n      default:\n        throw new Error('Invalid memo type');\n    }\n  }\n\n  set value(value) {\n    throw new Error('Memo is immutable');\n  }\n\n  static _validateIdValue(value) {\n    const error = new Error(`Expects a int64 as a string. Got ${value}`);\n\n    if (!isString(value)) {\n      throw error;\n    }\n\n    let number;\n    try {\n      number = new BigNumber(value);\n    } catch (e) {\n      throw error;\n    }\n\n    // Infinity\n    if (!number.isFinite()) {\n      throw error;\n    }\n\n    // NaN\n    if (number.isNaN()) {\n      throw error;\n    }\n  }\n\n  static _validateTextValue(value) {\n    if (!xdr.Memo.armTypeForArm('text').isValid(value)) {\n      throw new Error('Expects string, array or buffer, max 28 bytes');\n    }\n  }\n\n  static _validateHashValue(value) {\n    const error = new Error(\n      `Expects a 32 byte hash value or hex encoded string. Got ${value}`\n    );\n\n    if (value === null || isUndefined(value)) {\n      throw error;\n    }\n\n    let valueBuffer;\n    if (isString(value)) {\n      if (!/^[0-9A-Fa-f]{64}$/g.test(value)) {\n        throw error;\n      }\n      valueBuffer = BrowserBuffer.from(value, 'hex');\n    } else if (BrowserBuffer.isBuffer(value)) {\n      valueBuffer = BrowserBuffer.from(value);\n    } else {\n      throw error;\n    }\n\n    if (!valueBuffer.length || valueBuffer.length !== 32) {\n      throw error;\n    }\n  }\n\n  /**\n   * Returns an empty memo (`MemoNone`).\n   * @returns {Memo}\n   */\n  static none() {\n    return new Memo(MemoNone);\n  }\n\n  /**\n   * Creates and returns a `MemoText` memo.\n   * @param {string} text - memo text\n   * @returns {Memo}\n   */\n  static text(text) {\n    return new Memo(MemoText, text);\n  }\n\n  /**\n   * Creates and returns a `MemoID` memo.\n   * @param {string} id - 64-bit number represented as a string\n   * @returns {Memo}\n   */\n  static id(id) {\n    return new Memo(MemoID, id);\n  }\n\n  /**\n   * Creates and returns a `MemoHash` memo.\n   * @param {array|string} hash - 32 byte hash or hex encoded string\n   * @returns {Memo}\n   */\n  static hash(hash) {\n    return new Memo(MemoHash, hash);\n  }\n\n  /**\n   * Creates and returns a `MemoReturn` memo.\n   * @param {array|string} hash - 32 byte hash or hex encoded string\n   * @returns {Memo}\n   */\n  static return(hash) {\n    return new Memo(MemoReturn, hash);\n  }\n\n  /**\n   * Returns XDR memo object.\n   * @returns {xdr.Memo}\n   */\n  toXDRObject() {\n    switch (this._type) {\n      case MemoNone:\n        return xdr.Memo.memoNone();\n      case MemoID:\n        return xdr.Memo.memoId(UnsignedHyper.fromString(this._value));\n      case MemoText:\n        return xdr.Memo.memoText(this._value);\n      case MemoHash:\n        return xdr.Memo.memoHash(this._value);\n      case MemoReturn:\n        return xdr.Memo.memoReturn(this._value);\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Returns {@link Memo} from XDR memo object.\n   * @param {xdr.Memo} object XDR memo object\n   * @returns {Memo}\n   */\n  static fromXDRObject(object) {\n    switch (object.arm()) {\n      case 'id':\n        return Memo.id(object.value().toString());\n      case 'text':\n        return Memo.text(object.value());\n      case 'hash':\n        return Memo.hash(object.value());\n      case 'retHash':\n        return Memo.return(object.value());\n      default:\n        break;\n    }\n\n    if (typeof object.value() === 'undefined') {\n      return Memo.none();\n    }\n\n    throw new Error('Unknown type');\n  }\n}\n","import isString from 'lodash/isString';\n\nimport xdr from './xdr';\nimport { Account } from './account';\nimport { StrKey } from './strkey';\nimport {\n  decodeAddressToMuxedAccount,\n  encodeMuxedAccountToAddress,\n  encodeMuxedAccount,\n  extractBaseAddress\n} from './util/decode_encode_muxed_account';\n\n/**\n * Represents a muxed account for transactions and operations.\n *\n * A muxed (or *multiplexed*) account (defined rigorously in\n * [CAP-27](https://stellar.org/protocol/cap-27) and briefly in\n * [SEP-23](https://stellar.org/protocol/sep-23)) is one that resolves a single\n * Stellar `G...`` account to many different underlying IDs.\n *\n * For example, you may have a single Stellar address for accounting purposes:\n *   GA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJVSGZ\n *\n * Yet would like to use it for 4 different family members:\n *   1: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAAGZFQ\n *   2: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAALIWQ\n *   3: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAAPYHQ\n *   4: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAAQLQQ\n *\n * This object makes it easy to create muxed accounts from regular accounts,\n * duplicate them, get/set the underlying IDs, etc. without mucking around with\n * the raw XDR.\n *\n * Because muxed accounts are purely an off-chain convention, they all share the\n * sequence number tied to their underlying G... account. Thus, this object\n * *requires* an {@link Account} instance to be passed in, so that muxed\n * instances of an account can collectively modify the sequence number whenever\n * a muxed account is used as the source of a @{link Transaction} with {@link\n * TransactionBuilder}.\n *\n * @constructor\n *\n * @param {Account}   account - the @{link Account} instance representing the\n *                              underlying G... address\n * @param {string}    id      - a stringified uint64 value that represents the\n *                              ID of the muxed account\n *\n * @link https://developers.stellar.org/docs/glossary/muxed-accounts/\n */\nexport class MuxedAccount {\n  constructor(baseAccount, id) {\n    const accountId = baseAccount.accountId();\n    if (!StrKey.isValidEd25519PublicKey(accountId)) {\n      throw new Error('accountId is invalid');\n    }\n\n    this.account = baseAccount;\n    this._muxedXdr = encodeMuxedAccount(accountId, id);\n    this._mAddress = encodeMuxedAccountToAddress(this._muxedXdr);\n    this._id = id;\n  }\n\n  /**\n   * Parses an M-address into a MuxedAccount object.\n   *\n   * @param  {string} mAddress    - an M-address to transform\n   * @param  {string} sequenceNum - the sequence number of the underlying {@link\n   *     Account}, to use for the underlying base account (@link\n   *     MuxedAccount.baseAccount). If you're using the SDK, you can use\n   *     `server.loadAccount` to fetch this if you don't know it.\n   *\n   * @return {MuxedAccount}\n   */\n  static fromAddress(mAddress, sequenceNum) {\n    const muxedAccount = decodeAddressToMuxedAccount(mAddress);\n    const gAddress = extractBaseAddress(mAddress);\n    const id = muxedAccount.med25519().id().toString();\n\n    return new MuxedAccount(new Account(gAddress, sequenceNum), id);\n  }\n\n  /**\n   * @return {Account} the underlying account object shared among all muxed\n   *     accounts with this Stellar address\n   */\n  baseAccount() {\n    return this.account;\n  }\n\n  /**\n   * @return {string} the M-address representing this account's (G-address, ID)\n   */\n  accountId() {\n    return this._mAddress;\n  }\n\n  id() {\n    return this._id;\n  }\n\n  setId(id) {\n    if (!isString(id)) {\n      throw new Error('id should be a string representing a number (uint64)');\n    }\n\n    this._muxedXdr.med25519().id(xdr.Uint64.fromString(id));\n    this._mAddress = encodeMuxedAccountToAddress(this._muxedXdr);\n    this._id = id;\n    return this;\n  }\n\n  /**\n   * Accesses the underlying account's sequence number.\n   * @return {string}  strigified sequence number for the underlying account\n   */\n  sequenceNumber() {\n    return this.account.sequenceNumber();\n  }\n\n  /**\n   * Increments the underlying account's sequence number by one.\n   * @return {void}\n   */\n  incrementSequenceNumber() {\n    return this.account.incrementSequenceNumber();\n  }\n\n  /**\n   * @return {xdr.MuxedAccount} the XDR object representing this muxed account's\n   *     G-address and uint64 ID\n   */\n  toXDRObject() {\n    return this._muxedXdr;\n  }\n\n  equals(otherMuxedAccount) {\n    return this.accountId() === otherMuxedAccount.accountId();\n  }\n}\n","/**\n * Contains passphrases for common networks:\n * * `Networks.PUBLIC`: `Public Global Stellar Network ; September 2015`\n * * `Networks.TESTNET`: `Test SDF Network ; September 2015`\n * @type {{PUBLIC: string, TESTNET: string}}\n */\nexport const Networks = {\n  PUBLIC: 'Public Global Stellar Network ; September 2015',\n  TESTNET: 'Test SDF Network ; September 2015'\n};\n","/* eslint-disable no-bitwise */\n\nimport { Hyper } from 'js-xdr';\nimport BigNumber from 'bignumber.js';\nimport trimEnd from 'lodash/trimEnd';\nimport isUndefined from 'lodash/isUndefined';\nimport isString from 'lodash/isString';\nimport isNumber from 'lodash/isNumber';\nimport isFinite from 'lodash/isFinite';\nimport { best_r } from './util/continued_fraction';\nimport { Asset } from './asset';\nimport { LiquidityPoolAsset } from './liquidity_pool_asset';\nimport { Claimant } from './claimant';\nimport { StrKey } from './strkey';\nimport { LiquidityPoolId } from './liquidity_pool_id';\nimport xdr from './xdr';\nimport * as ops from './operations/index';\nimport {\n  decodeAddressToMuxedAccount,\n  encodeMuxedAccountToAddress\n} from './util/decode_encode_muxed_account';\n\nconst ONE = 10000000;\nconst MAX_INT64 = '9223372036854775807';\n\n/**\n * When set using `{@link Operation.setOptions}` option, requires the issuing\n * account to give other accounts permission before they can hold the issuing\n * account’s credit.\n *\n * @constant\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\n */\nexport const AuthRequiredFlag = 1 << 0;\n/**\n * When set using `{@link Operation.setOptions}` option, allows the issuing\n * account to revoke its credit held by other accounts.\n *\n * @constant\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\n */\nexport const AuthRevocableFlag = 1 << 1;\n/**\n * When set using `{@link Operation.setOptions}` option, then none of the\n * authorization flags can be set and the account can never be deleted.\n *\n * @constant\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\n */\nexport const AuthImmutableFlag = 1 << 2;\n\n/**\n * When set using `{@link Operation.setOptions}` option, then any trustlines\n * created by this account can have a ClawbackOp operation submitted for the\n * corresponding asset.\n *\n * @constant\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\n */\nexport const AuthClawbackEnabledFlag = 1 << 3;\n\n/**\n * `Operation` class represents [operations](https://developers.stellar.org/docs/glossary/operations/) in Stellar network.\n * Use one of static methods to create operations:\n * * `{@link Operation.createAccount}`\n * * `{@link Operation.payment}`\n * * `{@link Operation.pathPaymentStrictReceive}`\n * * `{@link Operation.pathPaymentStrictSend}`\n * * `{@link Operation.manageSellOffer}`\n * * `{@link Operation.manageBuyOffer}`\n * * `{@link Operation.createPassiveSellOffer}`\n * * `{@link Operation.setOptions}`\n * * `{@link Operation.changeTrust}`\n * * `{@link Operation.allowTrust}`\n * * `{@link Operation.accountMerge}`\n * * `{@link Operation.inflation}`\n * * `{@link Operation.manageData}`\n * * `{@link Operation.bumpSequence}`\n * * `{@link Operation.createClaimableBalance}`\n * * `{@link Operation.claimClaimableBalance}`\n * * `{@link Operation.beginSponsoringFutureReserves}`\n * * `{@link Operation.endSponsoringFutureReserves}`\n * * `{@link Operation.revokeAccountSponsorship}`\n * * `{@link Operation.revokeTrustlineSponsorship}`\n * * `{@link Operation.revokeOfferSponsorship}`\n * * `{@link Operation.revokeDataSponsorship}`\n * * `{@link Operation.revokeClaimableBalanceSponsorship}`\n * * `{@link Operation.revokeLiquidityPoolSponsorship}`\n * * `{@link Operation.revokeSignerSponsorship}`\n * * `{@link Operation.clawback}`\n * * `{@link Operation.clawbackClaimableBalance}`\n * * `{@link Operation.setTrustLineFlags}`\n * * `{@link Operation.liquidityPoolDeposit}`\n * * `{@link Operation.liquidityPoolWithdraw}`\n *\n * @class Operation\n */\nexport class Operation {\n  static setSourceAccount(opAttributes, opts) {\n    if (opts.source) {\n      try {\n        opAttributes.sourceAccount = decodeAddressToMuxedAccount(opts.source);\n      } catch (e) {\n        throw new Error('Source address is invalid');\n      }\n    }\n  }\n\n  /**\n   * Deconstructs the raw XDR operation object into the structured object that\n   * was used to create the operation (i.e. the `opts` parameter to most ops).\n   *\n   * @param {xdr.Operation}   operation - An XDR Operation.\n   * @return {Operation}\n   */\n  static fromXDRObject(operation) {\n    const result = {};\n    if (operation.sourceAccount()) {\n      result.source = encodeMuxedAccountToAddress(operation.sourceAccount());\n    }\n\n    const attrs = operation.body().value();\n    const operationName = operation.body().switch().name;\n\n    switch (operationName) {\n      case 'createAccount': {\n        result.type = 'createAccount';\n        result.destination = accountIdtoAddress(attrs.destination());\n        result.startingBalance = this._fromXDRAmount(attrs.startingBalance());\n        break;\n      }\n      case 'payment': {\n        result.type = 'payment';\n        result.destination = encodeMuxedAccountToAddress(attrs.destination());\n        result.asset = Asset.fromOperation(attrs.asset());\n        result.amount = this._fromXDRAmount(attrs.amount());\n        break;\n      }\n      case 'pathPaymentStrictReceive': {\n        result.type = 'pathPaymentStrictReceive';\n        result.sendAsset = Asset.fromOperation(attrs.sendAsset());\n        result.sendMax = this._fromXDRAmount(attrs.sendMax());\n        result.destination = encodeMuxedAccountToAddress(attrs.destination());\n        result.destAsset = Asset.fromOperation(attrs.destAsset());\n        result.destAmount = this._fromXDRAmount(attrs.destAmount());\n        result.path = [];\n\n        const path = attrs.path();\n\n        // note that Object.values isn't supported by node 6!\n        Object.keys(path).forEach((pathKey) => {\n          result.path.push(Asset.fromOperation(path[pathKey]));\n        });\n        break;\n      }\n      case 'pathPaymentStrictSend': {\n        result.type = 'pathPaymentStrictSend';\n        result.sendAsset = Asset.fromOperation(attrs.sendAsset());\n        result.sendAmount = this._fromXDRAmount(attrs.sendAmount());\n        result.destination = encodeMuxedAccountToAddress(attrs.destination());\n        result.destAsset = Asset.fromOperation(attrs.destAsset());\n        result.destMin = this._fromXDRAmount(attrs.destMin());\n        result.path = [];\n\n        const path = attrs.path();\n\n        // note that Object.values isn't supported by node 6!\n        Object.keys(path).forEach((pathKey) => {\n          result.path.push(Asset.fromOperation(path[pathKey]));\n        });\n        break;\n      }\n      case 'changeTrust': {\n        result.type = 'changeTrust';\n        switch (attrs.line().switch()) {\n          case xdr.AssetType.assetTypePoolShare():\n            result.line = LiquidityPoolAsset.fromOperation(attrs.line());\n            break;\n          default:\n            result.line = Asset.fromOperation(attrs.line());\n            break;\n        }\n        result.limit = this._fromXDRAmount(attrs.limit());\n        break;\n      }\n      case 'allowTrust': {\n        result.type = 'allowTrust';\n        result.trustor = accountIdtoAddress(attrs.trustor());\n        result.assetCode = attrs.asset().value().toString();\n        result.assetCode = trimEnd(result.assetCode, '\\0');\n        result.authorize = attrs.authorize();\n        break;\n      }\n      case 'setOptions': {\n        result.type = 'setOptions';\n        if (attrs.inflationDest()) {\n          result.inflationDest = accountIdtoAddress(attrs.inflationDest());\n        }\n\n        result.clearFlags = attrs.clearFlags();\n        result.setFlags = attrs.setFlags();\n        result.masterWeight = attrs.masterWeight();\n        result.lowThreshold = attrs.lowThreshold();\n        result.medThreshold = attrs.medThreshold();\n        result.highThreshold = attrs.highThreshold();\n        // home_domain is checked by iscntrl in stellar-core\n        result.homeDomain =\n          attrs.homeDomain() !== undefined\n            ? attrs.homeDomain().toString('ascii')\n            : undefined;\n\n        if (attrs.signer()) {\n          const signer = {};\n          const arm = attrs.signer().key().arm();\n          if (arm === 'ed25519') {\n            signer.ed25519PublicKey = accountIdtoAddress(attrs.signer().key());\n          } else if (arm === 'preAuthTx') {\n            signer.preAuthTx = attrs.signer().key().preAuthTx();\n          } else if (arm === 'hashX') {\n            signer.sha256Hash = attrs.signer().key().hashX();\n          } else if (arm === 'ed25519SignedPayload') {\n            const signedPayload = attrs.signer().key().ed25519SignedPayload();\n            signer.ed25519SignedPayload = StrKey.encodeSignedPayload(\n              signedPayload.toXDR()\n            );\n          }\n\n          signer.weight = attrs.signer().weight();\n          result.signer = signer;\n        }\n        break;\n      }\n      // the next case intentionally falls through!\n      case 'manageOffer':\n      case 'manageSellOffer': {\n        result.type = 'manageSellOffer';\n        result.selling = Asset.fromOperation(attrs.selling());\n        result.buying = Asset.fromOperation(attrs.buying());\n        result.amount = this._fromXDRAmount(attrs.amount());\n        result.price = this._fromXDRPrice(attrs.price());\n        result.offerId = attrs.offerId().toString();\n        break;\n      }\n      case 'manageBuyOffer': {\n        result.type = 'manageBuyOffer';\n        result.selling = Asset.fromOperation(attrs.selling());\n        result.buying = Asset.fromOperation(attrs.buying());\n        result.buyAmount = this._fromXDRAmount(attrs.buyAmount());\n        result.price = this._fromXDRPrice(attrs.price());\n        result.offerId = attrs.offerId().toString();\n        break;\n      }\n      // the next case intentionally falls through!\n      case 'createPassiveOffer':\n      case 'createPassiveSellOffer': {\n        result.type = 'createPassiveSellOffer';\n        result.selling = Asset.fromOperation(attrs.selling());\n        result.buying = Asset.fromOperation(attrs.buying());\n        result.amount = this._fromXDRAmount(attrs.amount());\n        result.price = this._fromXDRPrice(attrs.price());\n        break;\n      }\n      case 'accountMerge': {\n        result.type = 'accountMerge';\n        result.destination = encodeMuxedAccountToAddress(attrs);\n        break;\n      }\n      case 'manageData': {\n        result.type = 'manageData';\n        // manage_data.name is checked by iscntrl in stellar-core\n        result.name = attrs.dataName().toString('ascii');\n        result.value = attrs.dataValue();\n        break;\n      }\n      case 'inflation': {\n        result.type = 'inflation';\n        break;\n      }\n      case 'bumpSequence': {\n        result.type = 'bumpSequence';\n        result.bumpTo = attrs.bumpTo().toString();\n        break;\n      }\n      case 'createClaimableBalance': {\n        result.type = 'createClaimableBalance';\n        result.asset = Asset.fromOperation(attrs.asset());\n        result.amount = this._fromXDRAmount(attrs.amount());\n        result.claimants = [];\n        attrs.claimants().forEach((claimant) => {\n          result.claimants.push(Claimant.fromXDR(claimant));\n        });\n        break;\n      }\n      case 'claimClaimableBalance': {\n        result.type = 'claimClaimableBalance';\n        result.balanceId = attrs.toXDR('hex');\n        break;\n      }\n      case 'beginSponsoringFutureReserves': {\n        result.type = 'beginSponsoringFutureReserves';\n        result.sponsoredId = accountIdtoAddress(attrs.sponsoredId());\n        break;\n      }\n      case 'endSponsoringFutureReserves': {\n        result.type = 'endSponsoringFutureReserves';\n        break;\n      }\n      case 'revokeSponsorship': {\n        extractRevokeSponshipDetails(attrs, result);\n        break;\n      }\n      case 'clawback': {\n        result.type = 'clawback';\n        result.amount = this._fromXDRAmount(attrs.amount());\n        result.from = encodeMuxedAccountToAddress(attrs.from());\n        result.asset = Asset.fromOperation(attrs.asset());\n        break;\n      }\n      case 'clawbackClaimableBalance': {\n        result.type = 'clawbackClaimableBalance';\n        result.balanceId = attrs.toXDR('hex');\n        break;\n      }\n      case 'setTrustLineFlags': {\n        result.type = 'setTrustLineFlags';\n        result.asset = Asset.fromOperation(attrs.asset());\n        result.trustor = accountIdtoAddress(attrs.trustor());\n\n        // Convert from the integer-bitwised flag into a sensible object that\n        // indicates true/false for each flag that's on/off.\n        const clears = attrs.clearFlags();\n        const sets = attrs.setFlags();\n\n        const mapping = {\n          authorized: xdr.TrustLineFlags.authorizedFlag(),\n          authorizedToMaintainLiabilities:\n            xdr.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(),\n          clawbackEnabled: xdr.TrustLineFlags.trustlineClawbackEnabledFlag()\n        };\n\n        const getFlagValue = (key) => {\n          const bit = mapping[key].value;\n          if (sets & bit) {\n            return true;\n          }\n          if (clears & bit) {\n            return false;\n          }\n          return undefined;\n        };\n\n        result.flags = {};\n        Object.keys(mapping).forEach((flagName) => {\n          result.flags[flagName] = getFlagValue(flagName);\n        });\n\n        break;\n      }\n      case 'liquidityPoolDeposit': {\n        result.type = 'liquidityPoolDeposit';\n        result.liquidityPoolId = attrs.liquidityPoolId().toString('hex');\n        result.maxAmountA = this._fromXDRAmount(attrs.maxAmountA());\n        result.maxAmountB = this._fromXDRAmount(attrs.maxAmountB());\n        result.minPrice = this._fromXDRPrice(attrs.minPrice());\n        result.maxPrice = this._fromXDRPrice(attrs.maxPrice());\n        break;\n      }\n      case 'liquidityPoolWithdraw': {\n        result.type = 'liquidityPoolWithdraw';\n        result.liquidityPoolId = attrs.liquidityPoolId().toString('hex');\n        result.amount = this._fromXDRAmount(attrs.amount());\n        result.minAmountA = this._fromXDRAmount(attrs.minAmountA());\n        result.minAmountB = this._fromXDRAmount(attrs.minAmountB());\n        break;\n      }\n      default: {\n        throw new Error(`Unknown operation: ${operationName}`);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Validates that a given amount is possible for a Stellar asset.\n   *\n   * Specifically, this means that the amount is well, a valid number, but also\n   * that it is within the int64 range and has no more than 7 decimal levels of\n   * precision.\n   *\n   * Note that while smart contracts allow larger amounts, this is oriented\n   * towards validating the standard Stellar operations.\n   *\n   * @param {string} value          the amount to validate\n   * @param {[boolean]} allowZero   whether or not zero is valid (default: no)\n   *\n   * @returns {boolean}\n   */\n  static isValidAmount(value, allowZero = false) {\n    if (!isString(value)) {\n      return false;\n    }\n\n    let amount;\n    try {\n      amount = new BigNumber(value);\n    } catch (e) {\n      return false;\n    }\n\n    if (\n      // == 0\n      (!allowZero && amount.isZero()) ||\n      // < 0\n      amount.isNegative() ||\n      // > Max value\n      amount.times(ONE).gt(new BigNumber(MAX_INT64).toString()) ||\n      // Decimal places (max 7)\n      amount.decimalPlaces() > 7 ||\n      // NaN or Infinity\n      amount.isNaN() ||\n      !amount.isFinite()\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  static constructAmountRequirementsError(arg) {\n    return `${arg} argument must be of type String, represent a positive number and have at most 7 digits after the decimal`;\n  }\n\n  /**\n   * Returns value converted to uint32 value or undefined.\n   * If `value` is not `Number`, `String` or `Undefined` then throws an error.\n   * Used in {@link Operation.setOptions}.\n   * @private\n   * @param {string} name Name of the property (used in error message only)\n   * @param {*} value Value to check\n   * @param {function(value, name)} isValidFunction Function to check other constraints (the argument will be a `Number`)\n   * @returns {undefined|Number}\n   */\n  static _checkUnsignedIntValue(name, value, isValidFunction = null) {\n    if (isUndefined(value)) {\n      return undefined;\n    }\n\n    if (isString(value)) {\n      value = parseFloat(value);\n    }\n\n    switch (true) {\n      case !isNumber(value) || !isFinite(value) || value % 1 !== 0:\n        throw new Error(`${name} value is invalid`);\n      case value < 0:\n        throw new Error(`${name} value must be unsigned`);\n      case !isValidFunction ||\n        (isValidFunction && isValidFunction(value, name)):\n        return value;\n      default:\n        throw new Error(`${name} value is invalid`);\n    }\n  }\n  /**\n   * @private\n   * @param {string|BigNumber} value Value\n   * @returns {Hyper} XDR amount\n   */\n  static _toXDRAmount(value) {\n    const amount = new BigNumber(value).times(ONE);\n    return Hyper.fromString(amount.toString());\n  }\n\n  /**\n   * @private\n   * @param {string|BigNumber} value XDR amount\n   * @returns {BigNumber} Number\n   */\n  static _fromXDRAmount(value) {\n    return new BigNumber(value).div(ONE).toFixed(7);\n  }\n\n  /**\n   * @private\n   * @param {object} price Price object\n   * @param {function} price.n numerator function that returns a value\n   * @param {function} price.d denominator function that returns a value\n   * @returns {BigNumber} Big string\n   */\n  static _fromXDRPrice(price) {\n    const n = new BigNumber(price.n());\n    return n.div(new BigNumber(price.d())).toString();\n  }\n\n  /**\n   * @private\n   * @param {object} price Price object\n   * @param {function} price.n numerator function that returns a value\n   * @param {function} price.d denominator function that returns a value\n   * @returns {object} XDR price object\n   */\n  static _toXDRPrice(price) {\n    let xdrObject;\n    if (price.n && price.d) {\n      xdrObject = new xdr.Price(price);\n    } else {\n      const approx = best_r(price);\n      xdrObject = new xdr.Price({\n        n: parseInt(approx[0], 10),\n        d: parseInt(approx[1], 10)\n      });\n    }\n\n    if (xdrObject.n() < 0 || xdrObject.d() < 0) {\n      throw new Error('price must be positive');\n    }\n\n    return xdrObject;\n  }\n}\n\nfunction extractRevokeSponshipDetails(attrs, result) {\n  switch (attrs.switch().name) {\n    case 'revokeSponsorshipLedgerEntry': {\n      const ledgerKey = attrs.ledgerKey();\n      switch (ledgerKey.switch().name) {\n        case xdr.LedgerEntryType.account().name: {\n          result.type = 'revokeAccountSponsorship';\n          result.account = accountIdtoAddress(ledgerKey.account().accountId());\n          break;\n        }\n        case xdr.LedgerEntryType.trustline().name: {\n          result.type = 'revokeTrustlineSponsorship';\n          result.account = accountIdtoAddress(\n            ledgerKey.trustLine().accountId()\n          );\n          const xdrAsset = ledgerKey.trustLine().asset();\n          switch (xdrAsset.switch()) {\n            case xdr.AssetType.assetTypePoolShare():\n              result.asset = LiquidityPoolId.fromOperation(xdrAsset);\n              break;\n            default:\n              result.asset = Asset.fromOperation(xdrAsset);\n              break;\n          }\n          break;\n        }\n        case xdr.LedgerEntryType.offer().name: {\n          result.type = 'revokeOfferSponsorship';\n          result.seller = accountIdtoAddress(ledgerKey.offer().sellerId());\n          result.offerId = ledgerKey.offer().offerId().toString();\n          break;\n        }\n        case xdr.LedgerEntryType.data().name: {\n          result.type = 'revokeDataSponsorship';\n          result.account = accountIdtoAddress(ledgerKey.data().accountId());\n          result.name = ledgerKey.data().dataName().toString('ascii');\n          break;\n        }\n        case xdr.LedgerEntryType.claimableBalance().name: {\n          result.type = 'revokeClaimableBalanceSponsorship';\n          result.balanceId = ledgerKey\n            .claimableBalance()\n            .balanceId()\n            .toXDR('hex');\n          break;\n        }\n        case xdr.LedgerEntryType.liquidityPool().name: {\n          result.type = 'revokeLiquidityPoolSponsorship';\n          result.liquidityPoolId = ledgerKey\n            .liquidityPool()\n            .liquidityPoolId()\n            .toString('hex');\n          break;\n        }\n        default: {\n          throw new Error(`Unknown ledgerKey: ${attrs.switch().name}`);\n        }\n      }\n      break;\n    }\n    case 'revokeSponsorshipSigner': {\n      result.type = 'revokeSignerSponsorship';\n      result.account = accountIdtoAddress(attrs.signer().accountId());\n      result.signer = convertXDRSignerKeyToObject(attrs.signer().signerKey());\n      break;\n    }\n    default: {\n      throw new Error(`Unknown revokeSponsorship: ${attrs.switch().name}`);\n    }\n  }\n}\n\nfunction convertXDRSignerKeyToObject(signerKey) {\n  const attrs = {};\n  switch (signerKey.switch().name) {\n    case xdr.SignerKeyType.signerKeyTypeEd25519().name: {\n      attrs.ed25519PublicKey = StrKey.encodeEd25519PublicKey(\n        signerKey.ed25519()\n      );\n      break;\n    }\n    case xdr.SignerKeyType.signerKeyTypePreAuthTx().name: {\n      attrs.preAuthTx = signerKey.preAuthTx().toString('hex');\n      break;\n    }\n    case xdr.SignerKeyType.signerKeyTypeHashX().name: {\n      attrs.sha256Hash = signerKey.hashX().toString('hex');\n      break;\n    }\n    default: {\n      throw new Error(`Unknown signerKey: ${signerKey.switch().name}`);\n    }\n  }\n\n  return attrs;\n}\n\nfunction accountIdtoAddress(accountId) {\n  return StrKey.encodeEd25519PublicKey(accountId.ed25519());\n}\n\n// Attach all imported operations as static methods on the Operation class\nOperation.accountMerge = ops.accountMerge;\nOperation.allowTrust = ops.allowTrust;\nOperation.bumpSequence = ops.bumpSequence;\nOperation.changeTrust = ops.changeTrust;\nOperation.createAccount = ops.createAccount;\nOperation.createClaimableBalance = ops.createClaimableBalance;\nOperation.claimClaimableBalance = ops.claimClaimableBalance;\nOperation.clawbackClaimableBalance = ops.clawbackClaimableBalance;\nOperation.createPassiveSellOffer = ops.createPassiveSellOffer;\nOperation.inflation = ops.inflation;\nOperation.manageData = ops.manageData;\nOperation.manageSellOffer = ops.manageSellOffer;\nOperation.manageBuyOffer = ops.manageBuyOffer;\nOperation.pathPaymentStrictReceive = ops.pathPaymentStrictReceive;\nOperation.pathPaymentStrictSend = ops.pathPaymentStrictSend;\nOperation.payment = ops.payment;\nOperation.setOptions = ops.setOptions;\nOperation.beginSponsoringFutureReserves = ops.beginSponsoringFutureReserves;\nOperation.endSponsoringFutureReserves = ops.endSponsoringFutureReserves;\nOperation.revokeAccountSponsorship = ops.revokeAccountSponsorship;\nOperation.revokeTrustlineSponsorship = ops.revokeTrustlineSponsorship;\nOperation.revokeOfferSponsorship = ops.revokeOfferSponsorship;\nOperation.revokeDataSponsorship = ops.revokeDataSponsorship;\nOperation.revokeClaimableBalanceSponsorship =\n  ops.revokeClaimableBalanceSponsorship;\nOperation.revokeLiquidityPoolSponsorship = ops.revokeLiquidityPoolSponsorship;\nOperation.revokeSignerSponsorship = ops.revokeSignerSponsorship;\nOperation.clawback = ops.clawback;\nOperation.setTrustLineFlags = ops.setTrustLineFlags;\nOperation.liquidityPoolDeposit = ops.liquidityPoolDeposit;\nOperation.liquidityPoolWithdraw = ops.liquidityPoolWithdraw;\n","import xdr from '../xdr';\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\n\n/**\n * Transfers native balance to destination account.\n *\n * @function\n * @alias Operation.accountMerge\n *\n * @param {object} opts - options object\n * @param {string} opts.destination - destination to merge the source account into\n * @param {string} [opts.source]    - operation source account (defaults to\n *     transaction source)\n *\n * @returns {xdr.Operation} an Account Merge operation (xdr.AccountMergeOp)\n */\nexport function accountMerge(opts) {\n  const opAttributes = {};\n  try {\n    opAttributes.body = xdr.OperationBody.accountMerge(\n      decodeAddressToMuxedAccount(opts.destination)\n    );\n  } catch (e) {\n    throw new Error('destination is invalid');\n  }\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import padEnd from 'lodash/padEnd';\nimport xdr from '../xdr';\nimport { Keypair } from '../keypair';\nimport { StrKey } from '../strkey';\n\n/**\n * @deprecated since v5.0\n *\n * Returns an XDR AllowTrustOp. An \"allow trust\" operation authorizes another\n * account to hold your account's credit for a given asset.\n *\n * @function\n * @alias Operation.allowTrust\n *\n * @param {object} opts Options object\n * @param {string} opts.trustor - The trusting account (the one being authorized)\n * @param {string} opts.assetCode - The asset code being authorized.\n * @param {(0|1|2)} opts.authorize - `1` to authorize, `2` to authorize to maintain liabilities, and `0` to deauthorize.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n *\n * @returns {xdr.AllowTrustOp} Allow Trust operation\n */\nexport function allowTrust(opts) {\n  if (!StrKey.isValidEd25519PublicKey(opts.trustor)) {\n    throw new Error('trustor is invalid');\n  }\n  const attributes = {};\n  attributes.trustor = Keypair.fromPublicKey(opts.trustor).xdrAccountId();\n  if (opts.assetCode.length <= 4) {\n    const code = padEnd(opts.assetCode, 4, '\\0');\n    attributes.asset = xdr.AssetCode.assetTypeCreditAlphanum4(code);\n  } else if (opts.assetCode.length <= 12) {\n    const code = padEnd(opts.assetCode, 12, '\\0');\n    attributes.asset = xdr.AssetCode.assetTypeCreditAlphanum12(code);\n  } else {\n    throw new Error('Asset code must be 12 characters at max.');\n  }\n\n  if (typeof opts.authorize === 'boolean') {\n    if (opts.authorize) {\n      attributes.authorize = xdr.TrustLineFlags.authorizedFlag().value;\n    } else {\n      attributes.authorize = 0;\n    }\n  } else {\n    attributes.authorize = opts.authorize;\n  }\n\n  const allowTrustOp = new xdr.AllowTrustOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.allowTrust(allowTrustOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { StrKey } from '../strkey';\nimport { Keypair } from '../keypair';\n\n/**\n * Create a \"begin sponsoring future reserves\" operation.\n * @function\n * @alias Operation.beginSponsoringFutureReserves\n * @param {object} opts Options object\n * @param {string} opts.sponsoredId - The sponsored account id.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.beginSponsoringFutureReserves({\n *   sponsoredId: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7'\n * });\n *\n */\nexport function beginSponsoringFutureReserves(opts = {}) {\n  if (!StrKey.isValidEd25519PublicKey(opts.sponsoredId)) {\n    throw new Error('sponsoredId is invalid');\n  }\n  const op = new xdr.BeginSponsoringFutureReservesOp({\n    sponsoredId: Keypair.fromPublicKey(opts.sponsoredId).xdrAccountId()\n  });\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.beginSponsoringFutureReserves(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import { Hyper } from 'js-xdr';\nimport BigNumber from 'bignumber.js';\nimport isString from 'lodash/isString';\nimport xdr from '../xdr';\n\n/**\n * This operation bumps sequence number.\n * @function\n * @alias Operation.bumpSequence\n * @param {object} opts Options object\n * @param {string} opts.bumpTo - Sequence number to bump to.\n * @param {string} [opts.source] - The optional source account.\n * @returns {xdr.BumpSequenceOp} Operation\n */\nexport function bumpSequence(opts) {\n  const attributes = {};\n\n  if (!isString(opts.bumpTo)) {\n    throw new Error('bumpTo must be a string');\n  }\n\n  try {\n    // eslint-disable-next-line no-new\n    new BigNumber(opts.bumpTo);\n  } catch (e) {\n    throw new Error('bumpTo must be a stringified number');\n  }\n\n  attributes.bumpTo = Hyper.fromString(opts.bumpTo);\n\n  const bumpSequenceOp = new xdr.BumpSequenceOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.bumpSequence(bumpSequenceOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import isUndefined from 'lodash/isUndefined';\nimport { Hyper } from 'js-xdr';\nimport BigNumber from 'bignumber.js';\nimport xdr from '../xdr';\nimport { Asset } from '../asset';\nimport { LiquidityPoolAsset } from '../liquidity_pool_asset';\n\nconst MAX_INT64 = '9223372036854775807';\n\n/**\n * Returns an XDR ChangeTrustOp. A \"change trust\" operation adds, removes, or updates a\n * trust line for a given asset from the source account to another.\n * @function\n * @alias Operation.changeTrust\n * @param {object} opts Options object\n * @param {Asset | LiquidityPoolAsset} opts.asset - The asset for the trust line.\n * @param {string} [opts.limit] - The limit for the asset, defaults to max int64.\n *                                If the limit is set to \"0\" it deletes the trustline.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @returns {xdr.ChangeTrustOp} Change Trust operation\n */\nexport function changeTrust(opts) {\n  const attributes = {};\n\n  if (opts.asset instanceof Asset) {\n    attributes.line = opts.asset.toChangeTrustXDRObject();\n  } else if (opts.asset instanceof LiquidityPoolAsset) {\n    attributes.line = opts.asset.toXDRObject();\n  } else {\n    throw new TypeError('asset must be Asset or LiquidityPoolAsset');\n  }\n\n  if (!isUndefined(opts.limit) && !this.isValidAmount(opts.limit, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('limit'));\n  }\n\n  if (opts.limit) {\n    attributes.limit = this._toXDRAmount(opts.limit);\n  } else {\n    attributes.limit = Hyper.fromString(new BigNumber(MAX_INT64).toString());\n  }\n\n  if (opts.source) {\n    attributes.source = opts.source.masterKeypair;\n  }\n  const changeTrustOP = new xdr.ChangeTrustOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.changeTrust(changeTrustOP);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\n\n/**\n * Create a new claim claimable balance operation.\n * @function\n * @alias Operation.claimClaimableBalance\n * @param {object} opts Options object\n * @param {string} opts.balanceId - The claimable balance id to be claimed.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} Claim claimable balance operation\n *\n * @example\n * const op = Operation.claimClaimableBalance({\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\n * });\n *\n */\nexport function claimClaimableBalance(opts = {}) {\n  validateClaimableBalanceId(opts.balanceId);\n\n  const attributes = {};\n  attributes.balanceId = xdr.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex');\n  const claimClaimableBalanceOp = new xdr.ClaimClaimableBalanceOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.claimClaimableBalance(\n    claimClaimableBalanceOp\n  );\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\nexport function validateClaimableBalanceId(balanceId) {\n  if (\n    typeof balanceId !== 'string' ||\n    balanceId.length !== 8 + 64 /* 8b discriminant + 64b string */\n  ) {\n    throw new Error('must provide a valid claimable balance id');\n  }\n}\n","import xdr from '../xdr';\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\n\n/**\n * Creates a clawback operation.\n *\n * @function\n * @alias Operation.clawback\n *\n * @param {object} opts - Options object\n * @param {Asset}  opts.asset   - The asset being clawed back.\n * @param {string} opts.amount  - The amount of the asset to claw back.\n * @param {string} opts.from    - The public key of the (optionally-muxed)\n *     account to claw back from.\n *\n * @param {string} [opts.source] - The source account for the operation.\n *     Defaults to the transaction's source account.\n *\n * @return {xdr.ClawbackOp}\n *\n * @see https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#clawback-operation\n */\nexport function clawback(opts) {\n  const attributes = {};\n  if (!this.isValidAmount(opts.amount)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n  attributes.amount = this._toXDRAmount(opts.amount);\n  attributes.asset = opts.asset.toXDRObject();\n  try {\n    attributes.from = decodeAddressToMuxedAccount(opts.from);\n  } catch (e) {\n    throw new Error('from address is invalid');\n  }\n\n  const opAttributes = {\n    body: xdr.OperationBody.clawback(new xdr.ClawbackOp(attributes))\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { validateClaimableBalanceId } from './claim_claimable_balance';\n\n/**\n * Creates a clawback operation for a claimable balance.\n *\n * @function\n * @alias Operation.clawbackClaimableBalance\n * @param {object} opts - Options object\n * @param {string} opts.balanceId - The claimable balance ID to be clawed back.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @return {xdr.ClawbackClaimableBalanceOp}\n *\n * @example\n * const op = Operation.clawbackClaimableBalance({\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\n * });\n *\n * @link https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#clawback-claimable-balance-operation\n */\nexport function clawbackClaimableBalance(opts = {}) {\n  validateClaimableBalanceId(opts.balanceId);\n\n  const attributes = {\n    balanceId: xdr.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex')\n  };\n\n  const opAttributes = {\n    body: xdr.OperationBody.clawbackClaimableBalance(\n      new xdr.ClawbackClaimableBalanceOp(attributes)\n    )\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { Keypair } from '../keypair';\nimport { StrKey } from '../strkey';\n\n/**\n * Create and fund a non existent account.\n * @function\n * @alias Operation.createAccount\n * @param {object} opts Options object\n * @param {string} opts.destination - Destination account ID to create an account for.\n * @param {string} opts.startingBalance - Amount in XLM the account should be funded for. Must be greater\n *                                   than the [reserve balance amount](https://developers.stellar.org/docs/glossary/fees/).\n * @param {string} [opts.source] - The source account for the payment. Defaults to the transaction's source account.\n * @returns {xdr.CreateAccountOp} Create account operation\n */\nexport function createAccount(opts) {\n  if (!StrKey.isValidEd25519PublicKey(opts.destination)) {\n    throw new Error('destination is invalid');\n  }\n  if (!this.isValidAmount(opts.startingBalance, true)) {\n    throw new TypeError(\n      'startingBalance must be of type String, represent a non-negative number and have at most 7 digits after the decimal'\n    );\n  }\n  const attributes = {};\n  attributes.destination = Keypair.fromPublicKey(\n    opts.destination\n  ).xdrAccountId();\n  attributes.startingBalance = this._toXDRAmount(opts.startingBalance);\n  const createAccountOp = new xdr.CreateAccountOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.createAccount(createAccountOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { Asset } from '../asset';\n\n/**\n * Create a new claimable balance operation.\n *\n * @function\n * @alias Operation.createClaimableBalance\n *\n * @param {object} opts Options object\n * @param {Asset} opts.asset - The asset for the claimable balance.\n * @param {string} opts.amount - Amount.\n * @param {Claimant[]} opts.claimants - An array of Claimants\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation} Create claimable balance operation\n *\n * @example\n * const asset = new Asset(\n *   'USD',\n *   'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7'\n * );\n * const amount = '100.0000000';\n * const claimants = [\n *   new Claimant(\n *     'GCEZWKCA5VLDNRLN3RPRJMRZOX3Z6G5CHCGSNFHEYVXM3XOJMDS674JZ',\n *      Claimant.predicateBeforeAbsoluteTime(\"4102444800000\")\n *   )\n * ];\n *\n * const op = Operation.createClaimableBalance({\n *   asset,\n *   amount,\n *   claimants\n * });\n *\n */\nexport function createClaimableBalance(opts) {\n  if (!(opts.asset instanceof Asset)) {\n    throw new Error(\n      'must provide an asset for create claimable balance operation'\n    );\n  }\n\n  if (!this.isValidAmount(opts.amount)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n\n  if (!Array.isArray(opts.claimants) || opts.claimants.length === 0) {\n    throw new Error('must provide at least one claimant');\n  }\n\n  const attributes = {};\n  attributes.asset = opts.asset.toXDRObject();\n  attributes.amount = this._toXDRAmount(opts.amount);\n  attributes.claimants = opts.claimants.map((c) => c.toXDRObject());\n\n  const createClaimableBalanceOp = new xdr.CreateClaimableBalanceOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.createClaimableBalance(\n    createClaimableBalanceOp\n  );\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import isUndefined from 'lodash/isUndefined';\nimport xdr from '../xdr';\n\n/**\n * Returns a XDR CreatePasiveSellOfferOp. A \"create passive offer\" operation creates an\n * offer that won't consume a counter offer that exactly matches this offer. This is\n * useful for offers just used as 1:1 exchanges for path payments. Use manage offer\n * to manage this offer after using this operation to create it.\n * @function\n * @alias Operation.createPassiveSellOffer\n * @param {object} opts Options object\n * @param {Asset} opts.selling - What you're selling.\n * @param {Asset} opts.buying - What you're buying.\n * @param {string} opts.amount - The total amount you're selling. If 0, deletes the offer.\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `selling` in terms of `buying`.\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\n * @returns {xdr.CreatePassiveSellOfferOp} Create Passive Sell Offer operation\n */\nexport function createPassiveSellOffer(opts) {\n  const attributes = {};\n  attributes.selling = opts.selling.toXDRObject();\n  attributes.buying = opts.buying.toXDRObject();\n  if (!this.isValidAmount(opts.amount)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n  attributes.amount = this._toXDRAmount(opts.amount);\n  if (isUndefined(opts.price)) {\n    throw new TypeError('price argument is required');\n  }\n  attributes.price = this._toXDRPrice(opts.price);\n  const createPassiveSellOfferOp = new xdr.CreatePassiveSellOfferOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.createPassiveSellOffer(\n    createPassiveSellOfferOp\n  );\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\n\n/**\n * Create an \"end sponsoring future reserves\" operation.\n * @function\n * @alias Operation.endSponsoringFutureReserves\n * @param {object} opts Options object\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.endSponsoringFutureReserves();\n *\n */\nexport function endSponsoringFutureReserves(opts = {}) {\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.endSponsoringFutureReserves();\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","export { manageSellOffer } from './manage_sell_offer';\nexport { createPassiveSellOffer } from './create_passive_sell_offer';\nexport { accountMerge } from './account_merge';\nexport { allowTrust } from './allow_trust';\nexport { bumpSequence } from './bump_sequence';\nexport { changeTrust } from './change_trust';\nexport { createAccount } from './create_account';\nexport { createClaimableBalance } from './create_claimable_balance';\nexport { claimClaimableBalance } from './claim_claimable_balance';\nexport { clawbackClaimableBalance } from './clawback_claimable_balance';\nexport { inflation } from './inflation';\nexport { manageData } from './manage_data';\nexport { manageBuyOffer } from './manage_buy_offer';\nexport { pathPaymentStrictReceive } from './path_payment_strict_receive';\nexport { pathPaymentStrictSend } from './path_payment_strict_send';\nexport { payment } from './payment';\nexport { setOptions } from './set_options';\nexport { beginSponsoringFutureReserves } from './begin_sponsoring_future_reserves';\nexport { endSponsoringFutureReserves } from './end_sponsoring_future_reserves';\nexport {\n  revokeAccountSponsorship,\n  revokeTrustlineSponsorship,\n  revokeOfferSponsorship,\n  revokeDataSponsorship,\n  revokeClaimableBalanceSponsorship,\n  revokeLiquidityPoolSponsorship,\n  revokeSignerSponsorship\n} from './revoke_sponsorship';\nexport { clawback } from './clawback';\nexport { setTrustLineFlags } from './set_trustline_flags';\nexport { liquidityPoolDeposit } from './liquidity_pool_deposit';\nexport { liquidityPoolWithdraw } from './liquidity_pool_withdraw';\n","import xdr from '../xdr';\n\n/**\n * This operation generates the inflation.\n * @function\n * @alias Operation.inflation\n * @param {object} [opts] Options object\n * @param {string} [opts.source] - The optional source account.\n * @returns {xdr.InflationOp} Inflation operation\n */\nexport function inflation(opts = {}) {\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.inflation();\n  this.setSourceAccount(opAttributes, opts);\n  return new xdr.Operation(opAttributes);\n}\n","import isUndefined from 'lodash/isUndefined';\nimport xdr from '../xdr';\n\n/**\n * Creates a liquidity pool deposit operation.\n *\n * @function\n * @alias Operation.liquidityPoolDeposit\n * @see https://developers.stellar.org/docs/start/list-of-operations/#liquidity-pool-deposit\n *\n * @param {object} opts - Options object\n * @param {string} opts.liquidityPoolId - The liquidity pool ID.\n * @param {string} opts.maxAmountA - Maximum amount of first asset to deposit.\n * @param {string} opts.maxAmountB - Maximum amount of second asset to deposit.\n * @param {number|string|BigNumber|Object} opts.minPrice -  Minimum depositA/depositB price.\n * @param {number} opts.minPrice.n - If `opts.minPrice` is an object: the price numerator\n * @param {number} opts.minPrice.d - If `opts.minPrice` is an object: the price denominator\n * @param {number|string|BigNumber|Object} opts.maxPrice -  Maximum depositA/depositB price.\n * @param {number} opts.maxPrice.n - If `opts.maxPrice` is an object: the price numerator\n * @param {number} opts.maxPrice.d - If `opts.maxPrice` is an object: the price denominator\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation} The resulting operation (xdr.LiquidityPoolDepositOp).\n */\nexport function liquidityPoolDeposit(opts = {}) {\n  const { liquidityPoolId, maxAmountA, maxAmountB, minPrice, maxPrice } = opts;\n  const attributes = {};\n\n  if (!liquidityPoolId) {\n    throw new TypeError('liquidityPoolId argument is required');\n  }\n  attributes.liquidityPoolId = xdr.PoolId.fromXDR(liquidityPoolId, 'hex');\n\n  if (!this.isValidAmount(maxAmountA, true)) {\n    throw new TypeError('maxAmountA argument is required');\n  }\n  attributes.maxAmountA = this._toXDRAmount(maxAmountA);\n\n  if (!this.isValidAmount(maxAmountB, true)) {\n    throw new TypeError('maxAmountB argument is required');\n  }\n  attributes.maxAmountB = this._toXDRAmount(maxAmountB);\n\n  if (isUndefined(minPrice)) {\n    throw new TypeError('minPrice argument is required');\n  }\n  attributes.minPrice = this._toXDRPrice(minPrice);\n\n  if (isUndefined(maxPrice)) {\n    throw new TypeError('maxPrice argument is required');\n  }\n  attributes.maxPrice = this._toXDRPrice(maxPrice);\n\n  const liquidityPoolDepositOp = new xdr.LiquidityPoolDepositOp(attributes);\n  const opAttributes = {\n    body: xdr.OperationBody.liquidityPoolDeposit(liquidityPoolDepositOp)\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\n\n/**\n * Creates a liquidity pool withdraw operation.\n *\n * @function\n * @alias Operation.liquidityPoolWithdraw\n * @see https://developers.stellar.org/docs/start/list-of-operations/#liquidity-pool-withdraw\n *\n * @param {object} opts - Options object\n * @param {string} opts.liquidityPoolId - The liquidity pool ID.\n * @param {string} opts.amount - Amount of pool shares to withdraw.\n * @param {string} opts.minAmountA - Minimum amount of first asset to withdraw.\n * @param {string} opts.minAmountB - Minimum amount of second asset to withdraw.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation}   The resulting operation (xdr.LiquidityPoolWithdrawOp).\n */\nexport function liquidityPoolWithdraw(opts = {}) {\n  const attributes = {};\n  if (!opts.liquidityPoolId) {\n    throw new TypeError('liquidityPoolId argument is required');\n  }\n  attributes.liquidityPoolId = xdr.PoolId.fromXDR(opts.liquidityPoolId, 'hex');\n\n  if (!this.isValidAmount(opts.amount)) {\n    throw new TypeError('amount argument is required');\n  }\n  attributes.amount = this._toXDRAmount(opts.amount);\n\n  if (!this.isValidAmount(opts.minAmountA, true)) {\n    throw new TypeError('minAmountA argument is required');\n  }\n  attributes.minAmountA = this._toXDRAmount(opts.minAmountA);\n\n  if (!this.isValidAmount(opts.minAmountB, true)) {\n    throw new TypeError('minAmountB argument is required');\n  }\n  attributes.minAmountB = this._toXDRAmount(opts.minAmountB);\n\n  const liquidityPoolWithdrawOp = new xdr.LiquidityPoolWithdrawOp(attributes);\n  const opAttributes = {\n    body: xdr.OperationBody.liquidityPoolWithdraw(liquidityPoolWithdrawOp)\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import isUndefined from 'lodash/isUndefined';\nimport { Hyper } from 'js-xdr';\nimport xdr from '../xdr';\n/**\n * Returns a XDR ManageBuyOfferOp. A \"manage buy offer\" operation creates, updates, or\n * deletes a buy offer.\n * @function\n * @alias Operation.manageBuyOffer\n * @param {object} opts Options object\n * @param {Asset} opts.selling - What you're selling.\n * @param {Asset} opts.buying - What you're buying.\n * @param {string} opts.buyAmount - The total amount you're buying. If 0, deletes the offer.\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `buying` in terms of `selling`.\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\n * @param {number|string} [opts.offerId ] - If `0`, will create a new offer (default). Otherwise, edits an exisiting offer.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\n * @returns {xdr.ManageBuyOfferOp} Manage Buy Offer operation\n */\nexport function manageBuyOffer(opts) {\n  const attributes = {};\n  attributes.selling = opts.selling.toXDRObject();\n  attributes.buying = opts.buying.toXDRObject();\n  if (!this.isValidAmount(opts.buyAmount, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('buyAmount'));\n  }\n  attributes.buyAmount = this._toXDRAmount(opts.buyAmount);\n  if (isUndefined(opts.price)) {\n    throw new TypeError('price argument is required');\n  }\n  attributes.price = this._toXDRPrice(opts.price);\n\n  if (!isUndefined(opts.offerId)) {\n    opts.offerId = opts.offerId.toString();\n  } else {\n    opts.offerId = '0';\n  }\n\n  attributes.offerId = Hyper.fromString(opts.offerId);\n  const manageBuyOfferOp = new xdr.ManageBuyOfferOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.manageBuyOffer(manageBuyOfferOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import isString from 'lodash/isString';\nimport xdr from '../xdr';\nimport BrowserBuffer from '../util/BrowserBuffer';\n\n/**\n * This operation adds data entry to the ledger.\n * @function\n * @alias Operation.manageData\n * @param {object} opts Options object\n * @param {string} opts.name - The name of the data entry.\n * @param {string|Buffer} opts.value - The value of the data entry.\n * @param {string} [opts.source] - The optional source account.\n * @returns {xdr.ManageDataOp} Manage Data operation\n */\nexport function manageData(opts) {\n  const attributes = {};\n\n  if (!(isString(opts.name) && opts.name.length <= 64)) {\n    throw new Error('name must be a string, up to 64 characters');\n  }\n  attributes.dataName = opts.name;\n\n  if (\n    !isString(opts.value) &&\n    !BrowserBuffer.isBuffer(opts.value) &&\n    opts.value !== null\n  ) {\n    throw new Error('value must be a string, BrowserBuffer or null');\n  }\n\n  if (isString(opts.value)) {\n    attributes.dataValue = BrowserBuffer.from(opts.value);\n  } else {\n    attributes.dataValue = opts.value;\n  }\n\n  if (attributes.dataValue !== null && attributes.dataValue.length > 64) {\n    throw new Error('value cannot be longer that 64 bytes');\n  }\n\n  const manageDataOp = new xdr.ManageDataOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.manageData(manageDataOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import isUndefined from 'lodash/isUndefined';\nimport { Hyper } from 'js-xdr';\nimport xdr from '../xdr';\n/**\n * Returns a XDR ManageSellOfferOp. A \"manage sell offer\" operation creates, updates, or\n * deletes an offer.\n * @function\n * @alias Operation.manageSellOffer\n * @param {object} opts Options object\n * @param {Asset} opts.selling - What you're selling.\n * @param {Asset} opts.buying - What you're buying.\n * @param {string} opts.amount - The total amount you're selling. If 0, deletes the offer.\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `selling` in terms of `buying`.\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\n * @param {number|string} [opts.offerId ] - If `0`, will create a new offer (default). Otherwise, edits an exisiting offer.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\n * @returns {xdr.ManageSellOfferOp} Manage Sell Offer operation\n */\nexport function manageSellOffer(opts) {\n  const attributes = {};\n  attributes.selling = opts.selling.toXDRObject();\n  attributes.buying = opts.buying.toXDRObject();\n  if (!this.isValidAmount(opts.amount, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n  attributes.amount = this._toXDRAmount(opts.amount);\n  if (isUndefined(opts.price)) {\n    throw new TypeError('price argument is required');\n  }\n  attributes.price = this._toXDRPrice(opts.price);\n\n  if (!isUndefined(opts.offerId)) {\n    opts.offerId = opts.offerId.toString();\n  } else {\n    opts.offerId = '0';\n  }\n\n  attributes.offerId = Hyper.fromString(opts.offerId);\n  const manageSellOfferOp = new xdr.ManageSellOfferOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.manageSellOffer(manageSellOfferOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\n\n/**\n * Creates a PathPaymentStrictReceive operation.\n *\n * A `PathPaymentStrictReceive` operation sends the specified amount to the\n * destination account. It credits the destination with `destAmount` of\n * `destAsset`, while debiting at most `sendMax` of `sendAsset` from the source.\n * The transfer optionally occurs through a path. XLM payments create the\n * destination account if it does not exist.\n *\n * @function\n * @alias Operation.pathPaymentStrictReceive\n * @see https://developers.stellar.org/docs/start/list-of-operations/#path-payment-strict-receive\n *\n * @param {object}  opts - Options object\n * @param {Asset}   opts.sendAsset    - asset to pay with\n * @param {string}  opts.sendMax      - maximum amount of sendAsset to send\n * @param {string}  opts.destination  - destination account to send to\n * @param {Asset}   opts.destAsset    - asset the destination will receive\n * @param {string}  opts.destAmount   - amount the destination receives\n * @param {Asset[]} opts.path         - array of Asset objects to use as the path\n *\n * @param {string}  [opts.source]     - The source account for the payment.\n *     Defaults to the transaction's source account.\n *\n * @returns {xdr.PathPaymentStrictReceiveOp} the resulting path payment op\n */\nexport function pathPaymentStrictReceive(opts) {\n  switch (true) {\n    case !opts.sendAsset:\n      throw new Error('Must specify a send asset');\n    case !this.isValidAmount(opts.sendMax):\n      throw new TypeError(this.constructAmountRequirementsError('sendMax'));\n    case !opts.destAsset:\n      throw new Error('Must provide a destAsset for a payment operation');\n    case !this.isValidAmount(opts.destAmount):\n      throw new TypeError(this.constructAmountRequirementsError('destAmount'));\n    default:\n      break;\n  }\n\n  const attributes = {};\n  attributes.sendAsset = opts.sendAsset.toXDRObject();\n  attributes.sendMax = this._toXDRAmount(opts.sendMax);\n  try {\n    attributes.destination = decodeAddressToMuxedAccount(opts.destination);\n  } catch (e) {\n    throw new Error('destination is invalid');\n  }\n\n  attributes.destAsset = opts.destAsset.toXDRObject();\n  attributes.destAmount = this._toXDRAmount(opts.destAmount);\n\n  const path = opts.path ? opts.path : [];\n  attributes.path = path.map((x) => x.toXDRObject());\n\n  const payment = new xdr.PathPaymentStrictReceiveOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.pathPaymentStrictReceive(payment);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\n\n/**\n * Creates a PathPaymentStrictSend operation.\n *\n * A `PathPaymentStrictSend` operation sends the specified amount to the\n * destination account crediting at least `destMin` of `destAsset`, optionally\n * through a path. XLM payments create the destination account if it does not\n * exist.\n *\n * @function\n * @alias Operation.pathPaymentStrictSend\n * @see https://developers.stellar.org/docs/start/list-of-operations/#path-payment-strict-send\n *\n * @param {object}  opts - Options object\n * @param {Asset}   opts.sendAsset    - asset to pay with\n * @param {string}  opts.sendAmount   - amount of sendAsset to send (excluding fees)\n * @param {string}  opts.destination  - destination account to send to\n * @param {Asset}   opts.destAsset    - asset the destination will receive\n * @param {string}  opts.destMin      - minimum amount of destAsset to be receive\n * @param {Asset[]} opts.path         - array of Asset objects to use as the path\n *\n * @param {string}  [opts.source]     - The source account for the payment.\n *     Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation}   the resulting path payment operation\n *     (xdr.PathPaymentStrictSendOp)\n */\nexport function pathPaymentStrictSend(opts) {\n  switch (true) {\n    case !opts.sendAsset:\n      throw new Error('Must specify a send asset');\n    case !this.isValidAmount(opts.sendAmount):\n      throw new TypeError(this.constructAmountRequirementsError('sendAmount'));\n    case !opts.destAsset:\n      throw new Error('Must provide a destAsset for a payment operation');\n    case !this.isValidAmount(opts.destMin):\n      throw new TypeError(this.constructAmountRequirementsError('destMin'));\n    default:\n      break;\n  }\n\n  const attributes = {};\n  attributes.sendAsset = opts.sendAsset.toXDRObject();\n  attributes.sendAmount = this._toXDRAmount(opts.sendAmount);\n  try {\n    attributes.destination = decodeAddressToMuxedAccount(opts.destination);\n  } catch (e) {\n    throw new Error('destination is invalid');\n  }\n  attributes.destAsset = opts.destAsset.toXDRObject();\n  attributes.destMin = this._toXDRAmount(opts.destMin);\n\n  const path = opts.path ? opts.path : [];\n  attributes.path = path.map((x) => x.toXDRObject());\n\n  const payment = new xdr.PathPaymentStrictSendOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.pathPaymentStrictSend(payment);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\n\n/**\n * Create a payment operation.\n *\n * @function\n * @alias Operation.payment\n * @see https://developers.stellar.org/docs/start/list-of-operations/#payment\n *\n * @param {object}  opts - Options object\n * @param {string}  opts.destination  - destination account ID\n * @param {Asset}   opts.asset        - asset to send\n * @param {string}  opts.amount       - amount to send\n *\n * @param {string}  [opts.source]     - The source account for the payment.\n *     Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation}   The resulting payment operation (xdr.PaymentOp)\n */\nexport function payment(opts) {\n  if (!opts.asset) {\n    throw new Error('Must provide an asset for a payment operation');\n  }\n  if (!this.isValidAmount(opts.amount)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n\n  const attributes = {};\n  try {\n    attributes.destination = decodeAddressToMuxedAccount(opts.destination);\n  } catch (e) {\n    throw new Error('destination is invalid');\n  }\n\n  attributes.asset = opts.asset.toXDRObject();\n  attributes.amount = this._toXDRAmount(opts.amount);\n  const paymentOp = new xdr.PaymentOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.payment(paymentOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import isString from 'lodash/isString';\nimport xdr from '../xdr';\nimport { StrKey } from '../strkey';\nimport { Keypair } from '../keypair';\nimport { Asset } from '../asset';\nimport { LiquidityPoolId } from '../liquidity_pool_id';\nimport BrowserBuffer from '../util/BrowserBuffer';\n/**\n * Create a \"revoke sponsorship\" operation for an account.\n *\n * @function\n * @alias Operation.revokeAccountSponsorship\n * @param {object} opts Options object\n * @param {string} opts.account - The sponsored account ID.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.revokeAccountSponsorship({\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\n * });\n *\n */\nexport function revokeAccountSponsorship(opts = {}) {\n  if (!StrKey.isValidEd25519PublicKey(opts.account)) {\n    throw new Error('account is invalid');\n  }\n\n  const ledgerKey = xdr.LedgerKey.account(\n    new xdr.LedgerKeyAccount({\n      accountId: Keypair.fromPublicKey(opts.account).xdrAccountId()\n    })\n  );\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\n/**\n * Create a \"revoke sponsorship\" operation for a trustline.\n *\n * @function\n * @alias Operation.revokeTrustlineSponsorship\n * @param {object} opts Options object\n * @param {string} opts.account - The account ID which owns the trustline.\n * @param {Asset | LiquidityPoolId} opts.asset - The trustline asset.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.revokeTrustlineSponsorship({\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\n *   asset: new StellarBase.LiquidityPoolId(\n *     'USDUSD',\n *     'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7'\n *   )\n * });\n *\n */\nexport function revokeTrustlineSponsorship(opts = {}) {\n  if (!StrKey.isValidEd25519PublicKey(opts.account)) {\n    throw new Error('account is invalid');\n  }\n\n  let asset;\n  if (opts.asset instanceof Asset) {\n    asset = opts.asset.toTrustLineXDRObject();\n  } else if (opts.asset instanceof LiquidityPoolId) {\n    asset = opts.asset.toXDRObject();\n  } else {\n    throw new TypeError('asset must be an Asset or LiquidityPoolId');\n  }\n\n  const ledgerKey = xdr.LedgerKey.trustline(\n    new xdr.LedgerKeyTrustLine({\n      accountId: Keypair.fromPublicKey(opts.account).xdrAccountId(),\n      asset\n    })\n  );\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\n/**\n * Create a \"revoke sponsorship\" operation for an offer.\n *\n * @function\n * @alias Operation.revokeOfferSponsorship\n * @param {object} opts Options object\n * @param {string} opts.seller - The account ID which created the offer.\n * @param {string} opts.offerId - The offer ID.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.revokeOfferSponsorship({\n *   seller: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\n *   offerId: '1234'\n * });\n *\n */\nexport function revokeOfferSponsorship(opts = {}) {\n  if (!StrKey.isValidEd25519PublicKey(opts.seller)) {\n    throw new Error('seller is invalid');\n  }\n  if (!isString(opts.offerId)) {\n    throw new Error('offerId is invalid');\n  }\n\n  const ledgerKey = xdr.LedgerKey.offer(\n    new xdr.LedgerKeyOffer({\n      sellerId: Keypair.fromPublicKey(opts.seller).xdrAccountId(),\n      offerId: xdr.Int64.fromString(opts.offerId)\n    })\n  );\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\n/**\n * Create a \"revoke sponsorship\" operation for a data entry.\n *\n * @function\n * @alias Operation.revokeDataSponsorship\n * @param {object} opts Options object\n * @param {string} opts.account - The account ID which owns the data entry.\n * @param {string} opts.name - The name of the data entry\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.revokeDataSponsorship({\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\n *   name: 'foo'\n * });\n *\n */\nexport function revokeDataSponsorship(opts = {}) {\n  if (!StrKey.isValidEd25519PublicKey(opts.account)) {\n    throw new Error('account is invalid');\n  }\n  if (!isString(opts.name) || opts.name.length > 64) {\n    throw new Error('name must be a string, up to 64 characters');\n  }\n\n  const ledgerKey = xdr.LedgerKey.data(\n    new xdr.LedgerKeyData({\n      accountId: Keypair.fromPublicKey(opts.account).xdrAccountId(),\n      dataName: opts.name\n    })\n  );\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\n/**\n * Create a \"revoke sponsorship\" operation for a claimable balance.\n *\n * @function\n * @alias Operation.revokeClaimableBalanceSponsorship\n * @param {object} opts Options object\n * @param {string} opts.balanceId - The sponsored claimable balance ID.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.revokeClaimableBalanceSponsorship({\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\n * });\n *\n */\nexport function revokeClaimableBalanceSponsorship(opts = {}) {\n  if (!isString(opts.balanceId)) {\n    throw new Error('balanceId is invalid');\n  }\n\n  const ledgerKey = xdr.LedgerKey.claimableBalance(\n    new xdr.LedgerKeyClaimableBalance({\n      balanceId: xdr.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex')\n    })\n  );\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\n/**\n * Creates a \"revoke sponsorship\" operation for a liquidity pool.\n *\n * @function\n * @alias Operation.revokeLiquidityPoolSponsorship\n * @param {object} opts – Options object.\n * @param {string} opts.liquidityPoolId - The sponsored liquidity pool ID in 'hex' string.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr Operation.\n *\n * @example\n * const op = Operation.revokeLiquidityPoolSponsorship({\n *   liquidityPoolId: 'dd7b1ab831c273310ddbec6f97870aa83c2fbd78ce22aded37ecbf4f3380fac7',\n * });\n *\n */\nexport function revokeLiquidityPoolSponsorship(opts = {}) {\n  if (!isString(opts.liquidityPoolId)) {\n    throw new Error('liquidityPoolId is invalid');\n  }\n\n  const ledgerKey = xdr.LedgerKey.liquidityPool(\n    new xdr.LedgerKeyLiquidityPool({\n      liquidityPoolId: xdr.PoolId.fromXDR(opts.liquidityPoolId, 'hex')\n    })\n  );\n\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\n  const opAttributes = {\n    body: xdr.OperationBody.revokeSponsorship(op)\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n\n/**\n * Create a \"revoke sponsorship\" operation for a signer.\n *\n * @function\n * @alias Operation.revokeSignerSponsorship\n * @param {object} opts Options object\n * @param {string} opts.account - The account ID where the signer sponsorship is being removed from.\n * @param {object} opts.signer - The signer whose sponsorship is being removed.\n * @param {string} [opts.signer.ed25519PublicKey] - The ed25519 public key of the signer.\n * @param {Buffer|string} [opts.signer.sha256Hash] - sha256 hash (Buffer or hex string).\n * @param {Buffer|string} [opts.signer.preAuthTx] - Hash (Buffer or hex string) of transaction.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n * @returns {xdr.Operation} xdr operation\n *\n * @example\n * const op = Operation.revokeSignerSponsorship({\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\n *   signer: {\n *     ed25519PublicKey: 'GCEZWKCA5VLDNRLN3RPRJMRZOX3Z6G5CHCGSNFHEYVXM3XOJMDS674JZ'\n *   }\n * })\n *\n */\nexport function revokeSignerSponsorship(opts = {}) {\n  if (!StrKey.isValidEd25519PublicKey(opts.account)) {\n    throw new Error('account is invalid');\n  }\n  let key;\n  if (opts.signer.ed25519PublicKey) {\n    if (!StrKey.isValidEd25519PublicKey(opts.signer.ed25519PublicKey)) {\n      throw new Error('signer.ed25519PublicKey is invalid.');\n    }\n    const rawKey = StrKey.decodeEd25519PublicKey(opts.signer.ed25519PublicKey);\n\n    key = new xdr.SignerKey.signerKeyTypeEd25519(rawKey);\n  } else if (opts.signer.preAuthTx) {\n    let buffer;\n    if (isString(opts.signer.preAuthTx)) {\n      buffer = BrowserBuffer.from(opts.signer.preAuthTx, 'hex');\n    } else {\n      buffer = opts.signer.preAuthTx;\n    }\n\n    if (!(BrowserBuffer.isBuffer(buffer) && buffer.length === 32)) {\n      throw new Error('signer.preAuthTx must be 32 bytes BrowserBuffer.');\n    }\n\n    key = new xdr.SignerKey.signerKeyTypePreAuthTx(buffer);\n  } else if (opts.signer.sha256Hash) {\n    let buffer;\n    if (isString(opts.signer.sha256Hash)) {\n      buffer = BrowserBuffer.from(opts.signer.sha256Hash, 'hex');\n    } else {\n      buffer = opts.signer.sha256Hash;\n    }\n\n    if (!(BrowserBuffer.isBuffer(buffer) && buffer.length === 32)) {\n      throw new Error('signer.sha256Hash must be 32 bytes BrowserBuffer.');\n    }\n\n    key = new xdr.SignerKey.signerKeyTypeHashX(buffer);\n  } else {\n    throw new Error('signer is invalid');\n  }\n\n  const signer = new xdr.RevokeSponsorshipOpSigner({\n    accountId: Keypair.fromPublicKey(opts.account).xdrAccountId(),\n    signerKey: key\n  });\n\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipSigner(signer);\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","/* eslint-disable no-param-reassign */\n\nimport isUndefined from 'lodash/isUndefined';\nimport isString from 'lodash/isString';\nimport BrowserBuffer from '../util/BrowserBuffer';\n\nimport xdr from '../xdr';\nimport { Keypair } from '../keypair';\nimport { StrKey } from '../strkey';\n\nfunction weightCheckFunction(value, name) {\n  if (value >= 0 && value <= 255) {\n    return true;\n  }\n  throw new Error(`${name} value must be between 0 and 255`);\n}\n\n/**\n * Returns an XDR SetOptionsOp. A \"set options\" operations set or clear account flags,\n * set the account's inflation destination, and/or add new signers to the account.\n * The flags used in `opts.clearFlags` and `opts.setFlags` can be the following:\n *   - `{@link AuthRequiredFlag}`\n *   - `{@link AuthRevocableFlag}`\n *   - `{@link AuthImmutableFlag}`\n *   - `{@link AuthClawbackEnabledFlag}`\n *\n * It's possible to set/clear multiple flags at once using logical or.\n *\n * @function\n * @alias Operation.setOptions\n *\n * @param {object} opts Options object\n * @param {string} [opts.inflationDest] - Set this account ID as the account's inflation destination.\n * @param {(number|string)} [opts.clearFlags] - Bitmap integer for which account flags to clear.\n * @param {(number|string)} [opts.setFlags] - Bitmap integer for which account flags to set.\n * @param {number|string} [opts.masterWeight] - The master key weight.\n * @param {number|string} [opts.lowThreshold] - The sum weight for the low threshold.\n * @param {number|string} [opts.medThreshold] - The sum weight for the medium threshold.\n * @param {number|string} [opts.highThreshold] - The sum weight for the high threshold.\n * @param {object} [opts.signer] - Add or remove a signer from the account. The signer is\n *                                 deleted if the weight is 0. Only one of `ed25519PublicKey`, `sha256Hash`, `preAuthTx` should be defined.\n * @param {string} [opts.signer.ed25519PublicKey] - The ed25519 public key of the signer.\n * @param {Buffer|string} [opts.signer.sha256Hash] - sha256 hash (Buffer or hex string) of preimage that will unlock funds. Preimage should be used as signature of future transaction.\n * @param {Buffer|string} [opts.signer.preAuthTx] - Hash (Buffer or hex string) of transaction that will unlock funds.\n * @param {string} [opts.signer.ed25519SignedPayload] - Signed payload signer (ed25519 public key + raw payload) for atomic transaction signature disclosure.\n * @param {number|string} [opts.signer.weight] - The weight of the new signer (0 to delete or 1-255)\n * @param {string} [opts.homeDomain] - sets the home domain used for reverse federation lookup.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n *\n * @returns {xdr.SetOptionsOp}  XDR operation\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\n */\nexport function setOptions(opts) {\n  const attributes = {};\n\n  if (opts.inflationDest) {\n    if (!StrKey.isValidEd25519PublicKey(opts.inflationDest)) {\n      throw new Error('inflationDest is invalid');\n    }\n    attributes.inflationDest = Keypair.fromPublicKey(\n      opts.inflationDest\n    ).xdrAccountId();\n  }\n\n  attributes.clearFlags = this._checkUnsignedIntValue(\n    'clearFlags',\n    opts.clearFlags\n  );\n  attributes.setFlags = this._checkUnsignedIntValue('setFlags', opts.setFlags);\n  attributes.masterWeight = this._checkUnsignedIntValue(\n    'masterWeight',\n    opts.masterWeight,\n    weightCheckFunction\n  );\n  attributes.lowThreshold = this._checkUnsignedIntValue(\n    'lowThreshold',\n    opts.lowThreshold,\n    weightCheckFunction\n  );\n  attributes.medThreshold = this._checkUnsignedIntValue(\n    'medThreshold',\n    opts.medThreshold,\n    weightCheckFunction\n  );\n  attributes.highThreshold = this._checkUnsignedIntValue(\n    'highThreshold',\n    opts.highThreshold,\n    weightCheckFunction\n  );\n\n  if (!isUndefined(opts.homeDomain) && !isString(opts.homeDomain)) {\n    throw new TypeError('homeDomain argument must be of type String');\n  }\n  attributes.homeDomain = opts.homeDomain;\n\n  if (opts.signer) {\n    const weight = this._checkUnsignedIntValue(\n      'signer.weight',\n      opts.signer.weight,\n      weightCheckFunction\n    );\n    let key;\n\n    let setValues = 0;\n\n    if (opts.signer.ed25519PublicKey) {\n      if (!StrKey.isValidEd25519PublicKey(opts.signer.ed25519PublicKey)) {\n        throw new Error('signer.ed25519PublicKey is invalid.');\n      }\n      const rawKey = StrKey.decodeEd25519PublicKey(\n        opts.signer.ed25519PublicKey\n      );\n\n      // eslint-disable-next-line new-cap\n      key = new xdr.SignerKey.signerKeyTypeEd25519(rawKey);\n      setValues += 1;\n    }\n\n    if (opts.signer.preAuthTx) {\n      if (isString(opts.signer.preAuthTx)) {\n        opts.signer.preAuthTx = BrowserBuffer.from(opts.signer.preAuthTx, 'hex');\n      }\n\n      if (\n        !(\n          BrowserBuffer.isBuffer(opts.signer.preAuthTx) &&\n          opts.signer.preAuthTx.length === 32\n        )\n      ) {\n        throw new Error('signer.preAuthTx must be 32 bytes BrowserBuffer.');\n      }\n\n      // eslint-disable-next-line new-cap\n      key = new xdr.SignerKey.signerKeyTypePreAuthTx(opts.signer.preAuthTx);\n      setValues += 1;\n    }\n\n    if (opts.signer.sha256Hash) {\n      if (isString(opts.signer.sha256Hash)) {\n        opts.signer.sha256Hash = BrowserBuffer.from(opts.signer.sha256Hash, 'hex');\n      }\n\n      if (\n        !(\n          BrowserBuffer.isBuffer(opts.signer.sha256Hash) &&\n          opts.signer.sha256Hash.length === 32\n        )\n      ) {\n        throw new Error('signer.sha256Hash must be 32 bytes BrowserBuffer.');\n      }\n\n      // eslint-disable-next-line new-cap\n      key = new xdr.SignerKey.signerKeyTypeHashX(opts.signer.sha256Hash);\n      setValues += 1;\n    }\n\n    if (opts.signer.ed25519SignedPayload) {\n      if (!StrKey.isValidSignedPayload(opts.signer.ed25519SignedPayload)) {\n        throw new Error('signer.ed25519SignedPayload is invalid.');\n      }\n      const rawKey = StrKey.decodeSignedPayload(\n        opts.signer.ed25519SignedPayload\n      );\n      const signedPayloadXdr =\n        xdr.SignerKeyEd25519SignedPayload.fromXDR(rawKey);\n\n      // eslint-disable-next-line new-cap\n      key = xdr.SignerKey.signerKeyTypeEd25519SignedPayload(signedPayloadXdr);\n      setValues += 1;\n    }\n\n    if (setValues !== 1) {\n      throw new Error(\n        'Signer object must contain exactly one of signer.ed25519PublicKey, signer.sha256Hash, signer.preAuthTx.'\n      );\n    }\n\n    attributes.signer = new xdr.Signer({ key, weight });\n  }\n\n  const setOptionsOp = new xdr.SetOptionsOp(attributes);\n\n  const opAttributes = {};\n  opAttributes.body = xdr.OperationBody.setOptions(setOptionsOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from '../xdr';\nimport { Keypair } from '../keypair';\n\n/**\n * Creates a trustline flag configuring operation.\n *\n * For the flags, set them to true to enable them and false to disable them. Any\n * unmodified operations will be marked `undefined` in the result.\n *\n * Note that you can only **clear** the clawbackEnabled flag set; it must be set\n * account-wide via operations.SetOptions (setting\n * xdr.AccountFlags.clawbackEnabled).\n *\n * @function\n * @alias Operation.setTrustLineFlags\n *\n * @param {object} opts - Options object\n * @param {string} opts.trustor     - the account whose trustline this is\n * @param {Asset}  opts.asset       - the asset on the trustline\n * @param {object} opts.flags       - the set of flags to modify\n *\n * @param {bool}   [opts.flags.authorized]  - authorize account to perform\n *     transactions with its credit\n * @param {bool}   [opts.flags.authorizedToMaintainLiabilities] - authorize\n *     account to maintain and reduce liabilities for its credit\n * @param {bool}   [opts.flags.clawbackEnabled] - stop claimable balances on\n *     this trustlines from having clawbacks enabled (this flag can only be set\n *     to false!)\n * @param {string} [opts.source] - The source account for the operation.\n *                                 Defaults to the transaction's source account.\n *\n * @note You must include at least one flag.\n *\n * @return {xdr.SetTrustLineFlagsOp}\n *\n * @link xdr.AccountFlags\n * @link xdr.TrustLineFlags\n * @see https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#set-trustline-flags-operation\n * @see https://developers.stellar.org/docs/start/list-of-operations/#set-options\n */\nexport function setTrustLineFlags(opts = {}) {\n  const attributes = {};\n\n  if (typeof opts.flags !== 'object' || Object.keys(opts.flags).length === 0) {\n    throw new Error('opts.flags must be a map of boolean flags to modify');\n  }\n\n  const mapping = {\n    authorized: xdr.TrustLineFlags.authorizedFlag(),\n    authorizedToMaintainLiabilities:\n      xdr.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(),\n    clawbackEnabled: xdr.TrustLineFlags.trustlineClawbackEnabledFlag()\n  };\n\n  /* eslint no-bitwise: \"off\" */\n  let clearFlag = 0;\n  let setFlag = 0;\n\n  Object.keys(opts.flags).forEach((flagName) => {\n    if (!Object.prototype.hasOwnProperty.call(mapping, flagName)) {\n      throw new Error(`unsupported flag name specified: ${flagName}`);\n    }\n\n    const flagValue = opts.flags[flagName];\n    const bit = mapping[flagName].value;\n    if (flagValue === true) {\n      setFlag |= bit;\n    } else if (flagValue === false) {\n      clearFlag |= bit;\n    }\n  });\n\n  attributes.trustor = Keypair.fromPublicKey(opts.trustor).xdrAccountId();\n  attributes.asset = opts.asset.toXDRObject();\n  attributes.clearFlags = clearFlag;\n  attributes.setFlags = setFlag;\n\n  const opAttributes = {\n    body: xdr.OperationBody.setTrustLineFlags(\n      new xdr.SetTrustLineFlagsOp(attributes)\n    )\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new xdr.Operation(opAttributes);\n}\n","import xdr from './xdr';\nimport { StrKey, encodeCheck, decodeCheck } from './strkey';\n\n/**\n * A container class with helpers to convert between signer keys\n * (`xdr.SignerKey`) and {@link StrKey}s.\n *\n * It's primarly used for manipulating the `extraSigners` precondition on a\n * {@link Transaction}.\n *\n * @see {@link TransactionBuilder.setExtraSigners}\n */\nexport class SignerKey {\n  /**\n   * Decodes a StrKey address into an xdr.SignerKey instance.\n   *\n   * Only ED25519 public keys (G...), pre-auth transactions (T...), hashes\n   * (H...), and signed payloads (P...) can be signer keys.\n   *\n   * @param   {string} address  a StrKey-encoded signer address\n   * @returns {xdr.SignerKey}\n   */\n  static decodeAddress(address) {\n    const signerKeyMap = {\n      ed25519PublicKey: xdr.SignerKey.signerKeyTypeEd25519,\n      preAuthTx: xdr.SignerKey.signerKeyTypePreAuthTx,\n      sha256Hash: xdr.SignerKey.signerKeyTypeHashX,\n      signedPayload: xdr.SignerKey.signerKeyTypeEd25519SignedPayload\n    };\n\n    const vb = StrKey.getVersionByteForPrefix(address);\n    const encoder = signerKeyMap[vb];\n    if (!encoder) {\n      throw new Error(`invalid signer key type (${vb})`);\n    }\n\n    const raw = decodeCheck(vb, address);\n    switch (vb) {\n      case 'signedPayload':\n        return encoder(\n          new xdr.SignerKeyEd25519SignedPayload({\n            ed25519: raw.slice(0, 32),\n            payload: raw.slice(32 + 4)\n          })\n        );\n\n      case 'ed25519PublicKey': // falls through\n      case 'preAuthTx': // falls through\n      case 'sha256Hash': // falls through\n      default:\n        return encoder(raw);\n    }\n  }\n\n  /**\n   * Encodes a signer key into its StrKey equivalent.\n   *\n   * @param   {xdr.SignerKey} signerKey   the signer\n   * @returns {string} the StrKey representation of the signer\n   */\n  static encodeSignerKey(signerKey) {\n    let strkeyType;\n    let raw;\n\n    switch (signerKey.switch()) {\n      case xdr.SignerKeyType.signerKeyTypeEd25519():\n        strkeyType = 'ed25519PublicKey';\n        raw = signerKey.value();\n        break;\n\n      case xdr.SignerKeyType.signerKeyTypePreAuthTx():\n        strkeyType = 'preAuthTx';\n        raw = signerKey.value();\n        break;\n\n      case xdr.SignerKeyType.signerKeyTypeHashX():\n        strkeyType = 'sha256Hash';\n        raw = signerKey.value();\n        break;\n\n      case xdr.SignerKeyType.signerKeyTypeEd25519SignedPayload():\n        strkeyType = 'signedPayload';\n        raw = signerKey.ed25519SignedPayload().toXDR('raw');\n        break;\n\n      default:\n        throw new Error(`invalid SignerKey (type: ${signerKey.switch()})`);\n    }\n\n    return encodeCheck(strkeyType, raw);\n  }\n}\n","import BrowserBuffer from './util/BrowserBuffer'\n//  This module provides the signing functionality used by the stellar network\n//  The code below may look a little strange... this is because we try to provide\n//  the most efficient signing method possible.  First, we try to load the\n//  native `sodium-native` package for node.js environments, and if that fails we\n//  fallback to `tweetnacl`\n\nconst actualMethods = {};\n\n/**\n * Use this flag to check if fast signing (provided by `sodium-native` package) is available.\n * If your app is signing a large number of transaction or verifying a large number\n * of signatures make sure `sodium-native` package is installed.\n */\nexport const FastSigning = checkFastSigning();\n\nexport function sign(data, secretKey) {\n  return actualMethods.sign(data, secretKey);\n}\n\nexport function verify(data, signature, publicKey) {\n  return actualMethods.verify(data, signature, publicKey);\n}\n\nexport function generate(secretKey) {\n  return actualMethods.generate(secretKey);\n}\n\nfunction checkFastSigning() {\n  return typeof window === 'undefined'\n    ? checkFastSigningNode()\n    : checkFastSigningBrowser();\n}\n\nfunction checkFastSigningNode() {\n  // NOTE: we use commonjs style require here because es6 imports\n  // can only occur at the top level.  thanks, obama.\n  let sodium;\n  try {\n    // eslint-disable-next-line\n    sodium = require('sodium-native');\n  } catch (err) {\n    return checkFastSigningBrowser();\n  }\n\n  if (!Object.keys(sodium).length) {\n    return checkFastSigningBrowser();\n  }\n\n  actualMethods.generate = (secretKey) => {\n    const pk = BrowserBuffer.alloc(sodium.crypto_sign_PUBLICKEYBYTES);\n    const sk = BrowserBuffer.alloc(sodium.crypto_sign_SECRETKEYBYTES);\n    sodium.crypto_sign_seed_keypair(pk, sk, secretKey);\n    return pk;\n  };\n\n  actualMethods.sign = (data, secretKey) => {\n    data = BrowserBuffer.from(data);\n    const signature = BrowserBuffer.alloc(sodium.crypto_sign_BYTES);\n    sodium.crypto_sign_detached(signature, data, secretKey);\n    return signature;\n  };\n\n  actualMethods.verify = (data, signature, publicKey) => {\n    data = BrowserBuffer.from(data);\n    try {\n      return sodium.crypto_sign_verify_detached(signature, data, publicKey);\n    } catch (e) {\n      return false;\n    }\n  };\n\n  return true;\n}\n\nfunction checkFastSigningBrowser() {\n  // fallback to `tweetnacl` if we're in the browser or\n  // if there was a failure installing `sodium-native`\n  // eslint-disable-next-line\n  const nacl = require('tweetnacl');\n\n  actualMethods.generate = (secretKey) => {\n    const secretKeyUint8 = new BrowserBuffer(secretKey);\n    const naclKeys = nacl.sign.keyPair.fromSeed(secretKeyUint8);\n    return BrowserBuffer.from(naclKeys.publicKey);\n  };\n\n  actualMethods.sign = (data, secretKey) => {\n    data = BrowserBuffer.from(data);\n    data = new BrowserBuffer(data.toJSON().data);\n    secretKey = new BrowserBuffer(secretKey.toJSON().data);\n\n    const signature = nacl.sign.detached(data, secretKey);\n\n    return BrowserBuffer.from(signature);\n  };\n\n  actualMethods.verify = (data, signature, publicKey) => {\n    data = BrowserBuffer.from(data);\n    data = new BrowserBuffer(data.toJSON().data);\n    signature = new BrowserBuffer(signature.toJSON().data);\n    publicKey = new BrowserBuffer(publicKey.toJSON().data);\n\n    return nacl.sign.detached.verify(data, signature, publicKey);\n  };\n\n  return false;\n}\n","\nimport base32 from 'base32.js';\nimport crc from 'crc';\nimport isUndefined from 'lodash/isUndefined';\nimport isNull from 'lodash/isNull';\nimport isString from 'lodash/isString';\nimport { verifyChecksum } from './util/checksum';\nimport BrowserBuffer from './util/BrowserBuffer';\n\nconst versionBytes = {\n  ed25519PublicKey: 6 << 3, // G (when encoded in base32)\n  ed25519SecretSeed: 18 << 3, // S\n  med25519PublicKey: 12 << 3, // M\n  preAuthTx: 19 << 3, // T\n  sha256Hash: 23 << 3, // X\n  signedPayload: 15 << 3 // P\n};\n\nconst strkeyTypes = {\n  G: 'ed25519PublicKey',\n  S: 'ed25519SecretSeed',\n  M: 'med25519PublicKey',\n  T: 'preAuthTx',\n  X: 'sha256Hash',\n  P: 'signedPayload'\n};\n\n/**\n * StrKey is a helper class that allows encoding and decoding Stellar keys\n * to/from strings, i.e. between their binary (Buffer, xdr.PublicKey, etc.) and\n * string (i.e. \"GABCD...\", etc.) representations.\n */\nexport class StrKey {\n  /**\n   * Encodes `data` to strkey ed25519 public key.\n   *\n   * @param   {Buffer} data   raw data to encode\n   * @returns {string}        \"G...\" representation of the key\n   */\n  static encodeEd25519PublicKey(data) {\n    console.log('data in encodeEd25519PublicKey', data)\n    return encodeCheck('ed25519PublicKey', data);\n  }\n\n  /**\n   * Decodes strkey ed25519 public key to raw data.\n   *\n   * If the parameter is a muxed account key (\"M...\"), this will only encode it\n   * as a basic Ed25519 key (as if in \"G...\" format).\n   *\n   * @param   {string} data   \"G...\" (or \"M...\") key representation to decode\n   * @returns {Buffer}        raw key\n   */\n  static decodeEd25519PublicKey(data) {\n    return decodeCheck('ed25519PublicKey', data);\n  }\n\n  /**\n   * Returns true if the given Stellar public key is a valid ed25519 public key.\n   * @param {string} publicKey public key to check\n   * @returns {boolean}\n   */\n  static isValidEd25519PublicKey(publicKey) {\n    console.log(publicKey, 'publicKey in isvalidEd25519PublicKey')\n    return isValid('ed25519PublicKey', publicKey);\n  }\n\n  /**\n   * Encodes data to strkey ed25519 seed.\n   * @param {Buffer} data data to encode\n   * @returns {string}\n   */\n  static encodeEd25519SecretSeed(data) {\n    return encodeCheck('ed25519SecretSeed', data);\n  }\n\n  /**\n   * Decodes strkey ed25519 seed to raw data.\n   * @param {string} address data to decode\n   * @returns {Buffer}\n   */\n  static decodeEd25519SecretSeed(address) {\n    return decodeCheck('ed25519SecretSeed', address);\n  }\n\n  /**\n   * Returns true if the given Stellar secret key is a valid ed25519 secret seed.\n   * @param {string} seed seed to check\n   * @returns {boolean}\n   */\n  static isValidEd25519SecretSeed(seed) {\n    return isValid('ed25519SecretSeed', seed);\n  }\n\n  /**\n   * Encodes data to strkey med25519 public key.\n   * @param {Buffer} data data to encode\n   * @returns {string}\n   */\n  static encodeMed25519PublicKey(data) {\n    return encodeCheck('med25519PublicKey', data);\n  }\n\n  /**\n   * Decodes strkey med25519 public key to raw data.\n   * @param {string} address data to decode\n   * @returns {Buffer}\n   */\n  static decodeMed25519PublicKey(address) {\n    return decodeCheck('med25519PublicKey', address);\n  }\n\n  /**\n   * Returns true if the given Stellar public key is a valid med25519 public key.\n   * @param {string} publicKey public key to check\n   * @returns {boolean}\n   */\n  static isValidMed25519PublicKey(publicKey) {\n    return isValid('med25519PublicKey', publicKey);\n  }\n\n  /**\n   * Encodes data to strkey preAuthTx.\n   * @param {Buffer} data data to encode\n   * @returns {string}\n   */\n  static encodePreAuthTx(data) {\n    return encodeCheck('preAuthTx', data);\n  }\n\n  /**\n   * Decodes strkey PreAuthTx to raw data.\n   * @param {string} address data to decode\n   * @returns {Buffer}\n   */\n  static decodePreAuthTx(address) {\n    return decodeCheck('preAuthTx', address);\n  }\n\n  /**\n   * Encodes data to strkey sha256 hash.\n   * @param {Buffer} data data to encode\n   * @returns {string}\n   */\n  static encodeSha256Hash(data) {\n    return encodeCheck('sha256Hash', data);\n  }\n\n  /**\n   * Decodes strkey sha256 hash to raw data.\n   * @param {string} address data to decode\n   * @returns {Buffer}\n   */\n  static decodeSha256Hash(address) {\n    return decodeCheck('sha256Hash', address);\n  }\n\n  /**\n   * Encodes raw data to strkey signed payload (P...).\n   * @param   {Buffer} data  data to encode\n   * @returns {string}\n   */\n  static encodeSignedPayload(data) {\n    return encodeCheck('signedPayload', data);\n  }\n\n  /**\n   * Decodes strkey signed payload (P...) to raw data.\n   * @param   {string} address  address to decode\n   * @returns {Buffer}\n   */\n  static decodeSignedPayload(address) {\n    return decodeCheck('signedPayload', address);\n  }\n\n  /**\n   * Checks validity of alleged signed payload (P...) strkey address.\n   * @param   {string} address  signer key to check\n   * @returns {boolean}\n   */\n  static isValidSignedPayload(address) {\n    return isValid('signedPayload', address);\n  }\n\n  static getVersionByteForPrefix(address) {\n    return strkeyTypes[address[0]];\n  }\n}\n\n/**\n * Sanity-checks whether or not a strkey *appears* valid.\n *\n * @param  {string}  versionByteName the type of strkey to expect in `encoded`\n * @param  {string}  encoded         the strkey to validate\n *\n * @return {Boolean} whether or not the `encoded` strkey appears valid for the\n *     `versionByteName` strkey type (see `versionBytes`, above).\n *\n * @note This isn't a *definitive* check of validity, but rather a best-effort\n *     check based on (a) input length, (b) whether or not it can be decoded,\n *     and (c) output length.\n */\nfunction isValid(versionByteName, encoded) {\n  console.log(encoded, 'encoded in isValid')\n  console.log(typeof encoded, 'typeof encoded in isValid')\n  if (!isString(encoded)) {\n    return false;\n  }\n  console.log(versionByteName, 'versionByteName in isValid')\n  // basic length checks on the strkey lengths\n  switch (versionByteName) {\n    \n    case 'ed25519PublicKey': // falls through\n    case 'ed25519SecretSeed': // falls through\n    case 'preAuthTx': // falls through\n    case 'sha256Hash':\n      if (encoded.length !== 56) {\n        return false;\n      }\n      break;\n\n    case 'med25519PublicKey':\n      if (encoded.length !== 69) {\n        return false;\n      }\n      break;\n\n    case 'signedPayload':\n      if (encoded.length < 56 || encoded.length > 165) {\n        return false;\n      }\n      break;\n\n    default:\n      return false;\n  }\n\n  let decoded = '';\n  try {\n    decoded = decodeCheck(versionByteName, encoded);\n    console.log('back from decoded is,', decoded)\n  } catch (err) {\n    console.log('there was an error in decodeCheck, and it is', err)\n    return false;\n  }\n\n  // basic length checks on the resulting buffer sizes\n  switch (versionByteName) {\n    case 'ed25519PublicKey': // falls through\n    case 'ed25519SecretSeed': // falls through\n    case 'preAuthTx': // falls through\n    case 'sha256Hash':\n      return decoded.length === 32;\n\n    case 'med25519PublicKey':\n      return decoded.length === 40; // +8 bytes for the ID\n\n    case 'signedPayload':\n      return (\n        // 32 for the signer, +4 for the payload size, then either +4 for the\n        // min or +64 for the max payload\n        decoded.length >= 32 + 4 + 4 && decoded.length <= 32 + 4 + 64\n      );\n\n    default:\n      return false;\n  }\n}\n\nexport function decodeCheck(versionByteName, encoded) {\n  console.log(encoded, 'encoded in decodeCheck')\n  console.log(typeof encoded, 'typeof encoded in decodeCheck')\n\n  if (!isString(encoded)) {\n    console.log('the type was invalid in decodeCheck')\n    throw new TypeError('encoded argument must be of type String');\n  }\n\n  const decoded = base32.decode(encoded);\n  const versionByte = decoded[0];\n  const payload = decoded.slice(0, -2);\n  const data = payload.slice(1);\n  const checksum = decoded.slice(-2);\nconsole.log(decoded, versionByte, payload, data, checksum, 'decoded, versionByte, payload, data, checksum in decodeCheck')\nconsole.log(`versionByte: ${versionByte}\\n versionByteName: ${versionByteName}\\n encoded: ${encoded}\\n decoded: ${decoded}\\n payload: ${payload}\\n data: ${data}\\n checksum: ${checksum}`)\n  if (encoded !== base32.encode(decoded)) {\n    console.log('there was an error with base32.encode in decodeCheck')\n    throw new Error('invalid encoded string');\n  }\n\n  const expectedVersion = versionBytes[versionByteName];\n  console.log(expectedVersion, 'expectedVersion in decodeCheck')\n  if (isUndefined(expectedVersion)) {\n    let err =  `${versionByteName} is not a valid version byte name. ` +\n    `Expected one of ${Object.keys(versionBytes).join(', ')}`;\n    console.log(err, 'err in decodeCheck')\n    throw new Error(err);\n  }\n\n  if (versionByte !== expectedVersion) {\n    let err = `invalid version byte. expected ${expectedVersion}, got ${versionByte}`;\n    console.log(err, 'err in decodeCheck')\n    throw new Error(err);\n  }\n\n  const expectedChecksum = calculateChecksum(payload);\n  console.log(expectedChecksum, 'expectedChecksum in decodeCheck')\n  console.log(expectedChecksum.toString(), 'expectedChecksum.tostring in decodeCheck')\n  if (!verifyChecksum(expectedChecksum, checksum)) {\n    console.log(`in DecodeCheck - invalid checksum. expected ${expectedChecksum}, got ${checksum}`)\n    throw new Error(`invalid checksum`);\n  }\nconst returndata = BrowserBuffer.from(data)\n  console.log('the return data in decodecheck is', returndata)\n  return returndata;\n}\n\nexport function encodeCheck(versionByteName, data) {\n  console.log('in the encodeCheck function')\n  console.log(data, 'data in encodeCheck')\n  if (isNull(data) || isUndefined(data)) {\n    throw new Error('cannot encode null data');\n  }\n\n  const versionByte = versionBytes[versionByteName];\n\n  if (isUndefined(versionByte)) {\n    throw new Error(\n      `${versionByteName} is not a valid version byte name. ` +\n        `Expected one of ${Object.keys(versionBytes).join(', ')}`\n    );\n  }\n  data = BrowserBuffer.from(data);\n\n  const versionBuffer = BrowserBuffer.from([versionByte]);\n  const payload = BrowserBuffer.concat([versionBuffer, data]);\n  const checksum = calculateChecksum(payload);\n  const unencoded = BrowserBuffer.concat([payload, checksum]);\nconsole.log(versionBuffer, 'versionBuffer in encodeCheck\\n', payload, 'payload in encodeCheck\\n', checksum, 'checksum in encodeCheck\\n', unencoded, 'unencoded in encodeCheck\\n')\n  return base32.encode(unencoded);\n}\n\n// Computes the CRC16-XModem checksum of `payload` in little-endian order\nfunction calculateChecksum(payload) {\n  const bold = \"font-weight: bold\";\nconst normal = \"font-weight: normal\";\n  console.log(payload)\n  console.log('%cpayload in calculateChecksum%c', bold, normal); // <Buffer 30 73 76 fd e8 8e 4c d6 1c c0 fb 29 4a 17 86 b3 f1 d0 61 f5 f2 f1 ca 57 46 5f aa 93 22 11 b9 46 d6> payload in calculateChecksum\n  console.log(typeof payload, 'typeof payload in calculateChecksum') // object typeof payload in calculateChecksum\n  const payloadcopy = BrowserBuffer.from(payload);\n  console.log(typeof payloadcopy, 'typeof payloadcopy in calculateChecksum') // object typeof payloadcopy in calculateChecksum\n  console.log(payloadcopy, 'payload copy')\n  \n  const checksum = BrowserBuffer.alloc(2);\n\n  console.log('checksum after alloc', checksum) // <Buffer 00 00> checksum after alloc\n  const crccalc = crc.crc16xmodem(payload);\n  console.log(crccalc, 'crccalc in calculateChecksum') // 26624 crccalc in calculateChecksum\n  checksum.writeUInt16LE(crc.crc16xmodem(payload), 0); \n  console.log(checksum, 'checksum in calculateChecksumafter writeUInt16LE'); // <Buffer 00 68> checksum in calculateChecksumafter writeUInt16LE\n  console.log('buf to string output', checksum.toString()) // 0068 buf to string output\n  // const checksum3 = calculateChecksum2(payload);\n  const checksum2 = calculateChecksum2(payloadcopy);\n  \n  console.log('checksum2 after calculateChecksum2', checksum2)\n  \n  // try the new way\n\n  \n\n  \n  return checksum;\n}\n\nfunction calculateChecksum2(payload) {\n  console.log(payload, 'payload in calculateChecksum2')\n  const crcTable = [\n    0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50A5, 0x60C6, 0x70E7,\n    0x8108, 0x9129, 0xA14A, 0xB16B, 0xC18C, 0xD1AD, 0xE1CE, 0xF1EF,\n    0x1231, 0x0210, 0x3273, 0x2252, 0x52B5, 0x4294, 0x72F7, 0x62D6,\n    0x9339, 0x8318, 0xB37B, 0xA35A, 0xD3BD, 0xC39C, 0xF3FF, 0xE3DE,\n    0x2462, 0x3443, 0x0420, 0x1401, 0x64E6, 0x74C7, 0x44A4, 0x5485,\n    0xA56A, 0xB54B, 0x8528, 0x9509, 0xE5EE, 0xF5CF, 0xC5AC, 0xD58D,\n    0x3653, 0x2672, 0x1611, 0x0630, 0x76D7, 0x66F6, 0x5695, 0x46B4,\n    0xB75B, 0xA77A, 0x9719, 0x8738, 0xF7DF, 0xE7FE, 0xD79D, 0xC7BC,\n    0x48C4, 0x58E5, 0x6886, 0x78A7, 0x0840, 0x1861, 0x2802, 0x3823,\n    0xC9CC, 0xD9ED, 0xE98E, 0xF9AF, 0x8948, 0x9969, 0xA90A, 0xB92B,\n    0x5AF5, 0x4AD4, 0x7AB7, 0x6A96, 0x1A71, 0x0A50, 0x3A33, 0x2A12,\n    0xDBFD, 0xCBDC, 0xFBBF, 0xEB9E, 0x9B79, 0x8B58, 0xBB3B, 0xAB1A,\n    0x6CA6, 0x7C87, 0x4CE4, 0x5CC5, 0x2C22, 0x3C03, 0x0C60, 0x1C41,\n    0xEDAE, 0xFD8F, 0xCDEC, 0xDDCD, 0xAD2A, 0xBD0B, 0x8D68, 0x9D49,\n    0x7E97, 0x6EB6, 0x5ED5, 0x4EF4, 0x3E13, 0x2E32, 0x1E51, 0x0E70,\n    0xFF9F, 0xEFBE, 0xDFDD, 0xCFFC, 0xBF1B, 0xAF3A, 0x9F59, 0x8F78,\n    0x9188, 0x81A9, 0xB1CA, 0xA1EB, 0xD10C, 0xC12D, 0xF14E, 0xE16F,\n    0x1080, 0x00A1, 0x30C2, 0x20E3, 0x5004, 0x4025, 0x7046, 0x6067,\n    0x83B9, 0x9398, 0xA3FB, 0xB3DA, 0xC33D, 0xD31C, 0xE37F, 0xF35E,\n    0x02B1, 0x1290, 0x22F3, 0x32D2, 0x4235, 0x5214, 0x6277, 0x7256,\n    0xB5EA, 0xA5CB, 0x95A8, 0x8589, 0xF56E, 0xE54F, 0xD52C, 0xC50D,\n    0x34E2, 0x24C3, 0x14A0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405,\n    0xA7DB, 0xB7FA, 0x8799, 0x97B8, 0xE75F, 0xF77E, 0xC71D, 0xD73C,\n    0x26D3, 0x36F2, 0x0691, 0x16B0, 0x6657, 0x7676, 0x4615, 0x5634,\n    0xD94C, 0xC96D, 0xF90E, 0xE92F, 0x99C8, 0x89E9, 0xB98A, 0xA9AB,\n    0x5844, 0x4865, 0x7806, 0x6827, 0x18C0, 0x08E1, 0x3882, 0x28A3,\n    0xCB7D, 0xDB5C, 0xEB3F, 0xFB1E, 0x8BF9, 0x9BD8, 0xABBB, 0xBB9A,\n    0x4A75, 0x5A54, 0x6A37, 0x7A16, 0x0AF1, 0x1AD0, 0x2AB3, 0x3A92,\n    0xFD2E, 0xED0F, 0xDD6C, 0xCD4D, 0xBDAA, 0xAD8B, 0x9DE8, 0x8DC9,\n    0x7C26, 0x6C07, 0x5C64, 0x4C45, 0x3CA2, 0x2C83, 0x1CE0, 0x0CC1,\n    0xEF1F, 0xFF3E, 0xCF5D, 0xDF7C, 0xAF9B, 0xBFBA, 0x8FD9, 0x9FF8,\n    0x6E17, 0x7E36, 0x4E55, 0x5E74, 0x2E93, 0x3EB2, 0x0ED1, 0x1EF0\n  ];\n\n  let crc16 = 0x0;\n\n  for (let i = 0; i < payload.length; i++) {\n    const byte = payload[i];\n    const lookupIndex = (crc16 >> 8) ^ byte;\n    crc16 = (crc16 << 8) ^ crcTable[lookupIndex];\n    crc16 &= 0xffff;\n  }\n\n  const checksum2 = new Uint8Array(2);\n  checksum2[0] = crc16 & 0xff;\n  checksum2[1] = (crc16 >> 8) & 0xff;\n\n  console.log(checksum2, 'checksum2 right before return');\n  return checksum2;\n}\n\n/*\n\nfunction calculateChecksum2(payload) {\n  console.log('in calculateChecksum2', payload)\n  const crcTable = [\n    0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50A5, 0x60C6, 0x70E7,\n    0x8108, 0x9129, 0xA14A, 0xB16B, 0xC18C, 0xD1AD, 0xE1CE, 0xF1EF,\n    0x1231, 0x0210, 0x3273, 0x2252, 0x52B5, 0x4294, 0x72F7, 0x62D6,\n    0x9339, 0x8318, 0xB37B, 0xA35A, 0xD3BD, 0xC39C, 0xF3FF, 0xE3DE,\n    0x2462, 0x3443, 0x0420, 0x1401, 0x64E6, 0x74C7, 0x44A4, 0x5485,\n    0xA56A, 0xB54B, 0x8528, 0x9509, 0xE5EE, 0xF5CF, 0xC5AC, 0xD58D,\n    0x3653, 0x2672, 0x1611, 0x0630, 0x76D7, 0x66F6, 0x5695, 0x46B4,\n    0xB75B, 0xA77A, 0x9719, 0x8738, 0xF7DF, 0xE7FE, 0xD79D, 0xC7BC,\n    0x48C4, 0x58E5, 0x6886, 0x78A7, 0x0840, 0x1861, 0x2802, 0x3823,\n    0xC9CC, 0xD9ED, 0xE98E, 0xF9AF, 0x8948, 0x9969, 0xA90A, 0xB92B,\n    0x5AF5, 0x4AD4, 0x7AB7, 0x6A96, 0x1A71, 0x0A50, 0x3A33, 0x2A12,\n    0xDBFD, 0xCBDC, 0xFBBF, 0xEB9E, 0x9B79, 0x8B58, 0xBB3B, 0xAB1A,\n    0x6CA6, 0x7C87, 0x4CE4, 0x5CC5, 0x2C22, 0x3C03, 0x0C60, 0x1C41,\n    0xEDAE, 0xFD8F, 0xCDEC, 0xDDCD, 0xAD2A, 0xBD0B, 0x8D68, 0x9D49,\n    0x7E97, 0x6EB6, 0x5ED5, 0x4EF4, 0x3E13, 0x2E32, 0x1E51, 0x0E70,\n    0xFF9F, 0xEFBE, 0xDFDD, 0xCFFC, 0xBF1B, 0xAF3A, 0x9F59, 0x8F78,\n    0x9188, 0x81A9, 0xB1CA, 0xA1EB, 0xD10C, 0xC12D, 0xF14E, 0xE16F,\n    0x1080, 0x00A1, 0x30C2, 0x20E3, 0x5004, 0x4025, 0x7046, 0x6067,\n    0x83B9, 0x9398, 0xA3FB, 0xB3DA, 0xC33D, 0xD31C, 0xE37F, 0xF35E,\n    0x02B1, 0x1290, 0x22F3, 0x32D2, 0x4235, 0x5214, 0x6277, 0x7256,\n    0xB5EA, 0xA5CB, 0x95A8, 0x8589, 0xF56E, 0xE54F, 0xD52C, 0xC50D,\n    0x34E2, 0x24C3, 0x14A0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405,\n    0xA7DB, 0xB7FA, 0x8799, 0x97B8, 0xE75F, 0xF77E, 0xC71D, 0xD73C,\n    0x26D3, 0x36F2, 0x0691, 0x16B0, 0x6657, 0x7676, 0x4615, 0x5634,\n    0xD94C, 0xC96D, 0xF90E, 0xE92F, 0x99C8, 0x89E9, 0xB98A, 0xA9AB,\n    0x5844, 0x4865, 0x7806, 0x6827, 0x18C0, 0x08E1, 0x3882, 0x28A3,\n    0xCB7D, 0xDB5C, 0xEB3F, 0xFB1E, 0x8BF9, 0x9BD8, 0xABBB, 0xBB9A,\n    0x4A75, 0x5A54, 0x6A37, 0x7A16, 0x0AF1, 0x1AD0, 0x2AB3, 0x3A92,\n    0xFD2E, 0xED0F, 0xDD6C, 0xCD4D, 0xBDAA, 0xAD8B, 0x9DE8, 0x8DC9,\n    0x7C26, 0x6C07, 0x5C64, 0x4C45, 0x3CA2, 0x2C83, 0x1CE0, 0x0CC1,\n    0xEF1F, 0xFF3E, 0xCF5D, 0xDF7C, 0xAF9B, 0xBFBA, 0x8FD9, 0x9FF8,\n    0x6E17, 0x7E36, 0x4E55, 0x5E74, 0x2E93, 0x3EB2, 0x0ED1, 0x1EF0\n  ];\n\n  let crc16 = 0x0;\n\n  for (let i = 0; i < payload.length; i++) {\n    const byte = payload[i];\n    console.log(byte, 'byte iteration ', i)\n    const lookupIndex = (crc16 >> 8) ^ byte;\n    crc16 = (crc16 << 8) ^ crcTable[lookupIndex];\n    crc16 &= 0xffff;\n  }\n  const checksum2 = new Uint8Array(2);\n  checksum2[0] = crc16 & 0xff;\n  checksum2[1] = (crc16 >> 8) & 0xff;\n  console.log(checksum2, 'checksum2 right before return')\n  console.log(crc16, 'crc16 right before return')\n\n  return checksum2;\n}\n\n*/","import map from 'lodash/map';\n\nimport xdr from './xdr';\nimport { hash } from './hashing';\n\nimport { StrKey } from './strkey';\nimport { Operation } from './operation';\nimport { Memo } from './memo';\nimport { TransactionBase } from './transaction_base';\nimport {\n  extractBaseAddress,\n  encodeMuxedAccountToAddress\n} from './util/decode_encode_muxed_account';\nimport BrowserBuffer from './util/BrowserBuffer';\n\n\n/**\n * Use {@link TransactionBuilder} to build a transaction object. If you have an\n * object or base64-encoded string of the transaction envelope XDR, use {@link\n * TransactionBuilder.fromXDR}.\n *\n * Once a Transaction has been created, its attributes and operations should not\n * be changed. You should only add signatures (using {@link Transaction#sign})\n * to a Transaction object before submitting to the network or forwarding on to\n * additional signers.\n *\n * @constructor\n *\n * @param {string|xdr.TransactionEnvelope} envelope - transaction envelope\n *     object or base64 encoded string\n * @param {string}  [networkPassphrase] - passphrase of the target stellar\n *     network (e.g. \"Public Global Stellar Network ; September 2015\")\n *\n * @extends TransactionBase\n */\nexport class Transaction extends TransactionBase {\n  constructor(envelope, networkPassphrase) {\n    if (typeof envelope === 'string') {\n      const buffer = BrowserBuffer.from(envelope, 'base64');\n      envelope = xdr.TransactionEnvelope.fromXDR(buffer);\n    }\n\n    const envelopeType = envelope.switch();\n    if (\n      !(\n        envelopeType === xdr.EnvelopeType.envelopeTypeTxV0() ||\n        envelopeType === xdr.EnvelopeType.envelopeTypeTx()\n      )\n    ) {\n      throw new Error(\n        `Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ${envelopeType.name}.`\n      );\n    }\n\n    const txEnvelope = envelope.value();\n    const tx = txEnvelope.tx();\n    const fee = tx.fee().toString();\n    const signatures = (txEnvelope.signatures() || []).slice();\n\n    super(tx, signatures, fee, networkPassphrase);\n\n    this._envelopeType = envelopeType;\n    this._memo = tx.memo();\n    this._sequence = tx.seqNum().toString();\n\n    switch (this._envelopeType) {\n      case xdr.EnvelopeType.envelopeTypeTxV0():\n        this._source = StrKey.encodeEd25519PublicKey(\n          this.tx.sourceAccountEd25519()\n        );\n        break;\n      default:\n        this._source = encodeMuxedAccountToAddress(this.tx.sourceAccount());\n        break;\n    }\n\n    let cond = null;\n    let timeBounds = null;\n    switch (this._envelopeType) {\n      case xdr.EnvelopeType.envelopeTypeTxV0():\n        timeBounds = tx.timeBounds();\n        break;\n\n      case xdr.EnvelopeType.envelopeTypeTx():\n        switch (tx.cond().switch()) {\n          case xdr.PreconditionType.precondTime():\n            timeBounds = tx.cond().timeBounds();\n            break;\n\n          case xdr.PreconditionType.precondV2():\n            cond = tx.cond().v2();\n            timeBounds = cond.timeBounds();\n            break;\n\n          default:\n            break;\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    if (timeBounds) {\n      this._timeBounds = {\n        minTime: timeBounds.minTime().toString(),\n        maxTime: timeBounds.maxTime().toString()\n      };\n    }\n\n    if (cond) {\n      const ledgerBounds = cond.ledgerBounds();\n      if (ledgerBounds) {\n        this._ledgerBounds = {\n          minLedger: ledgerBounds.minLedger(),\n          maxLedger: ledgerBounds.maxLedger()\n        };\n      }\n\n      const minSeq = cond.minSeqNum();\n      if (minSeq) {\n        this._minAccountSequence = minSeq.toString();\n      }\n\n      this._minAccountSequenceAge = cond.minSeqAge();\n      this._minAccountSequenceLedgerGap = cond.minSeqLedgerGap();\n      this._extraSigners = cond.extraSigners();\n    }\n\n    const operations = tx.operations() || [];\n    this._operations = map(operations, (op) => Operation.fromXDRObject(op));\n  }\n\n  /**\n   * @type {object}\n   * @property {string} 64 bit unix timestamp\n   * @property {string} 64 bit unix timestamp\n   * @readonly\n   */\n  get timeBounds() {\n    return this._timeBounds;\n  }\n  set timeBounds(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {object}\n   * @property {number} minLedger - smallest ledger bound (uint32)\n   * @property {number} maxLedger - largest ledger bound (or 0 for inf)\n   * @readonly\n   */\n  get ledgerBounds() {\n    return this._ledgerBounds;\n  }\n  set ledgerBounds(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {string} 64 bit account sequence\n   * @readonly\n   */\n  get minAccountSequence() {\n    return this._minAccountSequence;\n  }\n  set minAccountSequence(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {number} 64 bit number of seconds\n   * @readonly\n   */\n  get minAccountSequenceAge() {\n    return this._minAccountSequenceAge;\n  }\n  set minAccountSequenceAge(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {number} 32 bit number of ledgers\n   * @readonly\n   */\n  get minAccountSequenceLedgerGap() {\n    return this._minAccountSequenceLedgerGap;\n  }\n  set minAccountSequenceLedgerGap(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {string[]}   array of extra signers (@{link StrKey}s)\n   * @readonly\n   */\n  get extraSigners() {\n    return this._extraSigners;\n  }\n  set extraSigners(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get sequence() {\n    return this._sequence;\n  }\n\n  set sequence(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get source() {\n    return this._source;\n  }\n\n  set source(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {Array.<xdr.Operation>}\n   * @readonly\n   */\n  get operations() {\n    return this._operations;\n  }\n\n  set operations(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get memo() {\n    return Memo.fromXDRObject(this._memo);\n  }\n\n  set memo(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * Returns the \"signature base\" of this transaction, which is the value\n   * that, when hashed, should be signed to create a signature that\n   * validators on the Stellar Network will accept.\n   *\n   * It is composed of a 4 prefix bytes followed by the xdr-encoded form\n   * of this transaction.\n   * @returns {Buffer}\n   */\n  signatureBase() {\n    let tx = this.tx;\n\n    // Backwards Compatibility: Use ENVELOPE_TYPE_TX to sign ENVELOPE_TYPE_TX_V0\n    // we need a Transaction to generate the signature base\n    if (this._envelopeType === xdr.EnvelopeType.envelopeTypeTxV0()) {\n      tx = xdr.Transaction.fromXDR(\n        BrowserBuffer.concat([\n          // TransactionV0 is a transaction with the AccountID discriminant\n          // stripped off, we need to put it back to build a valid transaction\n          // which we can use to build a TransactionSignaturePayloadTaggedTransaction\n          xdr.PublicKeyType.publicKeyTypeEd25519().toXDR(),\n          tx.toXDR()\n        ])\n      );\n    }\n\n    const taggedTransaction =\n      new xdr.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTx(tx);\n\n    const txSignature = new xdr.TransactionSignaturePayload({\n      networkId: xdr.Hash.fromXDR(hash(this.networkPassphrase)),\n      taggedTransaction\n    });\n\n    return txSignature.toXDR();\n  }\n\n  /**\n   * To envelope returns a xdr.TransactionEnvelope which can be submitted to the network.\n   * @returns {xdr.TransactionEnvelope}\n   */\n  toEnvelope() {\n    const rawTx = this.tx.toXDR();\n    const signatures = this.signatures.slice(); // make a copy of the signatures\n\n    let envelope;\n    switch (this._envelopeType) {\n      case xdr.EnvelopeType.envelopeTypeTxV0():\n        envelope = new xdr.TransactionEnvelope.envelopeTypeTxV0(\n          new xdr.TransactionV0Envelope({\n            tx: xdr.TransactionV0.fromXDR(rawTx), // make a copy of tx\n            signatures\n          })\n        );\n        break;\n      case xdr.EnvelopeType.envelopeTypeTx():\n        envelope = new xdr.TransactionEnvelope.envelopeTypeTx(\n          new xdr.TransactionV1Envelope({\n            tx: xdr.Transaction.fromXDR(rawTx), // make a copy of tx\n            signatures\n          })\n        );\n        break;\n      default:\n        throw new Error(\n          `Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ${this._envelopeType.name}.`\n        );\n    }\n\n    return envelope;\n  }\n\n  /**\n   * Calculate the claimable balance ID for an operation within the transaction.\n   *\n   * @param   {integer}  opIndex   the index of the CreateClaimableBalance op\n   * @returns {string}   a hex string representing the claimable balance ID\n   *\n   * @throws {RangeError}   for invalid `opIndex` value\n   * @throws {TypeError}    if op at `opIndex` is not `CreateClaimableBalance`\n   * @throws for general XDR un/marshalling failures\n   *\n   * @see https://github.com/stellar/go/blob/d712346e61e288d450b0c08038c158f8848cc3e4/txnbuild/transaction.go#L392-L435\n   *\n   */\n  getClaimableBalanceId(opIndex) {\n    // Validate and then extract the operation from the transaction.\n    if (\n      !Number.isInteger(opIndex) ||\n      opIndex < 0 ||\n      opIndex >= this.operations.length\n    ) {\n      throw new RangeError('invalid operation index');\n    }\n\n    let op = this.operations[opIndex];\n    try {\n      op = Operation.createClaimableBalance(op);\n    } catch (err) {\n      throw new TypeError(\n        `expected createClaimableBalance, got ${op.type}: ${err}`\n      );\n    }\n\n    // Always use the transaction's *unmuxed* source.\n    const account = StrKey.decodeEd25519PublicKey(\n      extractBaseAddress(this.source)\n    );\n    const operationId = xdr.HashIdPreimage.envelopeTypeOpId(\n      new xdr.HashIdPreimageOperationId({\n        sourceAccount: xdr.AccountId.publicKeyTypeEd25519(account),\n        seqNum: xdr.SequenceNumber.fromString(this.sequence),\n        opNum: opIndex\n      })\n    );\n\n    const opIdHash = hash(operationId.toXDR('raw'));\n    const balanceId = xdr.ClaimableBalanceId.claimableBalanceIdTypeV0(opIdHash);\n    return balanceId.toXDR('hex');\n  }\n}\n","import xdr from './xdr';\nimport { hash } from './hashing';\nimport { Keypair } from './keypair';\nimport BrowserBuffer from './util/BrowserBuffer';\n\n/**\n * @ignore\n */\nexport class TransactionBase {\n  constructor(tx, signatures, fee, networkPassphrase) {\n    if (typeof networkPassphrase !== 'string') {\n      throw new Error(\n        `Invalid passphrase provided to Transaction: expected a string but got a ${typeof networkPassphrase}`\n      );\n    }\n\n    this._networkPassphrase = networkPassphrase;\n    this._tx = tx;\n    this._signatures = signatures;\n    this._fee = fee;\n  }\n\n  /**\n   * @type {Array.<xdr.DecoratedSignature>}\n   * @readonly\n   */\n  get signatures() {\n    return this._signatures;\n  }\n\n  set signatures(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  get tx() {\n    return this._tx;\n  }\n\n  set tx(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get fee() {\n    return this._fee;\n  }\n\n  set fee(value) {\n    throw new Error('Transaction is immutable');\n  }\n\n  /**\n   * @type {string}\n   * @readonly\n   */\n  get networkPassphrase() {\n    return this._networkPassphrase;\n  }\n\n  set networkPassphrase(networkPassphrase) {\n    this._networkPassphrase = networkPassphrase;\n  }\n\n  /**\n   * Signs the transaction with the given {@link Keypair}.\n   * @param {...Keypair} keypairs Keypairs of signers\n   * @returns {void}\n   */\n  sign(...keypairs) {\n    const txHash = this.hash();\n    keypairs.forEach((kp) => {\n      const sig = kp.signDecorated(txHash);\n      this.signatures.push(sig);\n    });\n  }\n\n  /**\n   * Signs a transaction with the given {@link Keypair}. Useful if someone sends\n   * you a transaction XDR for you to sign and return (see\n   * [addSignature](#addSignature) for more information).\n   *\n   * When you get a transaction XDR to sign....\n   * - Instantiate a `Transaction` object with the XDR\n   * - Use {@link Keypair} to generate a keypair object for your Stellar seed.\n   * - Run `getKeypairSignature` with that keypair\n   * - Send back the signature along with your publicKey (not your secret seed!)\n   *\n   * Example:\n   * ```javascript\n   * // `transactionXDR` is a string from the person generating the transaction\n   * const transaction = new Transaction(transactionXDR, networkPassphrase);\n   * const keypair = Keypair.fromSecret(myStellarSeed);\n   * return transaction.getKeypairSignature(keypair);\n   * ```\n   *\n   * @param {Keypair} keypair Keypair of signer\n   * @returns {string} Signature string\n   */\n  getKeypairSignature(keypair) {\n    return keypair.sign(this.hash()).toString('base64');\n  }\n\n  /**\n   * Add a signature to the transaction. Useful when a party wants to pre-sign\n   * a transaction but doesn't want to give access to their secret keys.\n   * This will also verify whether the signature is valid.\n   *\n   * Here's how you would use this feature to solicit multiple signatures.\n   * - Use `TransactionBuilder` to build a new transaction.\n   * - Make sure to set a long enough timeout on that transaction to give your\n   * signers enough time to sign!\n   * - Once you build the transaction, use `transaction.toXDR()` to get the\n   * base64-encoded XDR string.\n   * - _Warning!_ Once you've built this transaction, don't submit any other\n   * transactions onto your account! Doing so will invalidate this pre-compiled\n   * transaction!\n   * - Send this XDR string to your other parties. They can use the instructions\n   * for [getKeypairSignature](#getKeypairSignature) to sign the transaction.\n   * - They should send you back their `publicKey` and the `signature` string\n   * from [getKeypairSignature](#getKeypairSignature), both of which you pass to\n   * this function.\n   *\n   * @param {string} publicKey The public key of the signer\n   * @param {string} signature The base64 value of the signature XDR\n   * @returns {void}\n   */\n  addSignature(publicKey = '', signature = '') {\n    if (!signature || typeof signature !== 'string') {\n      throw new Error('Invalid signature');\n    }\n\n    if (!publicKey || typeof publicKey !== 'string') {\n      throw new Error('Invalid publicKey');\n    }\n\n    let keypair;\n    let hint;\n    const signatureBuffer = BrowserBuffer.from(signature, 'base64');\n\n    try {\n      keypair = Keypair.fromPublicKey(publicKey);\n      hint = keypair.signatureHint();\n    } catch (e) {\n      throw new Error('Invalid publicKey');\n    }\n\n    if (!keypair.verify(this.hash(), signatureBuffer)) {\n      throw new Error('Invalid signature');\n    }\n\n    this.signatures.push(\n      new xdr.DecoratedSignature({\n        hint,\n        signature: signatureBuffer\n      })\n    );\n  }\n\n  /**\n   * Add a decorated signature directly to the transaction envelope.\n   *\n   * @param {xdr.DecoratedSignature} signature    raw signature to add\n   * @returns {void}\n   *\n   * @see Keypair.signDecorated\n   * @see Keypair.signPayloadDecorated\n   */\n  addDecoratedSignature(signature) {\n    this.signatures.push(signature);\n  }\n\n  /**\n   * Add `hashX` signer preimage as signature.\n   * @param {Buffer|String} preimage Preimage of hash used as signer\n   * @returns {void}\n   */\n  signHashX(preimage) {\n    if (typeof preimage === 'string') {\n      preimage = BrowserBuffer.from(preimage, 'hex');\n    }\n\n    if (preimage.length > 64) {\n      throw new Error('preimage cannnot be longer than 64 bytes');\n    }\n\n    const signature = preimage;\n    const hashX = hash(preimage);\n    const hint = hashX.slice(hashX.length - 4);\n    this.signatures.push(new xdr.DecoratedSignature({ hint, signature }));\n  }\n\n  /**\n   * Returns a hash for this transaction, suitable for signing.\n   * @returns {Buffer}\n   */\n  hash() {\n    return hash(this.signatureBase());\n  }\n\n  signatureBase() {\n    throw new Error('Implement in subclass');\n  }\n\n  toEnvelope() {\n    throw new Error('Implement in subclass');\n  }\n\n  /**\n   * Get the transaction envelope as a base64-encoded string\n   * @returns {string} XDR string\n   */\n  toXDR() {\n    return this.toEnvelope().toXDR().toString('base64');\n  }\n}\n","import { UnsignedHyper } from 'js-xdr';\nimport BigNumber from 'bignumber.js';\nimport clone from 'lodash/clone';\nimport isUndefined from 'lodash/isUndefined';\nimport isString from 'lodash/isString';\nimport isArray from 'lodash/isArray';\n\nimport xdr from './xdr';\nimport { Transaction } from './transaction';\nimport { FeeBumpTransaction } from './fee_bump_transaction';\nimport { SignerKey } from './signerkey';\nimport { Memo } from './memo';\nimport { decodeAddressToMuxedAccount } from './util/decode_encode_muxed_account';\n\n/**\n * Minimum base fee for transactions. If this fee is below the network\n * minimum, the transaction will fail. The more operations in the\n * transaction, the greater the required fee. Use {@link\n * Server#fetchBaseFee} to get an accurate value of minimum transaction\n * fee on the network.\n *\n * @constant\n * @see [Fees](https://developers.stellar.org/docs/glossary/fees/)\n */\nexport const BASE_FEE = '100'; // Stroops\n\n/**\n * @constant\n * @see {@link TransactionBuilder#setTimeout}\n * @see [Timeout](https://developers.stellar.org/api/resources/transactions/post/)\n */\nexport const TimeoutInfinite = 0;\n\n/**\n * <p>Transaction builder helps constructs a new `{@link Transaction}` using the\n * given {@link Account} as the transaction's \"source account\". The transaction\n * will use the current sequence number of the given account as its sequence\n * number and increment the given account's sequence number by one. The given\n * source account must include a private key for signing the transaction or an\n * error will be thrown.</p>\n *\n * <p>Operations can be added to the transaction via their corresponding builder\n * methods, and each returns the TransactionBuilder object so they can be\n * chained together. After adding the desired operations, call the `build()`\n * method on the `TransactionBuilder` to return a fully constructed `{@link\n * Transaction}` that can be signed. The returned transaction will contain the\n * sequence number of the source account and include the signature from the\n * source account.</p>\n *\n * <p><strong>Be careful about unsubmitted transactions!</strong> When you build\n * a transaction, stellar-sdk automatically increments the source account's\n * sequence number. If you end up not submitting this transaction and submitting\n * another one instead, it'll fail due to the sequence number being wrong. So if\n * you decide not to use a built transaction, make sure to update the source\n * account's sequence number with\n * [Server.loadAccount](https://stellar.github.io/js-stellar-sdk/Server.html#loadAccount)\n * before creating another transaction.</p>\n *\n * <p>The following code example creates a new transaction with {@link\n * Operation.createAccount} and {@link Operation.payment} operations. The\n * Transaction's source account first funds `destinationA`, then sends a payment\n * to `destinationB`. The built transaction is then signed by\n * `sourceKeypair`.</p>\n *\n * ```\n * var transaction = new TransactionBuilder(source, { fee, networkPassphrase: Networks.TESTNET })\n * .addOperation(Operation.createAccount({\n *     destination: destinationA,\n *     startingBalance: \"20\"\n * })) // <- funds and creates destinationA\n * .addOperation(Operation.payment({\n *     destination: destinationB,\n *     amount: \"100\",\n *     asset: Asset.native()\n * })) // <- sends 100 XLM to destinationB\n * .setTimeout(30)\n * .build();\n *\n * transaction.sign(sourceKeypair);\n * ```\n *\n * @constructor\n *\n * @param {Account} sourceAccount - source account for this transaction\n * @param {object}  opts          - Options object\n * @param {string}  opts.fee      - max fee you're willing to pay per\n *     operation in this transaction (**in stroops**)\n *\n * @param {object}              [opts.timebounds] - timebounds for the\n *     validity of this transaction\n * @param {number|string|Date}  [opts.timebounds.minTime] - 64-bit UNIX\n *     timestamp or Date object\n * @param {number|string|Date}  [opts.timebounds.maxTime] - 64-bit UNIX\n *     timestamp or Date object\n * @param {object}              [opts.ledgerbounds] - ledger bounds for the\n *     validity of this transaction\n * @param {number}              [opts.ledgerbounds.minLedger] - number of the minimum\n *     ledger sequence\n * @param {number}              [opts.ledgerbounds.maxLedger] - number of the maximum\n *     ledger sequence\n * @param {string}              [opts.minAccountSequence] - number for\n *     the minimum account sequence\n * @param {number}              [opts.minAccountSequenceAge] - number of\n *     seconds for the minimum account sequence age\n * @param {number}              [opts.minAccountSequenceLedgerGap] - number of\n *     ledgers for the minimum account sequence ledger gap\n * @param {string[]}            [opts.extraSigners] - list of the extra signers\n *     required for this transaction\n * @param {Memo}                [opts.memo] - memo for the transaction\n * @param {string}              [opts.networkPassphrase] passphrase of the\n *     target Stellar network (e.g. \"Public Global Stellar Network ; September\n *     2015\" for the pubnet)\n */\nexport class TransactionBuilder {\n  constructor(sourceAccount, opts = {}) {\n    if (!sourceAccount) {\n      throw new Error('must specify source account for the transaction');\n    }\n\n    if (isUndefined(opts.fee)) {\n      throw new Error('must specify fee for the transaction (in stroops)');\n    }\n\n    this.source = sourceAccount;\n    this.operations = [];\n\n    this.baseFee = opts.fee;\n    this.timebounds = clone(opts.timebounds) || null;\n    this.ledgerbounds = clone(opts.ledgerbounds) || null;\n    this.minAccountSequence = opts.minAccountSequence || null;\n    this.minAccountSequenceAge = opts.minAccountSequenceAge || null;\n    this.minAccountSequenceLedgerGap = opts.minAccountSequenceLedgerGap || null;\n    this.extraSigners = clone(opts.extraSigners) || null;\n    this.memo = opts.memo || Memo.none();\n    this.networkPassphrase = opts.networkPassphrase || null;\n  }\n\n  /**\n   * Adds an operation to the transaction.\n   *\n   * @param {xdr.Operation} operation   The xdr operation object, use {@link\n   *     Operation} static methods.\n   *\n   * @returns {TransactionBuilder}\n   */\n  addOperation(operation) {\n    this.operations.push(operation);\n    return this;\n  }\n\n  /**\n   * Adds a memo to the transaction.\n   * @param {Memo} memo {@link Memo} object\n   * @returns {TransactionBuilder}\n   */\n  addMemo(memo) {\n    this.memo = memo;\n    return this;\n  }\n\n  /**\n   * Sets a timeout precondition on the transaction.\n   *\n   *  Because of the distributed nature of the Stellar network it is possible\n   *  that the status of your transaction will be determined after a long time\n   *  if the network is highly congested. If you want to be sure to receive the\n   *  status of the transaction within a given period you should set the {@link\n   *  TimeBounds} with `maxTime` on the transaction (this is what `setTimeout`\n   *  does internally; if there's `minTime` set but no `maxTime` it will be\n   *  added).\n   *\n   *  A call to `TransactionBuilder.setTimeout` is **required** if Transaction\n   *  does not have `max_time` set. If you don't want to set timeout, use\n   *  `{@link TimeoutInfinite}`. In general you should set `{@link\n   *  TimeoutInfinite}` only in smart contracts.\n   *\n   *  Please note that Horizon may still return <code>504 Gateway Timeout</code>\n   *  error, even for short timeouts. In such case you need to resubmit the same\n   *  transaction again without making any changes to receive a status. This\n   *  method is using the machine system time (UTC), make sure it is set\n   *  correctly.\n   *\n   * @param {number} timeoutSeconds   Number of seconds the transaction is good.\n   *     Can't be negative. If the value is {@link TimeoutInfinite}, the\n   *     transaction is good indefinitely.\n   *\n   * @returns {TransactionBuilder}\n   *\n   * @see {@link TimeoutInfinite}\n   * @see https://developers.stellar.org/docs/tutorials/handling-errors/\n   */\n  setTimeout(timeoutSeconds) {\n    if (this.timebounds !== null && this.timebounds.maxTime > 0) {\n      throw new Error(\n        'TimeBounds.max_time has been already set - setting timeout would overwrite it.'\n      );\n    }\n\n    if (timeoutSeconds < 0) {\n      throw new Error('timeout cannot be negative');\n    }\n\n    if (timeoutSeconds > 0) {\n      const timeoutTimestamp = Math.floor(Date.now() / 1000) + timeoutSeconds;\n      if (this.timebounds === null) {\n        this.timebounds = { minTime: 0, maxTime: timeoutTimestamp };\n      } else {\n        this.timebounds = {\n          minTime: this.timebounds.minTime,\n          maxTime: timeoutTimestamp\n        };\n      }\n    } else {\n      this.timebounds = {\n        minTime: 0,\n        maxTime: 0\n      };\n    }\n\n    return this;\n  }\n\n  /**\n   * If you want to prepare a transaction which will become valid at some point\n   * in the future, or be invalid after some time, you can set a timebounds\n   * precondition. Internally this will set the `minTime`, and `maxTime`\n   * preconditions. Conflicts with `setTimeout`, so use one or the other.\n   *\n   * @param {Date|number} minEpochOrDate  Either a JS Date object, or a number\n   *     of UNIX epoch seconds. The transaction is valid after this timestamp.\n   *     Can't be negative. If the value is `0`, the transaction is valid\n   *     immediately.\n   * @param {Date|number} maxEpochOrDate  Either a JS Date object, or a number\n   *     of UNIX epoch seconds. The transaction is valid until this timestamp.\n   *     Can't be negative. If the value is `0`, the transaction is valid\n   *     indefinitely.\n   *\n   * @returns {TransactionBuilder}\n   */\n  setTimebounds(minEpochOrDate, maxEpochOrDate) {\n    // Force it to a date type\n    if (typeof minEpochOrDate === 'number') {\n      minEpochOrDate = new Date(minEpochOrDate * 1000);\n    }\n    if (typeof maxEpochOrDate === 'number') {\n      maxEpochOrDate = new Date(maxEpochOrDate * 1000);\n    }\n\n    if (this.timebounds !== null) {\n      throw new Error(\n        'TimeBounds has been already set - setting timebounds would overwrite it.'\n      );\n    }\n\n    // Convert that date to the epoch seconds\n    const minTime = Math.floor(minEpochOrDate.valueOf() / 1000);\n    const maxTime = Math.floor(maxEpochOrDate.valueOf() / 1000);\n    if (minTime < 0) {\n      throw new Error('min_time cannot be negative');\n    }\n    if (maxTime < 0) {\n      throw new Error('max_time cannot be negative');\n    }\n    if (maxTime > 0 && minTime > maxTime) {\n      throw new Error('min_time cannot be greater than max_time');\n    }\n\n    this.timebounds = { minTime, maxTime };\n\n    return this;\n  }\n\n  /**\n   * If you want to prepare a transaction which will only be valid within some\n   * range of ledgers, you can set a ledgerbounds precondition.\n   * Internally this will set the `minLedger` and `maxLedger` preconditions.\n   *\n   * @param {number} minLedger  The minimum ledger this transaction is valid at\n   *     or after. Cannot be negative. If the value is `0` (the default), the\n   *     transaction is valid immediately.\n   *\n   * @param {number} maxLedger  The maximum ledger this transaction is valid\n   *     before. Cannot be negative. If the value is `0`, the transaction is\n   *     valid indefinitely.\n   *\n   * @returns {TransactionBuilder}\n   */\n  setLedgerbounds(minLedger, maxLedger) {\n    if (this.ledgerbounds !== null) {\n      throw new Error(\n        'LedgerBounds has been already set - setting ledgerbounds would overwrite it.'\n      );\n    }\n\n    if (minLedger < 0) {\n      throw new Error('min_ledger cannot be negative');\n    }\n    if (maxLedger < 0) {\n      throw new Error('max_ledger cannot be negative');\n    }\n    if (maxLedger > 0 && minLedger > maxLedger) {\n      throw new Error('min_ledger cannot be greater than max_ledger');\n    }\n\n    this.ledgerbounds = { minLedger, maxLedger };\n\n    return this;\n  }\n\n  /**\n   * If you want to prepare a transaction which will be valid only while the\n   * account sequence number is\n   *\n   *     minAccountSequence <= sourceAccountSequence < tx.seqNum\n   *\n   * Note that after execution the account's sequence number is always raised to\n   * `tx.seqNum`. Internally this will set the `minAccountSequence`\n   * precondition.\n   *\n   * @param {string} minAccountSequence   The minimum source account sequence\n   *     number this transaction is valid for. If the value is `0` (the\n   *     default), the transaction is valid when `sourceAccount's sequence\n   *     number == tx.seqNum- 1`.\n   *\n   * @returns {TransactionBuilder}\n   */\n  setMinAccountSequence(minAccountSequence) {\n    if (this.minAccountSequence !== null) {\n      throw new Error(\n        'min_account_sequence has been already set - setting min_account_sequence would overwrite it.'\n      );\n    }\n\n    this.minAccountSequence = minAccountSequence;\n\n    return this;\n  }\n\n  /**\n   * For the transaction to be valid, the current ledger time must be at least\n   * `minAccountSequenceAge` greater than sourceAccount's `sequenceTime`.\n   * Internally this will set the `minAccountSequenceAge` precondition.\n   *\n   * @param {number} durationInSeconds  The minimum amount of time between\n   *     source account sequence time and the ledger time when this transaction\n   *     will become valid. If the value is `0`, the transaction is unrestricted\n   *     by the account sequence age. Cannot be negative.\n   *\n   * @returns {TransactionBuilder}\n   */\n  setMinAccountSequenceAge(durationInSeconds) {\n    if (typeof durationInSeconds !== 'number') {\n      throw new Error('min_account_sequence_age must be a number');\n    }\n    if (this.minAccountSequenceAge !== null) {\n      throw new Error(\n        'min_account_sequence_age has been already set - setting min_account_sequence_age would overwrite it.'\n      );\n    }\n\n    if (durationInSeconds < 0) {\n      throw new Error('min_account_sequence_age cannot be negative');\n    }\n\n    this.minAccountSequenceAge = durationInSeconds;\n\n    return this;\n  }\n\n  /**\n   * For the transaction to be valid, the current ledger number must be at least\n   * `minAccountSequenceLedgerGap` greater than sourceAccount's ledger sequence.\n   * Internally this will set the `minAccountSequenceLedgerGap` precondition.\n   *\n   * @param {number} gap  The minimum number of ledgers between source account\n   *     sequence and the ledger number when this transaction will become valid.\n   *     If the value is `0`, the transaction is unrestricted by the account\n   *     sequence ledger. Cannot be negative.\n   *\n   * @returns {TransactionBuilder}\n   */\n  setMinAccountSequenceLedgerGap(gap) {\n    if (this.minAccountSequenceLedgerGap !== null) {\n      throw new Error(\n        'min_account_sequence_ledger_gap has been already set - setting min_account_sequence_ledger_gap would overwrite it.'\n      );\n    }\n\n    if (gap < 0) {\n      throw new Error('min_account_sequence_ledger_gap cannot be negative');\n    }\n\n    this.minAccountSequenceLedgerGap = gap;\n\n    return this;\n  }\n\n  /**\n   * For the transaction to be valid, there must be a signature corresponding to\n   * every Signer in this array, even if the signature is not otherwise required\n   * by the sourceAccount or operations. Internally this will set the\n   * `extraSigners` precondition.\n   *\n   * @param {string[]} extraSigners   required extra signers (as {@link StrKey}s)\n   *\n   * @returns {TransactionBuilder}\n   */\n  setExtraSigners(extraSigners) {\n    if (!isArray(extraSigners)) {\n      throw new Error('extra_signers must be an array of strings.');\n    }\n\n    if (this.extraSigners !== null) {\n      throw new Error(\n        'extra_signers has been already set - setting extra_signers would overwrite it.'\n      );\n    }\n\n    if (extraSigners.length > 2) {\n      throw new Error('extra_signers cannot be longer than 2 elements.');\n    }\n\n    this.extraSigners = clone(extraSigners);\n\n    return this;\n  }\n\n  /**\n   * Set network nassphrase for the Transaction that will be built.\n   *\n   * @param {string} networkPassphrase    passphrase of the target Stellar\n   *     network (e.g. \"Public Global Stellar Network ; September 2015\").\n   *\n   * @returns {TransactionBuilder}\n   */\n  setNetworkPassphrase(networkPassphrase) {\n    this.networkPassphrase = networkPassphrase;\n    return this;\n  }\n\n  /**\n   * This will build the transaction.\n   * It will also increment the source account's sequence number by 1.\n   * @returns {Transaction} This method will return the built {@link Transaction}.\n   */\n  build() {\n    const sequenceNumber = new BigNumber(this.source.sequenceNumber()).plus(1);\n    const fee = new BigNumber(this.baseFee)\n      .times(this.operations.length)\n      .toNumber();\n    const attrs = {\n      fee,\n      seqNum: xdr.SequenceNumber.fromString(sequenceNumber.toString()),\n      memo: this.memo ? this.memo.toXDRObject() : null\n    };\n\n    if (\n      this.timebounds === null ||\n      typeof this.timebounds.minTime === 'undefined' ||\n      typeof this.timebounds.maxTime === 'undefined'\n    ) {\n      throw new Error(\n        'TimeBounds has to be set or you must call setTimeout(TimeoutInfinite).'\n      );\n    }\n\n    if (isValidDate(this.timebounds.minTime)) {\n      this.timebounds.minTime = this.timebounds.minTime.getTime() / 1000;\n    }\n    if (isValidDate(this.timebounds.maxTime)) {\n      this.timebounds.maxTime = this.timebounds.maxTime.getTime() / 1000;\n    }\n\n    this.timebounds.minTime = UnsignedHyper.fromString(\n      this.timebounds.minTime.toString()\n    );\n    this.timebounds.maxTime = UnsignedHyper.fromString(\n      this.timebounds.maxTime.toString()\n    );\n\n    const timeBounds = new xdr.TimeBounds(this.timebounds);\n\n    if (this.hasV2Preconditions()) {\n      let ledgerBounds = null;\n      if (this.ledgerbounds !== null) {\n        ledgerBounds = new xdr.LedgerBounds(this.ledgerbounds);\n      }\n\n      let minSeqNum = this.minAccountSequence || '0';\n      minSeqNum = xdr.SequenceNumber.fromString(minSeqNum);\n\n      const minSeqAge = UnsignedHyper.fromString(\n        this.minAccountSequenceAge !== null\n          ? this.minAccountSequenceAge.toString()\n          : '0'\n      );\n\n      const minSeqLedgerGap = this.minAccountSequenceLedgerGap || 0;\n\n      const extraSigners =\n        this.extraSigners !== null\n          ? this.extraSigners.map(SignerKey.decodeAddress)\n          : [];\n\n      attrs.cond = xdr.Preconditions.precondV2(\n        new xdr.PreconditionsV2({\n          timeBounds,\n          ledgerBounds,\n          minSeqNum,\n          minSeqAge,\n          minSeqLedgerGap,\n          extraSigners\n        })\n      );\n    } else {\n      attrs.cond = xdr.Preconditions.precondTime(timeBounds);\n    }\n\n    attrs.sourceAccount = decodeAddressToMuxedAccount(this.source.accountId());\n    attrs.ext = new xdr.TransactionExt(0);\n\n    const xtx = new xdr.Transaction(attrs);\n    xtx.operations(this.operations);\n    const txEnvelope = new xdr.TransactionEnvelope.envelopeTypeTx(\n      new xdr.TransactionV1Envelope({ tx: xtx })\n    );\n\n    const tx = new Transaction(txEnvelope, this.networkPassphrase);\n\n    this.source.incrementSequenceNumber();\n\n    return tx;\n  }\n\n  hasV2Preconditions() {\n    return (\n      this.ledgerbounds !== null ||\n      this.minAccountSequence !== null ||\n      this.minAccountSequenceAge !== null ||\n      this.minAccountSequenceLedgerGap !== null ||\n      (this.extraSigners !== null && this.extraSigners.length > 0)\n    );\n  }\n\n  /**\n   * Builds a {@link FeeBumpTransaction}, enabling you to resubmit an existing\n   * transaction with a higher fee.\n   *\n   * @param {Keypair|string}  feeSource - account paying for the transaction,\n   *     in the form of either a Keypair (only the public key is used) or\n   *     an account ID (in G... or M... form, but refer to `withMuxing`)\n   * @param {string}          baseFee   - max fee willing to pay per operation\n   *     in inner transaction (**in stroops**)\n   * @param {Transaction}     innerTx   - {@link Transaction} to be bumped by\n   *     the fee bump transaction\n   * @param {string}          networkPassphrase - passphrase of the target\n   *     Stellar network (e.g. \"Public Global Stellar Network ; September 2015\",\n   *     see {@link Networks})\n   *\n   * @todo Alongside the next major version bump, this type signature can be\n   *       changed to be less awkward: accept a MuxedAccount as the `feeSource`\n   *       rather than a keypair or string.\n   *\n   * @note Your fee-bump amount should be >= 10x the original fee.\n   * @see  https://developers.stellar.org/docs/glossary/fee-bumps/#replace-by-fee\n   *\n   * @returns {FeeBumpTransaction}\n   */\n  static buildFeeBumpTransaction(\n    feeSource,\n    baseFee,\n    innerTx,\n    networkPassphrase\n  ) {\n    const innerOps = innerTx.operations.length;\n    const innerBaseFeeRate = new BigNumber(innerTx.fee).div(innerOps);\n    const base = new BigNumber(baseFee);\n\n    // The fee rate for fee bump is at least the fee rate of the inner transaction\n    if (base.lt(innerBaseFeeRate)) {\n      throw new Error(\n        `Invalid baseFee, it should be at least ${innerBaseFeeRate} stroops.`\n      );\n    }\n\n    const minBaseFee = new BigNumber(BASE_FEE);\n\n    // The fee rate is at least the minimum fee\n    if (base.lt(minBaseFee)) {\n      throw new Error(\n        `Invalid baseFee, it should be at least ${minBaseFee} stroops.`\n      );\n    }\n\n    let innerTxEnvelope = innerTx.toEnvelope();\n    if (innerTxEnvelope.switch() === xdr.EnvelopeType.envelopeTypeTxV0()) {\n      const v0Tx = innerTxEnvelope.v0().tx();\n      const v1Tx = new xdr.Transaction({\n        sourceAccount: new xdr.MuxedAccount.keyTypeEd25519(\n          v0Tx.sourceAccountEd25519()\n        ),\n        fee: v0Tx.fee(),\n        seqNum: v0Tx.seqNum(),\n        cond: xdr.Preconditions.precondTime(v0Tx.timeBounds()),\n        memo: v0Tx.memo(),\n        operations: v0Tx.operations(),\n        ext: new xdr.TransactionExt(0)\n      });\n      innerTxEnvelope = new xdr.TransactionEnvelope.envelopeTypeTx(\n        new xdr.TransactionV1Envelope({\n          tx: v1Tx,\n          signatures: innerTxEnvelope.v0().signatures()\n        })\n      );\n    }\n\n    let feeSourceAccount;\n    if (isString(feeSource)) {\n      feeSourceAccount = decodeAddressToMuxedAccount(feeSource);\n    } else {\n      feeSourceAccount = feeSource.xdrMuxedAccount();\n    }\n\n    const tx = new xdr.FeeBumpTransaction({\n      feeSource: feeSourceAccount,\n      fee: xdr.Int64.fromString(base.times(innerOps + 1).toString()),\n      innerTx: xdr.FeeBumpTransactionInnerTx.envelopeTypeTx(\n        innerTxEnvelope.v1()\n      ),\n      ext: new xdr.FeeBumpTransactionExt(0)\n    });\n    const feeBumpTxEnvelope = new xdr.FeeBumpTransactionEnvelope({\n      tx,\n      signatures: []\n    });\n    const envelope = new xdr.TransactionEnvelope.envelopeTypeTxFeeBump(\n      feeBumpTxEnvelope\n    );\n\n    return new FeeBumpTransaction(envelope, networkPassphrase);\n  }\n\n  /**\n   * Build a {@link Transaction} or {@link FeeBumpTransaction} from an\n   * xdr.TransactionEnvelope.\n   *\n   * @param {string|xdr.TransactionEnvelope} envelope - The transaction envelope\n   *     object or base64 encoded string.\n   * @param {string} networkPassphrase - The network passphrase of the target\n   *     Stellar network (e.g. \"Public Global Stellar Network ; September\n   *     2015\"), see {@link Networks}.\n   *\n   * @returns {Transaction|FeeBumpTransaction}\n   */\n  static fromXDR(envelope, networkPassphrase) {\n    if (typeof envelope === 'string') {\n      envelope = xdr.TransactionEnvelope.fromXDR(envelope, 'base64');\n    }\n\n    if (envelope.switch() === xdr.EnvelopeType.envelopeTypeTxFeeBump()) {\n      return new FeeBumpTransaction(envelope, networkPassphrase);\n    }\n\n    return new Transaction(envelope, networkPassphrase);\n  }\n}\n\n/**\n * Checks whether a provided object is a valid Date.\n * @argument {Date} d date object\n * @returns {boolean}\n */\nexport function isValidDate(d) {\n  // isnan is okay here because it correctly checks for invalid date objects\n  // eslint-disable-next-line no-restricted-globals\n  return d instanceof Date && !isNaN(d);\n}\n","class BrowserBuffer {\r\n  constructor(input, encodingOrOffset, length) {\r\n    if (typeof input === 'number') {\r\n      this.data = new Uint8Array(input);\r\n      this.data.fill(0);\r\n    } else if (typeof input === 'string') {\r\n      if (typeof encodingOrOffset === 'string') {\r\n        this.data = BrowserBuffer.decode(input, encodingOrOffset);\r\n      } else {\r\n        this.data = new TextEncoder().encode(input);\r\n      }\r\n    } else if (typeof input === 'object' && input instanceof ArrayBuffer) {\r\n      this.data = new Uint8Array(input, encodingOrOffset, length);\r\n    } else if (BrowserBuffer.isBuffer(input)) {\r\n      this.data = new Uint8Array(input);\r\n    } else {\r\n      throw new Error('Unsupported data type');\r\n    }\r\n  }\r\n  /*\r\n  constructor(input, encodingOrOffset, length) {\r\n    if (typeof input === 'number') {\r\n      this.data = new Uint8Array(input);\r\n      this.data.fill(0);\r\n    } else if (typeof input === 'string') {\r\n      if (typeof encodingOrOffset === 'string') {\r\n        this.data = BrowserBuffer.decode(input, encodingOrOffset);\r\n      } else {\r\n        this.data = new TextEncoder().encode(input);\r\n      }\r\n    } else if (typeof input === 'object' && input instanceof ArrayBuffer) {\r\n      this.data = new Uint8Array(input, encodingOrOffset, length);\r\n    } else if (BrowserBuffer.isBuffer(input)) {\r\n      this.data = new Uint8Array(input.buffer, input.byteOffset, input.byteLength);\r\n    } else {\r\n      throw new Error('Unsupported data type');\r\n    }\r\n  }\r\n  \r\n  constructor(input, encodingOrOffset, length) {\r\n    console.log('trying to make a browserbuffer', input, encodingOrOffset, length)\r\n    console.log(`typeof input: ${typeof input}`)\r\n    console.log(`type of data is ${typeof input.data}`)\r\n    if (typeof input === 'number') {\r\n      this.data = new Uint8Array(input);\r\n      this.data.fill(0);\r\n    } else if (typeof input === 'string') {\r\n      if (typeof encodingOrOffset === 'string') {\r\n        this.data = BrowserBuffer.decode(input, encodingOrOffset);\r\n      } else {\r\n        this.data = new TextEncoder().encode(input);\r\n      }\r\n    } else if (typeof input === 'object' && input instanceof ArrayBuffer) {\r\n      this.data = new Uint8Array(input, encodingOrOffset, length);\r\n    } else if (BrowserBuffer.isBuffer(input)) {\r\n      this.data = new Uint8Array(input.buffer, input.byteOffset, input.byteLength);\r\n    } else {\r\n      throw new Error('Unsupported data type');\r\n    }\r\n  }\r\n*/\r\n\r\n  static of(...items) {\r\n    return new BrowserBuffer(items);\r\n  }\r\n\r\n  static from(input, encodingOrOffset, length) {\r\n    console.log('trying to make a browserbuffer', input, encodingOrOffset, length)\r\n    if (typeof input === 'string') {\r\n      return new BrowserBuffer(input, encodingOrOffset);\r\n    }\r\n  \r\n    if (typeof input === 'object' && (Array.isArray(input) || input instanceof ArrayBuffer || BrowserBuffer.isBuffer(input))) {\r\n      if (typeof encodingOrOffset === 'function') {\r\n        const mapfn = encodingOrOffset;\r\n        const arrayLike = Array.from(input, mapfn);\r\n        return new BrowserBuffer(arrayLike);\r\n      }\r\n      return new BrowserBuffer(input, encodingOrOffset, length);\r\n    }\r\n  \r\n    throw new Error('Unsupported data type');\r\n  }\r\n\r\n  static isBuffer(obj) {\r\n    return obj instanceof BrowserBuffer || obj instanceof Uint8Array || BrowserBuffer.isNodeBuffer(obj);\r\n  }\r\n\r\n  static isNodeBuffer(obj) {\r\n    return typeof obj === 'object' &&\r\n      typeof obj.constructor === 'function' &&\r\n      typeof obj.constructor.isBuffer === 'function' &&\r\n      obj.constructor.isBuffer(obj);\r\n  }\r\n\r\n  static alloc(size, fill = 0) {\r\n    const buffer = new BrowserBuffer(size);\r\n    if (typeof fill === 'string') {\r\n      const fillBuffer = BrowserBuffer.from(fill, 'utf8');\r\n      for (let i = 0; i < buffer.length; i += 1) {\r\n        buffer[i] = fillBuffer[i % fillBuffer.length];\r\n      }\r\n    } else {\r\n      buffer.fill(fill);\r\n    }\r\n    return buffer;\r\n  }\r\n\r\n  fill(value, offset = 0, end = this.data.length, encoding = 'utf8') {\r\n    console.log('filling a buffer with', value, offset, end, encoding)\r\n    const fillBuffer = BrowserBuffer.from(value, encoding);\r\n    for (let i = offset; i < end; i += 1) {\r\n      console.log('im filling a buffer with', fillBuffer[i % fillBuffer.length])\r\n      this[i] = fillBuffer[i];\r\n    }\r\n    return this;\r\n  }\r\n\r\n  static concat(list, totalLength) {\r\n    if (typeof totalLength === 'undefined') {\r\n      totalLength = list.reduce((total, buf) => total + buf.length, 0);\r\n    }\r\n    const buffer = BrowserBuffer.alloc(totalLength);\r\n    let offset = 0;\r\n    list.forEach(buf => {\r\n      buffer.set(buf, offset);\r\n      offset += buf.length;\r\n    });\r\n    return buffer;\r\n  }\r\n\r\n  static decode(string, encoding) {\r\n    switch (encoding) {\r\n      case 'utf8':\r\n        return new TextEncoder().encode(string);\r\n      case 'ascii':\r\n        return new TextEncoder().encode(string);\r\n      case 'base64':\r\n        return this.decodeBase64(string);\r\n      case 'hex':\r\n        return this.decodeHex(string);\r\n      default:\r\n        throw new Error('Unsupported encoding type');\r\n    }\r\n  }\r\n\r\n  static decodeBase64(string) {\r\n    const binaryString = atob(string);\r\n    const bytes = new Uint8Array(binaryString.length);\r\n    for (let i = 0; i < binaryString.length; i += 1) {\r\n      bytes[i] = binaryString.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n  }\r\n\r\n  static decodeHex(string) {\r\n    const size = string.length / 2;\r\n    const array = new Uint8Array(size);\r\n    for (let i = 0; i < size; i += 1) {\r\n      array[i] = parseInt(string.substr(i * 2, 2), 16);\r\n    }\r\n    return array;\r\n  }\r\n\r\n  get length() {\r\n    return this.data.length;\r\n  }\r\n\r\n  toString(encoding = 'utf8') {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return this.toHex();\r\n      case 'utf8':\r\n        return new TextDecoder().decode(this);\r\n      case 'ascii': // Treat 'ascii' encoding the same as 'utf8'\r\n        return new TextDecoder().decode(this);\r\n      case 'base64':\r\n        return this.toBase64();\r\n      default:\r\n        throw new Error('Unsupported encoding type');\r\n    }\r\n  }\r\n\r\n  equals(otherBuffer) {\r\n    if (!(otherBuffer instanceof BrowserBuffer)) {\r\n      throw new Error('Argument must be a BrowserBuffer');\r\n    }\r\n    return this.data.every((value, i) => value === otherBuffer.data[i]);\r\n  }\r\n\r\n  slice(start = 0, end = this.data.length) {\r\n    return new BrowserBuffer(this.data.slice(start, end));\r\n  }\r\n\r\n  copy(targetBuffer, targetStart = 0, sourceStart = 0, sourceEnd = this.data.length) {\r\n    const sourceData = this.data.slice(sourceStart, sourceEnd);\r\n    targetBuffer.data.set(sourceData, targetStart);\r\n    return sourceData.length;\r\n  }\r\n\r\n  compare(otherBuffer, targetStart = 0, targetEnd = otherBuffer.data.length, sourceStart = 0, sourceEnd = this.data.length) {\r\n    const targetData = otherBuffer.data.slice(targetStart, targetEnd);\r\n    const sourceData = this.data.slice(sourceStart, sourceEnd);\r\n    return sourceData.every((value, i) => value === targetData[i]) ? 0 : 1;\r\n  }\r\n\r\n  indexOf(value, byteOffset = 0, encoding = 'utf8') {\r\n    const searchBuffer = BrowserBuffer.from(value, encoding);\r\n    const searchLength = searchBuffer.length;\r\n\r\n    for (let i = byteOffset; i < this.data.length - searchLength + 1; i += 1) {\r\n      if (this._matchAtIndex(i, searchBuffer)) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  lastIndexOf(value, byteOffset = this.data.length - 1, encoding = 'utf8') {\r\n    const searchBuffer = BrowserBuffer.from(value, encoding);\r\n    const searchLength = searchBuffer.length;\r\n\r\n    for (let i = byteOffset; i >= searchLength - 1; i -= 1) {\r\n      if (this._matchAtIndex(i, searchBuffer, searchLength)) {\r\n        return i - searchLength + 1;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  _matchAtIndex(index, searchBuffer, searchLength = searchBuffer.length) {\r\n    for (let j = 0; j < searchLength; j += 1) {\r\n      if (this.data[index + j] !== searchBuffer[j]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  toHex() {\r\n    let hex = '';\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      const part = this[i].toString(16);\r\n      hex += part.length < 2 ? `0${part}` : part;\r\n    }\r\n    return hex;\r\n  }\r\n\r\n  toBase64() {\r\n    let binary = '';\r\n    const len = this.byteLength;\r\n    for (let i = 0; i < len; i += 1) {\r\n      binary += String.fromCharCode(this[i]);\r\n    }\r\n    return btoa(binary);\r\n  }\r\n\r\n  writeUInt16LE(value, offset = 0) {\r\n    this[offset] = value & 0xff;\r\n    this[offset + 1] = (value >> 8) & 0xff;\r\n  }\r\n}\r\n\r\nexport default BrowserBuffer;\r\n","export function verifyChecksum(expected, actual) {\n  if (expected.length !== actual.length) {\n    return false;\n  }\n\n  if (expected.length === 0) {\n    return true;\n  }\n\n  for (let i = 0; i < expected.length; i += 1) {\n    if (expected[i] !== actual[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import BigNumber from 'bignumber.js';\n\n// eslint-disable-next-line no-bitwise\nconst MAX_INT = ((1 << 31) >>> 0) - 1;\n\n/**\n * Calculates and returns the best rational approximation of the given real number.\n * @private\n * @param {string|number|BigNumber} rawNumber Real number\n * @throws Error Throws `Error` when the best rational approximation cannot be found.\n * @returns {array} first element is n (numerator), second element is d (denominator)\n */\nexport function best_r(rawNumber) {\n  let number = new BigNumber(rawNumber);\n  let a;\n  let f;\n  const fractions = [\n    [new BigNumber(0), new BigNumber(1)],\n    [new BigNumber(1), new BigNumber(0)]\n  ];\n  let i = 2;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (number.gt(MAX_INT)) {\n      break;\n    }\n    a = number.integerValue(BigNumber.ROUND_FLOOR);\n    f = number.minus(a);\n    const h = a.times(fractions[i - 1][0]).plus(fractions[i - 2][0]);\n    const k = a.times(fractions[i - 1][1]).plus(fractions[i - 2][1]);\n    if (h.gt(MAX_INT) || k.gt(MAX_INT)) {\n      break;\n    }\n    fractions.push([h, k]);\n    if (f.eq(0)) {\n      break;\n    }\n    number = new BigNumber(1).div(f);\n    i += 1;\n  }\n  const [n, d] = fractions[fractions.length - 1];\n\n  if (n.isZero() || d.isZero()) {\n    throw new Error(\"Couldn't find approximation\");\n  }\n\n  return [n.toNumber(), d.toNumber()];\n}\n","import isString from 'lodash/isString';\n\nimport xdr from '../xdr';\nimport { StrKey } from '../strkey';\nimport BrowserBuffer from './BrowserBuffer';\n/**\n * Converts a Stellar address (in G... or M... form) to an `xdr.MuxedAccount`\n * structure, using the ed25519 representation when possible.\n *\n * This supports full muxed accounts, where an `M...` address will resolve to\n * both its underlying `G...` address and an integer ID.\n *\n * @param   {string}  address   G... or M... address to encode into XDR\n * @returns {xdr.MuxedAccount}  a muxed account object for this address string\n */\nexport function decodeAddressToMuxedAccount(address) {\n  if (StrKey.isValidMed25519PublicKey(address)) {\n    return _decodeAddressFullyToMuxedAccount(address);\n  }\n\n  return xdr.MuxedAccount.keyTypeEd25519(\n    StrKey.decodeEd25519PublicKey(address)\n  );\n}\n\n/**\n * Converts an xdr.MuxedAccount to its StrKey representation.\n *\n * This returns its \"M...\" string representation if there is a muxing ID within\n * the object and returns the \"G...\" representation otherwise.\n *\n * @param   {xdr.MuxedAccount} muxedAccount   Raw account to stringify\n * @returns {string} Stringified G... (corresponding to the underlying pubkey)\n *     or M... address (corresponding to both the key and the muxed ID)\n *\n * @see https://stellar.org/protocol/sep-23\n */\nexport function encodeMuxedAccountToAddress(muxedAccount) {\n  if (\n    muxedAccount.switch().value ===\n    xdr.CryptoKeyType.keyTypeMuxedEd25519().value\n  ) {\n    return _encodeMuxedAccountFullyToAddress(muxedAccount);\n  }\n\n  return StrKey.encodeEd25519PublicKey(muxedAccount.ed25519());\n}\n\n/**\n * Transform a Stellar address (G...) and an ID into its XDR representation.\n *\n * @param  {string} address   - a Stellar G... address\n * @param  {string} id        - a Uint64 ID represented as a string\n *\n * @return {xdr.MuxedAccount} - XDR representation of the above muxed account\n */\nexport function encodeMuxedAccount(address, id) {\n  if (!StrKey.isValidEd25519PublicKey(address)) {\n    throw new Error('address should be a Stellar account ID (G...)');\n  }\n  if (!isString(id)) {\n    throw new Error('id should be a string representing a number (uint64)');\n  }\n\n  return xdr.MuxedAccount.keyTypeMuxedEd25519(\n    new xdr.MuxedAccountMed25519({\n      id: xdr.Uint64.fromString(id),\n      ed25519: StrKey.decodeEd25519PublicKey(address)\n    })\n  );\n}\n\n/**\n * Extracts the underlying base (G...) address from an M-address.\n * @param  {string} address   an account address (either M... or G...)\n * @return {string} a Stellar public key address (G...)\n */\nexport function extractBaseAddress(address) {\n  if (StrKey.isValidEd25519PublicKey(address)) {\n    return address;\n  }\n\n  if (!StrKey.isValidMed25519PublicKey(address)) {\n    throw new TypeError(`expected muxed account (M...), got ${address}`);\n  }\n\n  const muxedAccount = decodeAddressToMuxedAccount(address);\n  return StrKey.encodeEd25519PublicKey(muxedAccount.med25519().ed25519());\n}\n\n// Decodes an \"M...\" account ID into its MuxedAccount object representation.\nfunction _decodeAddressFullyToMuxedAccount(address) {\n  const rawBytes = StrKey.decodeMed25519PublicKey(address);\n\n  // Decoding M... addresses cannot be done through a simple\n  // MuxedAccountMed25519.fromXDR() call, because the definition is:\n  //\n  //    constructor(attributes: { id: Uint64; ed25519: BrowserBuffer });\n  //\n  // Note the ID is the first attribute. However, the ID comes *last* in the\n  // stringified (base32-encoded) address itself (it's the last 8-byte suffix).\n  // The `fromXDR()` method interprets bytes in order, so we need to parse out\n  // the raw binary into its requisite parts, i.e. use the MuxedAccountMed25519\n  // constructor directly.\n  //\n  // Refer to https://github.com/stellar/go/blob/master/xdr/muxed_account.go#L26\n  // for the Golang implementation of the M... parsing.\n  return xdr.MuxedAccount.keyTypeMuxedEd25519(\n    new xdr.MuxedAccountMed25519({\n      id: xdr.Uint64.fromXDR(rawBytes.subarray(-8)),\n      ed25519: rawBytes.subarray(0, -8)\n    })\n  );\n}\n\n// Converts an xdr.MuxedAccount into its *true* \"M...\" string representation.\nfunction _encodeMuxedAccountFullyToAddress(muxedAccount) {\n  if (muxedAccount.switch() === xdr.CryptoKeyType.keyTypeEd25519()) {\n    return encodeMuxedAccountToAddress(muxedAccount);\n  }\n\n  const muxed = muxedAccount.med25519();\n  return StrKey.encodeMed25519PublicKey(\n    BrowserBuffer.concat([muxed.ed25519(), muxed.id().toXDR('raw')])\n  );\n}\n","import xdr from './generated/curr_generated';\n\nexport default xdr;\n","\"use strict\";\n\n/**\n * Generate a character map.\n * @param {string} alphabet e.g. \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\"\n * @param {object} mappings map overrides from key to value\n * @method\n */\n\nvar charmap = function (alphabet, mappings) {\n  mappings || (mappings = {});\n  alphabet.split(\"\").forEach(function (c, i) {\n    if (!(c in mappings)) mappings[c] = i;\n  });\n  return mappings;\n}\n\n/**\n * The RFC 4648 base 32 alphabet and character map.\n * @see {@link https://tools.ietf.org/html/rfc4648}\n */\n\nvar rfc4648 = {\n  alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n  charmap: {\n    0: 14,\n    1: 8\n  }\n};\n\nrfc4648.charmap = charmap(rfc4648.alphabet, rfc4648.charmap);\n\n/**\n * The Crockford base 32 alphabet and character map.\n * @see {@link http://www.crockford.com/wrmg/base32.html}\n */\n\nvar crockford = {\n  alphabet: \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\",\n  charmap: {\n    O: 0,\n    I: 1,\n    L: 1\n  }\n};\n\ncrockford.charmap = charmap(crockford.alphabet, crockford.charmap);\n\n/**\n * base32hex\n * @see {@link https://en.wikipedia.org/wiki/Base32#base32hex}\n */\n\nvar base32hex = {\n  alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n  charmap: {}\n};\n\nbase32hex.charmap = charmap(base32hex.alphabet, base32hex.charmap);\n\n/**\n * Create a new `Decoder` with the given options.\n *\n * @param {object} [options]\n *   @param {string} [type] Supported Base-32 variants are \"rfc4648\" and\n *     \"crockford\".\n *   @param {object} [charmap] Override the character map used in decoding.\n * @constructor\n */\n\nfunction Decoder (options) {\n  this.buf = [];\n  this.shift = 8;\n  this.carry = 0;\n\n  if (options) {\n\n    switch (options.type) {\n      case \"rfc4648\":\n        this.charmap = exports.rfc4648.charmap;\n        break;\n      case \"crockford\":\n        this.charmap = exports.crockford.charmap;\n        break;\n      case \"base32hex\":\n        this.charmap = exports.base32hex.charmap;\n        break;\n      default:\n        throw new Error(\"invalid type\");\n    }\n\n    if (options.charmap) this.charmap = options.charmap;\n  }\n}\n\n/**\n * The default character map coresponds to RFC4648.\n */\n\nDecoder.prototype.charmap = rfc4648.charmap;\n\n/**\n * Decode a string, continuing from the previous state.\n *\n * @param {string} str\n * @return {Decoder} this\n */\n\nDecoder.prototype.write = function (str) {\n  var charmap = this.charmap;\n  var buf = this.buf;\n  var shift = this.shift;\n  var carry = this.carry;\n\n  // decode string\n  str.toUpperCase().split(\"\").forEach(function (char) {\n\n    // ignore padding\n    if (char == \"=\") return;\n\n    // lookup symbol\n    var symbol = charmap[char] & 0xff;\n\n    // 1: 00000 000\n    // 2:          00 00000 0\n    // 3:                    0000 0000\n    // 4:                             0 00000 00\n    // 5:                                       000 00000\n    // 6:                                                00000 000\n    // 7:                                                         00 00000 0\n\n    shift -= 5;\n    if (shift > 0) {\n      carry |= symbol << shift;\n    } else if (shift < 0) {\n      buf.push(carry | (symbol >> -shift));\n      shift += 8;\n      carry = (symbol << shift) & 0xff;\n    } else {\n      buf.push(carry | symbol);\n      shift = 8;\n      carry = 0;\n    }\n  });\n\n  // save state\n  this.shift = shift;\n  this.carry = carry;\n\n  // for chaining\n  return this;\n};\n\n/**\n * Finish decoding.\n *\n * @param {string} [str] The final string to decode.\n * @return {Array} Decoded byte array.\n */\n\nDecoder.prototype.finalize = function (str) {\n  if (str) {\n    this.write(str);\n  }\n  if (this.shift !== 8 && this.carry !== 0) {\n    this.buf.push(this.carry);\n    this.shift = 8;\n    this.carry = 0;\n  }\n  return this.buf;\n};\n\n/**\n * Create a new `Encoder` with the given options.\n *\n * @param {object} [options]\n *   @param {string} [type] Supported Base-32 variants are \"rfc4648\" and\n *     \"crockford\".\n *   @param {object} [alphabet] Override the alphabet used in encoding.\n * @constructor\n */\n\nfunction Encoder (options) {\n  this.buf = \"\";\n  this.shift = 3;\n  this.carry = 0;\n\n  if (options) {\n\n    switch (options.type) {\n      case \"rfc4648\":\n        this.alphabet = exports.rfc4648.alphabet;\n        break;\n      case \"crockford\":\n        this.alphabet = exports.crockford.alphabet;\n        break;\n      case \"base32hex\":\n        this.alphabet = exports.base32hex.alphabet;\n        break;\n      default:\n        throw new Error(\"invalid type\");\n    }\n\n    if (options.alphabet) this.alphabet = options.alphabet;\n    else if (options.lc) this.alphabet = this.alphabet.toLowerCase();\n  }\n}\n\n/**\n * The default alphabet coresponds to RFC4648.\n */\n\nEncoder.prototype.alphabet = rfc4648.alphabet;\n\n/**\n * Encode a byte array, continuing from the previous state.\n *\n * @param {byte[]} buf The byte array to encode.\n * @return {Encoder} this\n */\n\nEncoder.prototype.write = function (buf) {\n  var shift = this.shift;\n  var carry = this.carry;\n  var symbol;\n  var byte;\n  var i;\n\n  // encode each byte in buf\n  for (i = 0; i < buf.length; i++) {\n    byte = buf[i];\n\n    // 1: 00000 000\n    // 2:          00 00000 0\n    // 3:                    0000 0000\n    // 4:                             0 00000 00\n    // 5:                                       000 00000\n    // 6:                                                00000 000\n    // 7:                                                         00 00000 0\n\n    symbol = carry | (byte >> shift);\n    this.buf += this.alphabet[symbol & 0x1f];\n\n    if (shift > 5) {\n      shift -= 5;\n      symbol = byte >> shift;\n      this.buf += this.alphabet[symbol & 0x1f];\n    }\n\n    shift = 5 - shift;\n    carry = byte << shift;\n    shift = 8 - shift;\n  }\n\n  // save state\n  this.shift = shift;\n  this.carry = carry;\n\n  // for chaining\n  return this;\n};\n\n/**\n * Finish encoding.\n *\n * @param {byte[]} [buf] The final byte array to encode.\n * @return {string} The encoded byte array.\n */\n\nEncoder.prototype.finalize = function (buf) {\n  if (buf) {\n    this.write(buf);\n  }\n  if (this.shift !== 3) {\n    this.buf += this.alphabet[this.carry & 0x1f];\n    this.shift = 3;\n    this.carry = 0;\n  }\n  return this.buf;\n};\n\n/**\n * Convenience encoder.\n *\n * @param {byte[]} buf The byte array to encode.\n * @param {object} [options] Options to pass to the encoder.\n * @return {string} The encoded string.\n */\n\nexports.encode = function (buf, options) {\n  return new Encoder(options).finalize(buf);\n};\n\n/**\n * Convenience decoder.\n *\n * @param {string} str The string to decode.\n * @param {object} [options] Options to pass to the decoder.\n * @return {byte[]} The decoded byte array.\n */\n\nexports.decode = function (str, options) {\n  return new Decoder(options).finalize(str);\n};\n\n// Exports.\nexports.Decoder = Decoder;\nexports.Encoder = Encoder;\nexports.charmap = charmap;\nexports.crockford = crockford;\nexports.rfc4648 = rfc4648;\nexports.base32hex = base32hex;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/*! For license information please see xdr.js.LICENSE.txt */\n!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.XDR=e():t.XDR=e()}(this,(()=>(()=>{var t={899:(t,e,r)=>{const n=r(221);t.exports=n},221:(t,e,r)=>{\"use strict\";r.r(e),r.d(e,{Array:()=>j,Bool:()=>S,Double:()=>O,Enum:()=>z,Float:()=>L,Hyper:()=>I,Int:()=>v,Opaque:()=>M,Option:()=>X,Quadruple:()=>$,Reference:()=>q,String:()=>V,Struct:()=>W,Union:()=>Y,UnsignedHyper:()=>R,UnsignedInt:()=>x,VarArray:()=>P,VarOpaque:()=>D,Void:()=>k,config:()=>nt});class n extends TypeError{constructor(t){super(`XDR Write Error: ${t}`)}}class i extends TypeError{constructor(t){super(`XDR Read Error: ${t}`)}}class o extends TypeError{constructor(t){super(`XDR Type Definition Error: ${t}`)}}class s extends o{constructor(){super(\"method not implemented, it should be overloaded in the descendant class.\")}}var u=r(764).lW;class f{constructor(t){if(!u.isBuffer(t)){if(!(t instanceof Array))throw new i(\"source not specified\");t=u.from(t)}this._buffer=t,this._length=t.length,this._index=0}_buffer;_length;_index;get eof(){return this._index===this._length}advance(t){const e=this._index;if(this._index+=t,this._length<this._index)throw new i(\"attempt to read outside the boundary of the buffer\");const r=4-(t%4||4);if(r>0){for(let t=0;t<r;t++)if(0!==this._buffer[this._index+t])throw new i(\"invalid padding\");this._index+=r}return e}rewind(){this._index=0}read(t){const e=this.advance(t);return this._buffer.subarray(e,e+t)}readInt32BE(){return this._buffer.readInt32BE(this.advance(4))}readUInt32BE(){return this._buffer.readUInt32BE(this.advance(4))}readBigInt64BE(){return this._buffer.readBigInt64BE(this.advance(8))}readBigUInt64BE(){return this._buffer.readBigUInt64BE(this.advance(8))}readFloatBE(){return this._buffer.readFloatBE(this.advance(4))}readDoubleBE(){return this._buffer.readDoubleBE(this.advance(8))}ensureInputConsumed(){if(this._index!==this._length)throw new i(\"invalid XDR contract typecast - source buffer not entirely consumed\")}}var h=r(764).lW;const a=8192;class c{constructor(t){\"number\"==typeof t?t=h.allocUnsafe(t):t instanceof h||(t=h.allocUnsafe(a)),this._buffer=t,this._length=t.length}_buffer;_length;_index=0;alloc(t){const e=this._index;return this._index+=t,this._length<this._index&&this.resize(this._index),e}resize(t){const e=Math.ceil(t/a)*a,r=h.allocUnsafe(e);this._buffer.copy(r,0,0,this._length),this._buffer=r,this._length=e}finalize(){return this._buffer.subarray(0,this._index)}toArray(){return[...this.finalize()]}write(t,e){if(\"string\"==typeof t){const r=this.alloc(e);this._buffer.write(t,r,\"utf8\")}else{t instanceof h||(t=h.from(t));const r=this.alloc(e);t.copy(this._buffer,r,0,e)}const r=4-(e%4||4);if(r>0){const t=this.alloc(r);this._buffer.fill(0,t,this._index)}}writeInt32BE(t){const e=this.alloc(4);this._buffer.writeInt32BE(t,e)}writeUInt32BE(t){const e=this.alloc(4);this._buffer.writeUInt32BE(t,e)}writeBigInt64BE(t){const e=this.alloc(8);this._buffer.writeBigInt64BE(t,e)}writeBigUInt64BE(t){const e=this.alloc(8);this._buffer.writeBigUInt64BE(t,e)}writeFloatBE(t){const e=this.alloc(4);this._buffer.writeFloatBE(t,e)}writeDoubleBE(t){const e=this.alloc(8);this._buffer.writeDoubleBE(t,e)}static bufferChunkSize=a}var l=r(764).lW;class p{toXDR(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"raw\";if(!this.write)return this.constructor.toXDR(this,t);const e=new c;return this.write(this,e),y(e.finalize(),t)}fromXDR(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"raw\";if(!this.read)return this.constructor.fromXDR(t,e);const r=new f(m(t,e)),n=this.read(r);return r.ensureInputConsumed(),n}validateXDR(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"raw\";try{return this.fromXDR(t,e),!0}catch(t){return!1}}static toXDR(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"raw\";const r=new c;return this.write(t,r),y(r.finalize(),e)}static fromXDR(t){const e=new f(m(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"raw\")),r=this.read(e);return e.ensureInputConsumed(),r}static validateXDR(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"raw\";try{return this.fromXDR(t,e),!0}catch(t){return!1}}}class d extends p{static read(t){throw new s}static write(t,e){throw new s}static isValid(t){return!1}}class g extends p{isValid(t){return!1}}class w extends TypeError{constructor(t){super(`Invalid format ${t}, must be one of \"raw\", \"hex\", \"base64\"`)}}function y(t,e){switch(e){case\"raw\":return t;case\"hex\":return t.toString(\"hex\");case\"base64\":return t.toString(\"base64\");default:throw new w(e)}}function m(t,e){switch(e){case\"raw\":return t;case\"hex\":return l.from(t,\"hex\");case\"base64\":return l.from(t,\"base64\");default:throw new w(e)}}const b=2147483647,_=-2147483648;class v extends d{static read(t){return t.readInt32BE()}static write(t,e){if(\"number\"!=typeof t)throw new n(\"not a number\");if((0|t)!==t)throw new n(\"invalid i32 value\");e.writeInt32BE(t)}static isValid(t){return\"number\"==typeof t&&(0|t)===t&&(t>=_&&t<=b)}}v.MAX_VALUE=b,v.MIN_VALUE=2147483648;const E=-9223372036854775808n,B=9223372036854775807n;class I extends d{constructor(t,e){if(super(),\"bigint\"==typeof t){if(t<E||t>B)throw new TypeError(\"Invalid i64 value\");this._value=t}else{if((0|t)!==t||(0|e)!==e)throw new TypeError(\"Invalid i64 value\");this._value=BigInt(e>>>0)<<32n|BigInt(t>>>0)}}get low(){return Number(0xFFFFFFFFn&this._value)<<0}get high(){return Number(this._value>>32n)>>0}get unsigned(){return!1}toString(){return this._value.toString()}toJSON(){return{_value:this._value.toString()}}static read(t){return new I(t.readBigInt64BE())}static write(t,e){if(!(t instanceof this))throw new n(`${t} is not a Hyper`);e.writeBigInt64BE(t._value)}static fromString(t){if(!/^-?\\d{0,19}$/.test(t))throw new TypeError(`Invalid i64 string value: ${t}`);return new I(BigInt(t))}static fromBits(t,e){return new this(t,e)}static isValid(t){return t instanceof this}}I.MAX_VALUE=new I(B),I.MIN_VALUE=new I(E);const A=4294967295;class x extends d{static read(t){return t.readUInt32BE()}static write(t,e){if(\"number\"!=typeof t||!(t>=0&&t<=A)||t%1!=0)throw new n(\"invalid u32 value\");e.writeUInt32BE(t)}static isValid(t){return\"number\"==typeof t&&t%1==0&&(t>=0&&t<=A)}}x.MAX_VALUE=A,x.MIN_VALUE=0;const U=0n,T=0xFFFFFFFFFFFFFFFFn;class R extends d{constructor(t,e){if(super(),\"bigint\"==typeof t){if(t<U||t>T)throw new TypeError(\"Invalid u64 value\");this._value=t}else{if((0|t)!==t||(0|e)!==e)throw new TypeError(\"Invalid u64 value\");this._value=BigInt(e>>>0)<<32n|BigInt(t>>>0)}}get low(){return Number(0xFFFFFFFFn&this._value)<<0}get high(){return Number(this._value>>32n)>>0}get unsigned(){return!0}toString(){return this._value.toString()}toJSON(){return{_value:this._value.toString()}}static read(t){return new R(t.readBigUInt64BE())}static write(t,e){if(!(t instanceof this))throw new n(`${t} is not an UnsignedHyper`);e.writeBigUInt64BE(t._value)}static fromString(t){if(!/^\\d{0,20}$/.test(t))throw new TypeError(`Invalid u64 string value: ${t}`);return new R(BigInt(t))}static fromBits(t,e){return new this(t,e)}static isValid(t){return t instanceof this}}R.MAX_VALUE=new R(T),R.MIN_VALUE=new R(U);class L extends d{static read(t){return t.readFloatBE()}static write(t,e){if(\"number\"!=typeof t)throw new n(\"not a number\");e.writeFloatBE(t)}static isValid(t){return\"number\"==typeof t}}class O extends d{static read(t){return t.readDoubleBE()}static write(t,e){if(\"number\"!=typeof t)throw new n(\"not a number\");e.writeDoubleBE(t)}static isValid(t){return\"number\"==typeof t}}class $ extends d{static read(){throw new o(\"quadruple not supported\")}static write(){throw new o(\"quadruple not supported\")}static isValid(){return!1}}class S extends d{static read(t){const e=v.read(t);switch(e){case 0:return!1;case 1:return!0;default:throw new i(`got ${e} when trying to read a bool`)}}static write(t,e){const r=t?1:0;v.write(r,e)}static isValid(t){return\"boolean\"==typeof t}}var F=r(764).lW;class V extends g{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x.MAX_VALUE;super(),this._maxLength=t}read(t){const e=x.read(t);if(e>this._maxLength)throw new i(`saw ${e} length String, max allowed is ${this._maxLength}`);return t.read(e)}readString(t){return this.read(t).toString(\"utf8\")}write(t,e){const r=\"string\"==typeof t?F.byteLength(t,\"utf8\"):t.length;if(r>this._maxLength)throw new n(`got ${t.length} bytes, max allowed is ${this._maxLength}`);x.write(r,e),e.write(t,r)}isValid(t){return\"string\"==typeof t?F.byteLength(t,\"utf8\")<=this._maxLength:!!(t instanceof Array||F.isBuffer(t))&&t.length<=this._maxLength}}var N=r(764).lW;class M extends g{constructor(t){super(),this._length=t}read(t){return t.read(this._length)}write(t,e){const{length:r}=t;if(r!==this._length)throw new n(`got ${t.length} bytes, expected ${this._length}`);e.write(t,r)}isValid(t){return N.isBuffer(t)&&t.length===this._length}}var C=r(764).lW;class D extends g{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x.MAX_VALUE;super(),this._maxLength=t}read(t){const e=x.read(t);if(e>this._maxLength)throw new i(`saw ${e} length VarOpaque, max allowed is ${this._maxLength}`);return t.read(e)}write(t,e){const{length:r}=t;if(t.length>this._maxLength)throw new n(`got ${t.length} bytes, max allowed is ${this._maxLength}`);x.write(r,e),e.write(t,r)}isValid(t){return C.isBuffer(t)&&t.length<=this._maxLength}}class j extends g{constructor(t,e){super(),this._childType=t,this._length=e}read(t){const e=new r.g.Array(this._length);for(let r=0;r<this._length;r++)e[r]=this._childType.read(t);return e}write(t,e){if(!(t instanceof r.g.Array))throw new n(\"value is not array\");if(t.length!==this._length)throw new n(`got array of size ${t.length}, expected ${this._length}`);for(const r of t)this._childType.write(r,e)}isValid(t){if(!(t instanceof r.g.Array)||t.length!==this._length)return!1;for(const e of t)if(!this._childType.isValid(e))return!1;return!0}}class P extends g{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:x.MAX_VALUE;super(),this._childType=t,this._maxLength=e}read(t){const e=x.read(t);if(e>this._maxLength)throw new i(`saw ${e} length VarArray, max allowed is ${this._maxLength}`);const r=new Array(e);for(let n=0;n<e;n++)r[n]=this._childType.read(t);return r}write(t,e){if(!(t instanceof Array))throw new n(\"value is not array\");if(t.length>this._maxLength)throw new n(`got array of size ${t.length}, max allowed is ${this._maxLength}`);x.write(t.length,e);for(const r of t)this._childType.write(r,e)}isValid(t){if(!(t instanceof Array)||t.length>this._maxLength)return!1;for(const e of t)if(!this._childType.isValid(e))return!1;return!0}}class X extends d{constructor(t){super(),this._childType=t}read(t){if(S.read(t))return this._childType.read(t)}write(t,e){const r=null!=t;S.write(r,e),r&&this._childType.write(t,e)}isValid(t){return null==t||this._childType.isValid(t)}}class k extends d{static read(){}static write(t){if(void 0!==t)throw new n(\"trying to write value to a void slot\")}static isValid(t){return void 0===t}}class z extends d{constructor(t,e){super(),this.name=t,this.value=e}static read(t){const e=v.read(t),r=this._byValue[e];if(void 0===r)throw new i(`unknown ${this.enumName} member for value ${e}`);return r}static write(t,e){if(!(t instanceof this))throw new n(`unknown ${t} is not a ${this.enumName}`);v.write(t.value,e)}static isValid(t){return t instanceof this}static members(){return this._members}static values(){return Object.values(this._members)}static fromName(t){const e=this._members[t];if(!e)throw new TypeError(`${t} is not a member of ${this.enumName}`);return e}static fromValue(t){const e=this._byValue[t];if(void 0===e)throw new TypeError(`${t} is not a value of any member of ${this.enumName}`);return e}static create(t,e,r){const n=class extends z{};n.enumName=e,t.results[e]=n,n._members={},n._byValue={};for(const[t,e]of Object.entries(r)){const r=new n(t,e);n._members[t]=r,n._byValue[e]=r,n[t]=()=>r}return n}}class q extends d{resolve(){throw new o('\"resolve\" method should be implemented in the descendant class')}}class W extends d{constructor(t){super(),this._attributes=t||{}}static read(t){const e={};for(const[r,n]of this._fields)e[r]=n.read(t);return new this(e)}static write(t,e){if(!(t instanceof this))throw new n(`${t} is not a ${this.structName}`);for(const[r,n]of this._fields){const i=t._attributes[r];n.write(i,e)}}static isValid(t){return t instanceof this}static create(t,e,r){const n=class extends W{};n.structName=e,t.results[e]=n;const i=new Array(r.length);for(let e=0;e<r.length;e++){const o=r[e],s=o[0];let u=o[1];u instanceof q&&(u=u.resolve(t)),i[e]=[s,u],n.prototype[s]=G(s)}return n._fields=i,n}}function G(t){return function(e){return void 0!==e&&(this._attributes[t]=e),this._attributes[t]}}class Y extends g{constructor(t,e){super(),this.set(t,e)}set(t,e){\"string\"==typeof t&&(t=this.constructor._switchOn.fromName(t)),this._switch=t;const r=this.constructor.armForSwitch(this._switch);this._arm=r,this._armType=r===k?k:this.constructor._arms[r],this._value=e}get(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._arm;if(this._arm!==k&&this._arm!==t)throw new TypeError(`${t} not set`);return this._value}switch(){return this._switch}arm(){return this._arm}armType(){return this._armType}value(){return this._value}static armForSwitch(t){const e=this._switches.get(t);if(void 0!==e)return e;if(this._defaultArm)return this._defaultArm;throw new TypeError(`Bad union switch: ${t}`)}static armTypeForArm(t){return t===k?k:this._arms[t]}static read(t){const e=this._switchOn.read(t),r=this.armForSwitch(e),n=r===k?k:this._arms[r];let i;return i=void 0!==n?n.read(t):r.read(t),new this(e,i)}static write(t,e){if(!(t instanceof this))throw new n(`${t} is not a ${this.unionName}`);this._switchOn.write(t.switch(),e),t.armType().write(t.value(),e)}static isValid(t){return t instanceof this}static create(t,e,r){const n=class extends Y{};n.unionName=e,t.results[e]=n,r.switchOn instanceof q?n._switchOn=r.switchOn.resolve(t):n._switchOn=r.switchOn,n._switches=new Map,n._arms={};let i=r.defaultArm;i instanceof q&&(i=i.resolve(t)),n._defaultArm=i;for(const[t,e]of r.switches){const r=\"string\"==typeof t?n._switchOn.fromName(t):t;n._switches.set(r,e)}if(void 0!==n._switchOn.values)for(const t of n._switchOn.values())n[t.name]=function(e){return new n(t,e)},n.prototype[t.name]=function(e){return this.set(t,e)};if(r.arms)for(const[e,i]of Object.entries(r.arms))n._arms[e]=i instanceof q?i.resolve(t):i,i!==k&&(n.prototype[e]=function(){return this.get(e)});return n}}class H extends q{constructor(t){super(),this.name=t}resolve(t){return t.definitions[this.name].resolve(t)}}class J extends q{constructor(t,e){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(),this.childReference=t,this.length=e,this.variable=r}resolve(t){let e=this.childReference,r=this.length;return e instanceof q&&(e=e.resolve(t)),r instanceof q&&(r=r.resolve(t)),this.variable?new P(e,r):new j(e,r)}}class Q extends q{constructor(t){super(),this.childReference=t,this.name=t.name}resolve(t){let e=this.childReference;return e instanceof q&&(e=e.resolve(t)),new X(e)}}class Z extends q{constructor(t,e){super(),this.sizedType=t,this.length=e}resolve(t){let e=this.length;return e instanceof q&&(e=e.resolve(t)),new this.sizedType(e)}}class K{constructor(t,e,r){this.constructor=t,this.name=e,this.config=r}resolve(t){return this.name in t.results?t.results[this.name]:this.constructor(t,this.name,this.config)}}function tt(t,e,r){return r instanceof q&&(r=r.resolve(t)),t.results[e]=r,r}function et(t,e,r){return t.results[e]=r,r}class rt{constructor(t){this._destination=t,this._definitions={}}enum(t,e){const r=new K(z.create,t,e);this.define(t,r)}struct(t,e){const r=new K(W.create,t,e);this.define(t,r)}union(t,e){const r=new K(Y.create,t,e);this.define(t,r)}typedef(t,e){const r=new K(tt,t,e);this.define(t,r)}const(t,e){const r=new K(et,t,e);this.define(t,r)}void(){return k}bool(){return S}int(){return v}hyper(){return I}uint(){return x}uhyper(){return R}float(){return L}double(){return O}quadruple(){return $}string(t){return new Z(V,t)}opaque(t){return new Z(M,t)}varOpaque(t){return new Z(D,t)}array(t,e){return new J(t,e)}varArray(t,e){return new J(t,e,!0)}option(t){return new Q(t)}define(t,e){if(void 0!==this._destination[t])throw new o(`${t} is already defined`);this._definitions[t]=e}lookup(t){return new H(t)}resolve(){for(const t of Object.values(this._definitions))t.resolve({definitions:this._definitions,results:this._destination})}}function nt(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(t){const r=new rt(e);t(r),r.resolve()}return e}},742:(t,e)=>{\"use strict\";e.byteLength=function(t){var e=u(t),r=e[0],n=e[1];return 3*(r+n)/4-n},e.toByteArray=function(t){var e,r,o=u(t),s=o[0],f=o[1],h=new i(function(t,e,r){return 3*(e+r)/4-r}(0,s,f)),a=0,c=f>0?s-4:s;for(r=0;r<c;r+=4)e=n[t.charCodeAt(r)]<<18|n[t.charCodeAt(r+1)]<<12|n[t.charCodeAt(r+2)]<<6|n[t.charCodeAt(r+3)],h[a++]=e>>16&255,h[a++]=e>>8&255,h[a++]=255&e;2===f&&(e=n[t.charCodeAt(r)]<<2|n[t.charCodeAt(r+1)]>>4,h[a++]=255&e);1===f&&(e=n[t.charCodeAt(r)]<<10|n[t.charCodeAt(r+1)]<<4|n[t.charCodeAt(r+2)]>>2,h[a++]=e>>8&255,h[a++]=255&e);return h},e.fromByteArray=function(t){for(var e,n=t.length,i=n%3,o=[],s=16383,u=0,h=n-i;u<h;u+=s)o.push(f(t,u,u+s>h?h:u+s));1===i?(e=t[n-1],o.push(r[e>>2]+r[e<<4&63]+\"==\")):2===i&&(e=(t[n-2]<<8)+t[n-1],o.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+\"=\"));return o.join(\"\")};for(var r=[],n=[],i=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",s=0;s<64;++s)r[s]=o[s],n[o.charCodeAt(s)]=s;function u(t){var e=t.length;if(e%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=t.indexOf(\"=\");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function f(t,e,n){for(var i,o,s=[],u=e;u<n;u+=3)i=(t[u]<<16&16711680)+(t[u+1]<<8&65280)+(255&t[u+2]),s.push(r[(o=i)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return s.join(\"\")}n[\"-\".charCodeAt(0)]=62,n[\"_\".charCodeAt(0)]=63},764:(t,e,r)=>{\"use strict\";const n=r(742),i=r(645),o=\"function\"==typeof Symbol&&\"function\"==typeof Symbol.for?Symbol.for(\"nodejs.util.inspect.custom\"):null;e.lW=f,e.h2=50;const s=2147483647;function u(t){if(t>s)throw new RangeError('The value \"'+t+'\" is invalid for option \"size\"');const e=new Uint8Array(t);return Object.setPrototypeOf(e,f.prototype),e}function f(t,e,r){if(\"number\"==typeof t){if(\"string\"==typeof e)throw new TypeError('The \"string\" argument must be of type string. Received type number');return c(t)}return h(t,e,r)}function h(t,e,r){if(\"string\"==typeof t)return function(t,e){\"string\"==typeof e&&\"\"!==e||(e=\"utf8\");if(!f.isEncoding(e))throw new TypeError(\"Unknown encoding: \"+e);const r=0|g(t,e);let n=u(r);const i=n.write(t,e);i!==r&&(n=n.slice(0,i));return n}(t,e);if(ArrayBuffer.isView(t))return function(t){if(H(t,Uint8Array)){const e=new Uint8Array(t);return p(e.buffer,e.byteOffset,e.byteLength)}return l(t)}(t);if(null==t)throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof t);if(H(t,ArrayBuffer)||t&&H(t.buffer,ArrayBuffer))return p(t,e,r);if(\"undefined\"!=typeof SharedArrayBuffer&&(H(t,SharedArrayBuffer)||t&&H(t.buffer,SharedArrayBuffer)))return p(t,e,r);if(\"number\"==typeof t)throw new TypeError('The \"value\" argument must not be of type number. Received type number');const n=t.valueOf&&t.valueOf();if(null!=n&&n!==t)return f.from(n,e,r);const i=function(t){if(f.isBuffer(t)){const e=0|d(t.length),r=u(e);return 0===r.length||t.copy(r,0,0,e),r}if(void 0!==t.length)return\"number\"!=typeof t.length||J(t.length)?u(0):l(t);if(\"Buffer\"===t.type&&Array.isArray(t.data))return l(t.data)}(t);if(i)return i;if(\"undefined\"!=typeof Symbol&&null!=Symbol.toPrimitive&&\"function\"==typeof t[Symbol.toPrimitive])return f.from(t[Symbol.toPrimitive](\"string\"),e,r);throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof t)}function a(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be of type number');if(t<0)throw new RangeError('The value \"'+t+'\" is invalid for option \"size\"')}function c(t){return a(t),u(t<0?0:0|d(t))}function l(t){const e=t.length<0?0:0|d(t.length),r=u(e);for(let n=0;n<e;n+=1)r[n]=255&t[n];return r}function p(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('\"offset\" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('\"length\" is outside of buffer bounds');let n;return n=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r),Object.setPrototypeOf(n,f.prototype),n}function d(t){if(t>=s)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+s.toString(16)+\" bytes\");return 0|t}function g(t,e){if(f.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||H(t,ArrayBuffer))return t.byteLength;if(\"string\"!=typeof t)throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);const r=t.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let i=!1;for(;;)switch(e){case\"ascii\":case\"latin1\":case\"binary\":return r;case\"utf8\":case\"utf-8\":return W(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*r;case\"hex\":return r>>>1;case\"base64\":return G(t).length;default:if(i)return n?-1:W(t).length;e=(\"\"+e).toLowerCase(),i=!0}}function w(t,e,r){let n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return\"\";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return\"\";if((r>>>=0)<=(e>>>=0))return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return L(this,e,r);case\"utf8\":case\"utf-8\":return x(this,e,r);case\"ascii\":return T(this,e,r);case\"latin1\":case\"binary\":return R(this,e,r);case\"base64\":return A(this,e,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return O(this,e,r);default:if(n)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),n=!0}}function y(t,e,r){const n=t[e];t[e]=t[r],t[r]=n}function m(t,e,r,n,i){if(0===t.length)return-1;if(\"string\"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),J(r=+r)&&(r=i?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(r<0){if(!i)return-1;r=0}if(\"string\"==typeof e&&(e=f.from(e,n)),f.isBuffer(e))return 0===e.length?-1:b(t,e,r,n,i);if(\"number\"==typeof e)return e&=255,\"function\"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):b(t,[e],r,n,i);throw new TypeError(\"val must be string, number or Buffer\")}function b(t,e,r,n,i){let o,s=1,u=t.length,f=e.length;if(void 0!==n&&(\"ucs2\"===(n=String(n).toLowerCase())||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(t.length<2||e.length<2)return-1;s=2,u/=2,f/=2,r/=2}function h(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}if(i){let n=-1;for(o=r;o<u;o++)if(h(t,o)===h(e,-1===n?0:o-n)){if(-1===n&&(n=o),o-n+1===f)return n*s}else-1!==n&&(o-=o-n),n=-1}else for(r+f>u&&(r=u-f),o=r;o>=0;o--){let r=!0;for(let n=0;n<f;n++)if(h(t,o+n)!==h(e,n)){r=!1;break}if(r)return o}return-1}function _(t,e,r,n){r=Number(r)||0;const i=t.length-r;n?(n=Number(n))>i&&(n=i):n=i;const o=e.length;let s;for(n>o/2&&(n=o/2),s=0;s<n;++s){const n=parseInt(e.substr(2*s,2),16);if(J(n))return s;t[r+s]=n}return s}function v(t,e,r,n){return Y(W(e,t.length-r),t,r,n)}function E(t,e,r,n){return Y(function(t){const e=[];for(let r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,n)}function B(t,e,r,n){return Y(G(e),t,r,n)}function I(t,e,r,n){return Y(function(t,e){let r,n,i;const o=[];for(let s=0;s<t.length&&!((e-=2)<0);++s)r=t.charCodeAt(s),n=r>>8,i=r%256,o.push(i),o.push(n);return o}(e,t.length-r),t,r,n)}function A(t,e,r){return 0===e&&r===t.length?n.fromByteArray(t):n.fromByteArray(t.slice(e,r))}function x(t,e,r){r=Math.min(t.length,r);const n=[];let i=e;for(;i<r;){const e=t[i];let o=null,s=e>239?4:e>223?3:e>191?2:1;if(i+s<=r){let r,n,u,f;switch(s){case 1:e<128&&(o=e);break;case 2:r=t[i+1],128==(192&r)&&(f=(31&e)<<6|63&r,f>127&&(o=f));break;case 3:r=t[i+1],n=t[i+2],128==(192&r)&&128==(192&n)&&(f=(15&e)<<12|(63&r)<<6|63&n,f>2047&&(f<55296||f>57343)&&(o=f));break;case 4:r=t[i+1],n=t[i+2],u=t[i+3],128==(192&r)&&128==(192&n)&&128==(192&u)&&(f=(15&e)<<18|(63&r)<<12|(63&n)<<6|63&u,f>65535&&f<1114112&&(o=f))}}null===o?(o=65533,s=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),i+=s}return function(t){const e=t.length;if(e<=U)return String.fromCharCode.apply(String,t);let r=\"\",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=U));return r}(n)}f.TYPED_ARRAY_SUPPORT=function(){try{const t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),f.TYPED_ARRAY_SUPPORT||\"undefined\"==typeof console||\"function\"!=typeof console.error||console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"),Object.defineProperty(f.prototype,\"parent\",{enumerable:!0,get:function(){if(f.isBuffer(this))return this.buffer}}),Object.defineProperty(f.prototype,\"offset\",{enumerable:!0,get:function(){if(f.isBuffer(this))return this.byteOffset}}),f.poolSize=8192,f.from=function(t,e,r){return h(t,e,r)},Object.setPrototypeOf(f.prototype,Uint8Array.prototype),Object.setPrototypeOf(f,Uint8Array),f.alloc=function(t,e,r){return function(t,e,r){return a(t),t<=0?u(t):void 0!==e?\"string\"==typeof r?u(t).fill(e,r):u(t).fill(e):u(t)}(t,e,r)},f.allocUnsafe=function(t){return c(t)},f.allocUnsafeSlow=function(t){return c(t)},f.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==f.prototype},f.compare=function(t,e){if(H(t,Uint8Array)&&(t=f.from(t,t.offset,t.byteLength)),H(e,Uint8Array)&&(e=f.from(e,e.offset,e.byteLength)),!f.isBuffer(t)||!f.isBuffer(e))throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;let r=t.length,n=e.length;for(let i=0,o=Math.min(r,n);i<o;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0},f.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},f.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===t.length)return f.alloc(0);let r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;const n=f.allocUnsafe(e);let i=0;for(r=0;r<t.length;++r){let e=t[r];if(H(e,Uint8Array))i+e.length>n.length?(f.isBuffer(e)||(e=f.from(e)),e.copy(n,i)):Uint8Array.prototype.set.call(n,e,i);else{if(!f.isBuffer(e))throw new TypeError('\"list\" argument must be an Array of Buffers');e.copy(n,i)}i+=e.length}return n},f.byteLength=g,f.prototype._isBuffer=!0,f.prototype.swap16=function(){const t=this.length;if(t%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(let e=0;e<t;e+=2)y(this,e,e+1);return this},f.prototype.swap32=function(){const t=this.length;if(t%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(let e=0;e<t;e+=4)y(this,e,e+3),y(this,e+1,e+2);return this},f.prototype.swap64=function(){const t=this.length;if(t%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(let e=0;e<t;e+=8)y(this,e,e+7),y(this,e+1,e+6),y(this,e+2,e+5),y(this,e+3,e+4);return this},f.prototype.toString=function(){const t=this.length;return 0===t?\"\":0===arguments.length?x(this,0,t):w.apply(this,arguments)},f.prototype.toLocaleString=f.prototype.toString,f.prototype.equals=function(t){if(!f.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");return this===t||0===f.compare(this,t)},f.prototype.inspect=function(){let t=\"\";const r=e.h2;return t=this.toString(\"hex\",0,r).replace(/(.{2})/g,\"$1 \").trim(),this.length>r&&(t+=\" ... \"),\"<Buffer \"+t+\">\"},o&&(f.prototype[o]=f.prototype.inspect),f.prototype.compare=function(t,e,r,n,i){if(H(t,Uint8Array)&&(t=f.from(t,t.offset,t.byteLength)),!f.isBuffer(t))throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),e<0||r>t.length||n<0||i>this.length)throw new RangeError(\"out of range index\");if(n>=i&&e>=r)return 0;if(n>=i)return-1;if(e>=r)return 1;if(this===t)return 0;let o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(e>>>=0);const u=Math.min(o,s),h=this.slice(n,i),a=t.slice(e,r);for(let t=0;t<u;++t)if(h[t]!==a[t]){o=h[t],s=a[t];break}return o<s?-1:s<o?1:0},f.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},f.prototype.indexOf=function(t,e,r){return m(this,t,e,r,!0)},f.prototype.lastIndexOf=function(t,e,r){return m(this,t,e,r,!1)},f.prototype.write=function(t,e,r,n){if(void 0===e)n=\"utf8\",r=this.length,e=0;else if(void 0===r&&\"string\"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");e>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n=\"utf8\")):(n=r,r=void 0)}const i=this.length-e;if((void 0===r||r>i)&&(r=i),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");n||(n=\"utf8\");let o=!1;for(;;)switch(n){case\"hex\":return _(this,t,e,r);case\"utf8\":case\"utf-8\":return v(this,t,e,r);case\"ascii\":case\"latin1\":case\"binary\":return E(this,t,e,r);case\"base64\":return B(this,t,e,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return I(this,t,e,r);default:if(o)throw new TypeError(\"Unknown encoding: \"+n);n=(\"\"+n).toLowerCase(),o=!0}},f.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};const U=4096;function T(t,e,r){let n=\"\";r=Math.min(t.length,r);for(let i=e;i<r;++i)n+=String.fromCharCode(127&t[i]);return n}function R(t,e,r){let n=\"\";r=Math.min(t.length,r);for(let i=e;i<r;++i)n+=String.fromCharCode(t[i]);return n}function L(t,e,r){const n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);let i=\"\";for(let n=e;n<r;++n)i+=Q[t[n]];return i}function O(t,e,r){const n=t.slice(e,r);let i=\"\";for(let t=0;t<n.length-1;t+=2)i+=String.fromCharCode(n[t]+256*n[t+1]);return i}function $(t,e,r){if(t%1!=0||t<0)throw new RangeError(\"offset is not uint\");if(t+e>r)throw new RangeError(\"Trying to access beyond buffer length\")}function S(t,e,r,n,i,o){if(!f.isBuffer(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(e>i||e<o)throw new RangeError('\"value\" argument is out of bounds');if(r+n>t.length)throw new RangeError(\"Index out of range\")}function F(t,e,r,n,i){X(e,n,i,t,r,7);let o=Number(e&BigInt(4294967295));t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o;let s=Number(e>>BigInt(32)&BigInt(4294967295));return t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,r}function V(t,e,r,n,i){X(e,n,i,t,r,7);let o=Number(e&BigInt(4294967295));t[r+7]=o,o>>=8,t[r+6]=o,o>>=8,t[r+5]=o,o>>=8,t[r+4]=o;let s=Number(e>>BigInt(32)&BigInt(4294967295));return t[r+3]=s,s>>=8,t[r+2]=s,s>>=8,t[r+1]=s,s>>=8,t[r]=s,r+8}function N(t,e,r,n,i,o){if(r+n>t.length)throw new RangeError(\"Index out of range\");if(r<0)throw new RangeError(\"Index out of range\")}function M(t,e,r,n,o){return e=+e,r>>>=0,o||N(t,0,r,4),i.write(t,e,r,n,23,4),r+4}function C(t,e,r,n,o){return e=+e,r>>>=0,o||N(t,0,r,8),i.write(t,e,r,n,52,8),r+8}f.prototype.slice=function(t,e){const r=this.length;(t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t);const n=this.subarray(t,e);return Object.setPrototypeOf(n,f.prototype),n},f.prototype.readUintLE=f.prototype.readUIntLE=function(t,e,r){t>>>=0,e>>>=0,r||$(t,e,this.length);let n=this[t],i=1,o=0;for(;++o<e&&(i*=256);)n+=this[t+o]*i;return n},f.prototype.readUintBE=f.prototype.readUIntBE=function(t,e,r){t>>>=0,e>>>=0,r||$(t,e,this.length);let n=this[t+--e],i=1;for(;e>0&&(i*=256);)n+=this[t+--e]*i;return n},f.prototype.readUint8=f.prototype.readUInt8=function(t,e){return t>>>=0,e||$(t,1,this.length),this[t]},f.prototype.readUint16LE=f.prototype.readUInt16LE=function(t,e){return t>>>=0,e||$(t,2,this.length),this[t]|this[t+1]<<8},f.prototype.readUint16BE=f.prototype.readUInt16BE=function(t,e){return t>>>=0,e||$(t,2,this.length),this[t]<<8|this[t+1]},f.prototype.readUint32LE=f.prototype.readUInt32LE=function(t,e){return t>>>=0,e||$(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},f.prototype.readUint32BE=f.prototype.readUInt32BE=function(t,e){return t>>>=0,e||$(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},f.prototype.readBigUInt64LE=Z((function(t){k(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||z(t,this.length-8);const n=e+256*this[++t]+65536*this[++t]+this[++t]*2**24,i=this[++t]+256*this[++t]+65536*this[++t]+r*2**24;return BigInt(n)+(BigInt(i)<<BigInt(32))})),f.prototype.readBigUInt64BE=Z((function(t){k(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||z(t,this.length-8);const n=e*2**24+65536*this[++t]+256*this[++t]+this[++t],i=this[++t]*2**24+65536*this[++t]+256*this[++t]+r;return(BigInt(n)<<BigInt(32))+BigInt(i)})),f.prototype.readIntLE=function(t,e,r){t>>>=0,e>>>=0,r||$(t,e,this.length);let n=this[t],i=1,o=0;for(;++o<e&&(i*=256);)n+=this[t+o]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*e)),n},f.prototype.readIntBE=function(t,e,r){t>>>=0,e>>>=0,r||$(t,e,this.length);let n=e,i=1,o=this[t+--n];for(;n>0&&(i*=256);)o+=this[t+--n]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*e)),o},f.prototype.readInt8=function(t,e){return t>>>=0,e||$(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},f.prototype.readInt16LE=function(t,e){t>>>=0,e||$(t,2,this.length);const r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},f.prototype.readInt16BE=function(t,e){t>>>=0,e||$(t,2,this.length);const r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},f.prototype.readInt32LE=function(t,e){return t>>>=0,e||$(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},f.prototype.readInt32BE=function(t,e){return t>>>=0,e||$(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},f.prototype.readBigInt64LE=Z((function(t){k(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||z(t,this.length-8);const n=this[t+4]+256*this[t+5]+65536*this[t+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(e+256*this[++t]+65536*this[++t]+this[++t]*2**24)})),f.prototype.readBigInt64BE=Z((function(t){k(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||z(t,this.length-8);const n=(e<<24)+65536*this[++t]+256*this[++t]+this[++t];return(BigInt(n)<<BigInt(32))+BigInt(this[++t]*2**24+65536*this[++t]+256*this[++t]+r)})),f.prototype.readFloatLE=function(t,e){return t>>>=0,e||$(t,4,this.length),i.read(this,t,!0,23,4)},f.prototype.readFloatBE=function(t,e){return t>>>=0,e||$(t,4,this.length),i.read(this,t,!1,23,4)},f.prototype.readDoubleLE=function(t,e){return t>>>=0,e||$(t,8,this.length),i.read(this,t,!0,52,8)},f.prototype.readDoubleBE=function(t,e){return t>>>=0,e||$(t,8,this.length),i.read(this,t,!1,52,8)},f.prototype.writeUintLE=f.prototype.writeUIntLE=function(t,e,r,n){if(t=+t,e>>>=0,r>>>=0,!n){S(this,t,e,r,Math.pow(2,8*r)-1,0)}let i=1,o=0;for(this[e]=255&t;++o<r&&(i*=256);)this[e+o]=t/i&255;return e+r},f.prototype.writeUintBE=f.prototype.writeUIntBE=function(t,e,r,n){if(t=+t,e>>>=0,r>>>=0,!n){S(this,t,e,r,Math.pow(2,8*r)-1,0)}let i=r-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+r},f.prototype.writeUint8=f.prototype.writeUInt8=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,1,255,0),this[e]=255&t,e+1},f.prototype.writeUint16LE=f.prototype.writeUInt16LE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},f.prototype.writeUint16BE=f.prototype.writeUInt16BE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},f.prototype.writeUint32LE=f.prototype.writeUInt32LE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},f.prototype.writeUint32BE=f.prototype.writeUInt32BE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},f.prototype.writeBigUInt64LE=Z((function(t,e=0){return F(this,t,e,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),f.prototype.writeBigUInt64BE=Z((function(t,e=0){return V(this,t,e,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),f.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);S(this,t,e,r,n-1,-n)}let i=0,o=1,s=0;for(this[e]=255&t;++i<r&&(o*=256);)t<0&&0===s&&0!==this[e+i-1]&&(s=1),this[e+i]=(t/o>>0)-s&255;return e+r},f.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);S(this,t,e,r,n-1,-n)}let i=r-1,o=1,s=0;for(this[e+i]=255&t;--i>=0&&(o*=256);)t<0&&0===s&&0!==this[e+i+1]&&(s=1),this[e+i]=(t/o>>0)-s&255;return e+r},f.prototype.writeInt8=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},f.prototype.writeInt16LE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},f.prototype.writeInt16BE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},f.prototype.writeInt32LE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},f.prototype.writeInt32BE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},f.prototype.writeBigInt64LE=Z((function(t,e=0){return F(this,t,e,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),f.prototype.writeBigInt64BE=Z((function(t,e=0){return V(this,t,e,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),f.prototype.writeFloatLE=function(t,e,r){return M(this,t,e,!0,r)},f.prototype.writeFloatBE=function(t,e,r){return M(this,t,e,!1,r)},f.prototype.writeDoubleLE=function(t,e,r){return C(this,t,e,!0,r)},f.prototype.writeDoubleBE=function(t,e,r){return C(this,t,e,!1,r)},f.prototype.copy=function(t,e,r,n){if(!f.isBuffer(t))throw new TypeError(\"argument should be a Buffer\");if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError(\"targetStart out of bounds\");if(r<0||r>=this.length)throw new RangeError(\"Index out of range\");if(n<0)throw new RangeError(\"sourceEnd out of bounds\");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);const i=n-r;return this===t&&\"function\"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,r,n):Uint8Array.prototype.set.call(t,this.subarray(r,n),e),i},f.prototype.fill=function(t,e,r,n){if(\"string\"==typeof t){if(\"string\"==typeof e?(n=e,e=0,r=this.length):\"string\"==typeof r&&(n=r,r=this.length),void 0!==n&&\"string\"!=typeof n)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof n&&!f.isEncoding(n))throw new TypeError(\"Unknown encoding: \"+n);if(1===t.length){const e=t.charCodeAt(0);(\"utf8\"===n&&e<128||\"latin1\"===n)&&(t=e)}}else\"number\"==typeof t?t&=255:\"boolean\"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<r)throw new RangeError(\"Out of range index\");if(r<=e)return this;let i;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),\"number\"==typeof t)for(i=e;i<r;++i)this[i]=t;else{const o=f.isBuffer(t)?t:f.from(t,n),s=o.length;if(0===s)throw new TypeError('The value \"'+t+'\" is invalid for argument \"value\"');for(i=0;i<r-e;++i)this[i+e]=o[i%s]}return this};const D={};function j(t,e,r){D[t]=class extends r{constructor(){super(),Object.defineProperty(this,\"message\",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(t){Object.defineProperty(this,\"code\",{configurable:!0,enumerable:!0,value:t,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}function P(t){let e=\"\",r=t.length;const n=\"-\"===t[0]?1:0;for(;r>=n+4;r-=3)e=`_${t.slice(r-3,r)}${e}`;return`${t.slice(0,r)}${e}`}function X(t,e,r,n,i,o){if(t>r||t<e){const n=\"bigint\"==typeof e?\"n\":\"\";let i;throw i=o>3?0===e||e===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(o+1)}${n}`:`>= -(2${n} ** ${8*(o+1)-1}${n}) and < 2 ** ${8*(o+1)-1}${n}`:`>= ${e}${n} and <= ${r}${n}`,new D.ERR_OUT_OF_RANGE(\"value\",i,t)}!function(t,e,r){k(e,\"offset\"),void 0!==t[e]&&void 0!==t[e+r]||z(e,t.length-(r+1))}(n,i,o)}function k(t,e){if(\"number\"!=typeof t)throw new D.ERR_INVALID_ARG_TYPE(e,\"number\",t)}function z(t,e,r){if(Math.floor(t)!==t)throw k(t,r),new D.ERR_OUT_OF_RANGE(r||\"offset\",\"an integer\",t);if(e<0)throw new D.ERR_BUFFER_OUT_OF_BOUNDS;throw new D.ERR_OUT_OF_RANGE(r||\"offset\",`>= ${r?1:0} and <= ${e}`,t)}j(\"ERR_BUFFER_OUT_OF_BOUNDS\",(function(t){return t?`${t} is outside of buffer bounds`:\"Attempt to access memory outside buffer bounds\"}),RangeError),j(\"ERR_INVALID_ARG_TYPE\",(function(t,e){return`The \"${t}\" argument must be of type number. Received type ${typeof e}`}),TypeError),j(\"ERR_OUT_OF_RANGE\",(function(t,e,r){let n=`The value of \"${t}\" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>2**32?i=P(String(r)):\"bigint\"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=P(i)),i+=\"n\"),n+=` It must be ${e}. Received ${i}`,n}),RangeError);const q=/[^+/0-9A-Za-z-_]/g;function W(t,e){let r;e=e||1/0;const n=t.length;let i=null;const o=[];for(let s=0;s<n;++s){if(r=t.charCodeAt(s),r>55295&&r<57344){if(!i){if(r>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(e-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(e-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((e-=1)<0)break;o.push(r)}else if(r<2048){if((e-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error(\"Invalid code point\");if((e-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function G(t){return n.toByteArray(function(t){if((t=(t=t.split(\"=\")[0]).trim().replace(q,\"\")).length<2)return\"\";for(;t.length%4!=0;)t+=\"=\";return t}(t))}function Y(t,e,r,n){let i;for(i=0;i<n&&!(i+r>=e.length||i>=t.length);++i)e[i+r]=t[i];return i}function H(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function J(t){return t!=t}const Q=function(){const t=\"0123456789abcdef\",e=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let i=0;i<16;++i)e[n+i]=t[r]+t[i]}return e}();function Z(t){return\"undefined\"==typeof BigInt?K:t}function K(){throw new Error(\"BigInt not supported\")}},645:(t,e)=>{e.read=function(t,e,r,n,i){var o,s,u=8*i-n-1,f=(1<<u)-1,h=f>>1,a=-7,c=r?i-1:0,l=r?-1:1,p=t[e+c];for(c+=l,o=p&(1<<-a)-1,p>>=-a,a+=u;a>0;o=256*o+t[e+c],c+=l,a-=8);for(s=o&(1<<-a)-1,o>>=-a,a+=n;a>0;s=256*s+t[e+c],c+=l,a-=8);if(0===o)o=1-h;else{if(o===f)return s?NaN:1/0*(p?-1:1);s+=Math.pow(2,n),o-=h}return(p?-1:1)*s*Math.pow(2,o-n)},e.write=function(t,e,r,n,i,o){var s,u,f,h=8*o-i-1,a=(1<<h)-1,c=a>>1,l=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,p=n?0:o-1,d=n?1:-1,g=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(u=isNaN(e)?1:0,s=a):(s=Math.floor(Math.log(e)/Math.LN2),e*(f=Math.pow(2,-s))<1&&(s--,f*=2),(e+=s+c>=1?l/f:l*Math.pow(2,1-c))*f>=2&&(s++,f/=2),s+c>=a?(u=0,s=a):s+c>=1?(u=(e*f-1)*Math.pow(2,i),s+=c):(u=e*Math.pow(2,c-1)*Math.pow(2,i),s=0));i>=8;t[r+p]=255&u,p+=d,u/=256,i-=8);for(s=s<<i|u,h+=i;h>0;t[r+p]=255&s,p+=d,s/=256,h-=8);t[r+p-d]|=128*g}}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}return r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(t){if(\"object\"==typeof window)return window}}(),r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r(899)})()));\n//# sourceMappingURL=xdr.js.map","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nmodule.exports = asciiSize;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor;\n\n/**\n * The base implementation of `_.repeat` which doesn't coerce arguments.\n *\n * @private\n * @param {string} string The string to repeat.\n * @param {number} n The number of times to repeat the string.\n * @returns {string} Returns the repeated string.\n */\nfunction baseRepeat(string, n) {\n  var result = '';\n  if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n    return result;\n  }\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n  do {\n    if (n % 2) {\n      result += string;\n    }\n    n = nativeFloor(n / 2);\n    if (n) {\n      string += string;\n    }\n  } while (n);\n\n  return result;\n}\n\nmodule.exports = baseRepeat;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nmodule.exports = charsEndIndex;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var baseRepeat = require('./_baseRepeat'),\n    baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringSize = require('./_stringSize'),\n    stringToArray = require('./_stringToArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\n\n/**\n * Creates the padding for `string` based on `length`. The `chars` string\n * is truncated if the number of characters exceeds `length`.\n *\n * @private\n * @param {number} length The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padding for `string`.\n */\nfunction createPadding(length, chars) {\n  chars = chars === undefined ? ' ' : baseToString(chars);\n\n  var charsLength = chars.length;\n  if (charsLength < 2) {\n    return charsLength ? baseRepeat(chars, length) : chars;\n  }\n  var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n  return hasUnicode(chars)\n    ? castSlice(stringToArray(result), 0, length).join('')\n    : result.slice(0, length);\n}\n\nmodule.exports = createPadding;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var asciiSize = require('./_asciiSize'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeSize = require('./_unicodeSize');\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nmodule.exports = stringSize;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nmodule.exports = unicodeSize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var root = require('./_root');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite;\n\n/**\n * Checks if `value` is a finite primitive number.\n *\n * **Note:** This method is based on\n * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n * @example\n *\n * _.isFinite(3);\n * // => true\n *\n * _.isFinite(Number.MIN_VALUE);\n * // => true\n *\n * _.isFinite(Infinity);\n * // => false\n *\n * _.isFinite('3');\n * // => false\n */\nfunction isFinite(value) {\n  return typeof value == 'number' && nativeIsFinite(value);\n}\n\nmodule.exports = isFinite;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(void 0);\n * // => false\n */\nfunction isNull(value) {\n  return value === null;\n}\n\nmodule.exports = isNull;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var createPadding = require('./_createPadding'),\n    stringSize = require('./_stringSize'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Pads `string` on the right side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padEnd('abc', 6);\n * // => 'abc   '\n *\n * _.padEnd('abc', 6, '_-');\n * // => 'abc_-_'\n *\n * _.padEnd('abc', 3);\n * // => 'abc'\n */\nfunction padEnd(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  return (length && strLength < length)\n    ? (string + createPadding(length - strLength, chars))\n    : string;\n}\n\nmodule.exports = padEnd;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsEndIndex = require('./_charsEndIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString'),\n    trimmedEndIndex = require('./_trimmedEndIndex');\n\n/**\n * Removes trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimEnd('  abc  ');\n * // => '  abc'\n *\n * _.trimEnd('-_-abc-_-', '_-');\n * // => '-_-abc'\n */\nfunction trimEnd(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.slice(0, trimmedEndIndex(string) + 1);\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n  return castSlice(strSymbols, 0, end).join('');\n}\n\nmodule.exports = trimEnd;\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","/* (ignored) */","/*\r\n *      bignumber.js v9.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, P.lt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, P.gt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  function maxOrMin(args, method) {\r\n    var n,\r\n      i = 1,\r\n      m = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      n = new BigNumber(args[i]);\r\n\r\n      // If any number is NaN, return NaN.\r\n      if (!n.s) {\r\n        m = n;\r\n        break;\r\n      } else if (method.call(m, n)) {\r\n        m = n;\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = n / pows10[d - j - 1] % 10 | 0;\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","const crc1 = (current, previous = 0) => {\n    let crc = ~~previous;\n    let accum = 0;\n    for (let index = 0; index < current.length; index++) {\n        accum += current[index];\n    }\n    crc += accum % 256;\n    return crc % 256;\n};\nexport default crc1;\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16 --generate=c`\nlet TABLE = [\n    0x0000, 0xc0c1, 0xc181, 0x0140, 0xc301, 0x03c0, 0x0280, 0xc241, 0xc601, 0x06c0, 0x0780, 0xc741,\n    0x0500, 0xc5c1, 0xc481, 0x0440, 0xcc01, 0x0cc0, 0x0d80, 0xcd41, 0x0f00, 0xcfc1, 0xce81, 0x0e40,\n    0x0a00, 0xcac1, 0xcb81, 0x0b40, 0xc901, 0x09c0, 0x0880, 0xc841, 0xd801, 0x18c0, 0x1980, 0xd941,\n    0x1b00, 0xdbc1, 0xda81, 0x1a40, 0x1e00, 0xdec1, 0xdf81, 0x1f40, 0xdd01, 0x1dc0, 0x1c80, 0xdc41,\n    0x1400, 0xd4c1, 0xd581, 0x1540, 0xd701, 0x17c0, 0x1680, 0xd641, 0xd201, 0x12c0, 0x1380, 0xd341,\n    0x1100, 0xd1c1, 0xd081, 0x1040, 0xf001, 0x30c0, 0x3180, 0xf141, 0x3300, 0xf3c1, 0xf281, 0x3240,\n    0x3600, 0xf6c1, 0xf781, 0x3740, 0xf501, 0x35c0, 0x3480, 0xf441, 0x3c00, 0xfcc1, 0xfd81, 0x3d40,\n    0xff01, 0x3fc0, 0x3e80, 0xfe41, 0xfa01, 0x3ac0, 0x3b80, 0xfb41, 0x3900, 0xf9c1, 0xf881, 0x3840,\n    0x2800, 0xe8c1, 0xe981, 0x2940, 0xeb01, 0x2bc0, 0x2a80, 0xea41, 0xee01, 0x2ec0, 0x2f80, 0xef41,\n    0x2d00, 0xedc1, 0xec81, 0x2c40, 0xe401, 0x24c0, 0x2580, 0xe541, 0x2700, 0xe7c1, 0xe681, 0x2640,\n    0x2200, 0xe2c1, 0xe381, 0x2340, 0xe101, 0x21c0, 0x2080, 0xe041, 0xa001, 0x60c0, 0x6180, 0xa141,\n    0x6300, 0xa3c1, 0xa281, 0x6240, 0x6600, 0xa6c1, 0xa781, 0x6740, 0xa501, 0x65c0, 0x6480, 0xa441,\n    0x6c00, 0xacc1, 0xad81, 0x6d40, 0xaf01, 0x6fc0, 0x6e80, 0xae41, 0xaa01, 0x6ac0, 0x6b80, 0xab41,\n    0x6900, 0xa9c1, 0xa881, 0x6840, 0x7800, 0xb8c1, 0xb981, 0x7940, 0xbb01, 0x7bc0, 0x7a80, 0xba41,\n    0xbe01, 0x7ec0, 0x7f80, 0xbf41, 0x7d00, 0xbdc1, 0xbc81, 0x7c40, 0xb401, 0x74c0, 0x7580, 0xb541,\n    0x7700, 0xb7c1, 0xb681, 0x7640, 0x7200, 0xb2c1, 0xb381, 0x7340, 0xb101, 0x71c0, 0x7080, 0xb041,\n    0x5000, 0x90c1, 0x9181, 0x5140, 0x9301, 0x53c0, 0x5280, 0x9241, 0x9601, 0x56c0, 0x5780, 0x9741,\n    0x5500, 0x95c1, 0x9481, 0x5440, 0x9c01, 0x5cc0, 0x5d80, 0x9d41, 0x5f00, 0x9fc1, 0x9e81, 0x5e40,\n    0x5a00, 0x9ac1, 0x9b81, 0x5b40, 0x9901, 0x59c0, 0x5880, 0x9841, 0x8801, 0x48c0, 0x4980, 0x8941,\n    0x4b00, 0x8bc1, 0x8a81, 0x4a40, 0x4e00, 0x8ec1, 0x8f81, 0x4f40, 0x8d01, 0x4dc0, 0x4c80, 0x8c41,\n    0x4400, 0x84c1, 0x8581, 0x4540, 0x8701, 0x47c0, 0x4680, 0x8641, 0x8201, 0x42c0, 0x4380, 0x8341,\n    0x4100, 0x81c1, 0x8081, 0x4040,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16 = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[(crc ^ current[index]) & 0xff] ^ (crc >> 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16;\n","// Generated by `./pycrc.py --algorithm=table-driven --model=ccitt --generate=c`\nlet TABLE = [\n    0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7, 0x8108, 0x9129, 0xa14a, 0xb16b,\n    0xc18c, 0xd1ad, 0xe1ce, 0xf1ef, 0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6,\n    0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de, 0x2462, 0x3443, 0x0420, 0x1401,\n    0x64e6, 0x74c7, 0x44a4, 0x5485, 0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d,\n    0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4, 0xb75b, 0xa77a, 0x9719, 0x8738,\n    0xf7df, 0xe7fe, 0xd79d, 0xc7bc, 0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,\n    0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b, 0x5af5, 0x4ad4, 0x7ab7, 0x6a96,\n    0x1a71, 0x0a50, 0x3a33, 0x2a12, 0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a,\n    0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41, 0xedae, 0xfd8f, 0xcdec, 0xddcd,\n    0xad2a, 0xbd0b, 0x8d68, 0x9d49, 0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70,\n    0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78, 0x9188, 0x81a9, 0xb1ca, 0xa1eb,\n    0xd10c, 0xc12d, 0xf14e, 0xe16f, 0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,\n    0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e, 0x02b1, 0x1290, 0x22f3, 0x32d2,\n    0x4235, 0x5214, 0x6277, 0x7256, 0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d,\n    0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405, 0xa7db, 0xb7fa, 0x8799, 0x97b8,\n    0xe75f, 0xf77e, 0xc71d, 0xd73c, 0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634,\n    0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab, 0x5844, 0x4865, 0x7806, 0x6827,\n    0x18c0, 0x08e1, 0x3882, 0x28a3, 0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,\n    0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92, 0xfd2e, 0xed0f, 0xdd6c, 0xcd4d,\n    0xbdaa, 0xad8b, 0x9de8, 0x8dc9, 0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1,\n    0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8, 0x6e17, 0x7e36, 0x4e55, 0x5e74,\n    0x2e93, 0x3eb2, 0x0ed1, 0x1ef0,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16ccitt = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[((crc >> 8) ^ current[index]) & 0xff] ^ (crc << 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16ccitt;\n","// Generated by `./pycrc.py --algorithm=table-driven --model=kermit --generate=c`\nlet TABLE = [\n    0x0000, 0x1189, 0x2312, 0x329b, 0x4624, 0x57ad, 0x6536, 0x74bf, 0x8c48, 0x9dc1, 0xaf5a, 0xbed3,\n    0xca6c, 0xdbe5, 0xe97e, 0xf8f7, 0x1081, 0x0108, 0x3393, 0x221a, 0x56a5, 0x472c, 0x75b7, 0x643e,\n    0x9cc9, 0x8d40, 0xbfdb, 0xae52, 0xdaed, 0xcb64, 0xf9ff, 0xe876, 0x2102, 0x308b, 0x0210, 0x1399,\n    0x6726, 0x76af, 0x4434, 0x55bd, 0xad4a, 0xbcc3, 0x8e58, 0x9fd1, 0xeb6e, 0xfae7, 0xc87c, 0xd9f5,\n    0x3183, 0x200a, 0x1291, 0x0318, 0x77a7, 0x662e, 0x54b5, 0x453c, 0xbdcb, 0xac42, 0x9ed9, 0x8f50,\n    0xfbef, 0xea66, 0xd8fd, 0xc974, 0x4204, 0x538d, 0x6116, 0x709f, 0x0420, 0x15a9, 0x2732, 0x36bb,\n    0xce4c, 0xdfc5, 0xed5e, 0xfcd7, 0x8868, 0x99e1, 0xab7a, 0xbaf3, 0x5285, 0x430c, 0x7197, 0x601e,\n    0x14a1, 0x0528, 0x37b3, 0x263a, 0xdecd, 0xcf44, 0xfddf, 0xec56, 0x98e9, 0x8960, 0xbbfb, 0xaa72,\n    0x6306, 0x728f, 0x4014, 0x519d, 0x2522, 0x34ab, 0x0630, 0x17b9, 0xef4e, 0xfec7, 0xcc5c, 0xddd5,\n    0xa96a, 0xb8e3, 0x8a78, 0x9bf1, 0x7387, 0x620e, 0x5095, 0x411c, 0x35a3, 0x242a, 0x16b1, 0x0738,\n    0xffcf, 0xee46, 0xdcdd, 0xcd54, 0xb9eb, 0xa862, 0x9af9, 0x8b70, 0x8408, 0x9581, 0xa71a, 0xb693,\n    0xc22c, 0xd3a5, 0xe13e, 0xf0b7, 0x0840, 0x19c9, 0x2b52, 0x3adb, 0x4e64, 0x5fed, 0x6d76, 0x7cff,\n    0x9489, 0x8500, 0xb79b, 0xa612, 0xd2ad, 0xc324, 0xf1bf, 0xe036, 0x18c1, 0x0948, 0x3bd3, 0x2a5a,\n    0x5ee5, 0x4f6c, 0x7df7, 0x6c7e, 0xa50a, 0xb483, 0x8618, 0x9791, 0xe32e, 0xf2a7, 0xc03c, 0xd1b5,\n    0x2942, 0x38cb, 0x0a50, 0x1bd9, 0x6f66, 0x7eef, 0x4c74, 0x5dfd, 0xb58b, 0xa402, 0x9699, 0x8710,\n    0xf3af, 0xe226, 0xd0bd, 0xc134, 0x39c3, 0x284a, 0x1ad1, 0x0b58, 0x7fe7, 0x6e6e, 0x5cf5, 0x4d7c,\n    0xc60c, 0xd785, 0xe51e, 0xf497, 0x8028, 0x91a1, 0xa33a, 0xb2b3, 0x4a44, 0x5bcd, 0x6956, 0x78df,\n    0x0c60, 0x1de9, 0x2f72, 0x3efb, 0xd68d, 0xc704, 0xf59f, 0xe416, 0x90a9, 0x8120, 0xb3bb, 0xa232,\n    0x5ac5, 0x4b4c, 0x79d7, 0x685e, 0x1ce1, 0x0d68, 0x3ff3, 0x2e7a, 0xe70e, 0xf687, 0xc41c, 0xd595,\n    0xa12a, 0xb0a3, 0x8238, 0x93b1, 0x6b46, 0x7acf, 0x4854, 0x59dd, 0x2d62, 0x3ceb, 0x0e70, 0x1ff9,\n    0xf78f, 0xe606, 0xd49d, 0xc514, 0xb1ab, 0xa022, 0x92b9, 0x8330, 0x7bc7, 0x6a4e, 0x58d5, 0x495c,\n    0x3de3, 0x2c6a, 0x1ef1, 0x0f78,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16kermit = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0x0000;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[(crc ^ current[index]) & 0xff] ^ (crc >> 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16kermit;\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16-modbus --generate=c`\nlet TABLE = [\n    0x0000, 0xc0c1, 0xc181, 0x0140, 0xc301, 0x03c0, 0x0280, 0xc241, 0xc601, 0x06c0, 0x0780, 0xc741,\n    0x0500, 0xc5c1, 0xc481, 0x0440, 0xcc01, 0x0cc0, 0x0d80, 0xcd41, 0x0f00, 0xcfc1, 0xce81, 0x0e40,\n    0x0a00, 0xcac1, 0xcb81, 0x0b40, 0xc901, 0x09c0, 0x0880, 0xc841, 0xd801, 0x18c0, 0x1980, 0xd941,\n    0x1b00, 0xdbc1, 0xda81, 0x1a40, 0x1e00, 0xdec1, 0xdf81, 0x1f40, 0xdd01, 0x1dc0, 0x1c80, 0xdc41,\n    0x1400, 0xd4c1, 0xd581, 0x1540, 0xd701, 0x17c0, 0x1680, 0xd641, 0xd201, 0x12c0, 0x1380, 0xd341,\n    0x1100, 0xd1c1, 0xd081, 0x1040, 0xf001, 0x30c0, 0x3180, 0xf141, 0x3300, 0xf3c1, 0xf281, 0x3240,\n    0x3600, 0xf6c1, 0xf781, 0x3740, 0xf501, 0x35c0, 0x3480, 0xf441, 0x3c00, 0xfcc1, 0xfd81, 0x3d40,\n    0xff01, 0x3fc0, 0x3e80, 0xfe41, 0xfa01, 0x3ac0, 0x3b80, 0xfb41, 0x3900, 0xf9c1, 0xf881, 0x3840,\n    0x2800, 0xe8c1, 0xe981, 0x2940, 0xeb01, 0x2bc0, 0x2a80, 0xea41, 0xee01, 0x2ec0, 0x2f80, 0xef41,\n    0x2d00, 0xedc1, 0xec81, 0x2c40, 0xe401, 0x24c0, 0x2580, 0xe541, 0x2700, 0xe7c1, 0xe681, 0x2640,\n    0x2200, 0xe2c1, 0xe381, 0x2340, 0xe101, 0x21c0, 0x2080, 0xe041, 0xa001, 0x60c0, 0x6180, 0xa141,\n    0x6300, 0xa3c1, 0xa281, 0x6240, 0x6600, 0xa6c1, 0xa781, 0x6740, 0xa501, 0x65c0, 0x6480, 0xa441,\n    0x6c00, 0xacc1, 0xad81, 0x6d40, 0xaf01, 0x6fc0, 0x6e80, 0xae41, 0xaa01, 0x6ac0, 0x6b80, 0xab41,\n    0x6900, 0xa9c1, 0xa881, 0x6840, 0x7800, 0xb8c1, 0xb981, 0x7940, 0xbb01, 0x7bc0, 0x7a80, 0xba41,\n    0xbe01, 0x7ec0, 0x7f80, 0xbf41, 0x7d00, 0xbdc1, 0xbc81, 0x7c40, 0xb401, 0x74c0, 0x7580, 0xb541,\n    0x7700, 0xb7c1, 0xb681, 0x7640, 0x7200, 0xb2c1, 0xb381, 0x7340, 0xb101, 0x71c0, 0x7080, 0xb041,\n    0x5000, 0x90c1, 0x9181, 0x5140, 0x9301, 0x53c0, 0x5280, 0x9241, 0x9601, 0x56c0, 0x5780, 0x9741,\n    0x5500, 0x95c1, 0x9481, 0x5440, 0x9c01, 0x5cc0, 0x5d80, 0x9d41, 0x5f00, 0x9fc1, 0x9e81, 0x5e40,\n    0x5a00, 0x9ac1, 0x9b81, 0x5b40, 0x9901, 0x59c0, 0x5880, 0x9841, 0x8801, 0x48c0, 0x4980, 0x8941,\n    0x4b00, 0x8bc1, 0x8a81, 0x4a40, 0x4e00, 0x8ec1, 0x8f81, 0x4f40, 0x8d01, 0x4dc0, 0x4c80, 0x8c41,\n    0x4400, 0x84c1, 0x8581, 0x4540, 0x8701, 0x47c0, 0x4680, 0x8641, 0x8201, 0x42c0, 0x4380, 0x8341,\n    0x4100, 0x81c1, 0x8081, 0x4040,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16modbus = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[(crc ^ current[index]) & 0xff] ^ (crc >> 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16modbus;\n","const crc16xmodem = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0x0;\n    for (let index = 0; index < current.length; index++) {\n        let code = (crc >>> 8) & 0xff;\n        code ^= current[index] & 0xff;\n        code ^= code >>> 4;\n        crc = (crc << 8) & 0xffff;\n        crc ^= code;\n        code = (code << 5) & 0xffff;\n        crc ^= code;\n        code = (code << 7) & 0xffff;\n        crc ^= code;\n    }\n    return crc;\n};\nexport default crc16xmodem;\n","// Generated by `./pycrc.py --algorithm=table-drive --model=crc-24 --generate=c`\nlet TABLE = [\n    0x000000, 0x864cfb, 0x8ad50d, 0x0c99f6, 0x93e6e1, 0x15aa1a, 0x1933ec, 0x9f7f17, 0xa18139,\n    0x27cdc2, 0x2b5434, 0xad18cf, 0x3267d8, 0xb42b23, 0xb8b2d5, 0x3efe2e, 0xc54e89, 0x430272,\n    0x4f9b84, 0xc9d77f, 0x56a868, 0xd0e493, 0xdc7d65, 0x5a319e, 0x64cfb0, 0xe2834b, 0xee1abd,\n    0x685646, 0xf72951, 0x7165aa, 0x7dfc5c, 0xfbb0a7, 0x0cd1e9, 0x8a9d12, 0x8604e4, 0x00481f,\n    0x9f3708, 0x197bf3, 0x15e205, 0x93aefe, 0xad50d0, 0x2b1c2b, 0x2785dd, 0xa1c926, 0x3eb631,\n    0xb8faca, 0xb4633c, 0x322fc7, 0xc99f60, 0x4fd39b, 0x434a6d, 0xc50696, 0x5a7981, 0xdc357a,\n    0xd0ac8c, 0x56e077, 0x681e59, 0xee52a2, 0xe2cb54, 0x6487af, 0xfbf8b8, 0x7db443, 0x712db5,\n    0xf7614e, 0x19a3d2, 0x9fef29, 0x9376df, 0x153a24, 0x8a4533, 0x0c09c8, 0x00903e, 0x86dcc5,\n    0xb822eb, 0x3e6e10, 0x32f7e6, 0xb4bb1d, 0x2bc40a, 0xad88f1, 0xa11107, 0x275dfc, 0xdced5b,\n    0x5aa1a0, 0x563856, 0xd074ad, 0x4f0bba, 0xc94741, 0xc5deb7, 0x43924c, 0x7d6c62, 0xfb2099,\n    0xf7b96f, 0x71f594, 0xee8a83, 0x68c678, 0x645f8e, 0xe21375, 0x15723b, 0x933ec0, 0x9fa736,\n    0x19ebcd, 0x8694da, 0x00d821, 0x0c41d7, 0x8a0d2c, 0xb4f302, 0x32bff9, 0x3e260f, 0xb86af4,\n    0x2715e3, 0xa15918, 0xadc0ee, 0x2b8c15, 0xd03cb2, 0x567049, 0x5ae9bf, 0xdca544, 0x43da53,\n    0xc596a8, 0xc90f5e, 0x4f43a5, 0x71bd8b, 0xf7f170, 0xfb6886, 0x7d247d, 0xe25b6a, 0x641791,\n    0x688e67, 0xeec29c, 0x3347a4, 0xb50b5f, 0xb992a9, 0x3fde52, 0xa0a145, 0x26edbe, 0x2a7448,\n    0xac38b3, 0x92c69d, 0x148a66, 0x181390, 0x9e5f6b, 0x01207c, 0x876c87, 0x8bf571, 0x0db98a,\n    0xf6092d, 0x7045d6, 0x7cdc20, 0xfa90db, 0x65efcc, 0xe3a337, 0xef3ac1, 0x69763a, 0x578814,\n    0xd1c4ef, 0xdd5d19, 0x5b11e2, 0xc46ef5, 0x42220e, 0x4ebbf8, 0xc8f703, 0x3f964d, 0xb9dab6,\n    0xb54340, 0x330fbb, 0xac70ac, 0x2a3c57, 0x26a5a1, 0xa0e95a, 0x9e1774, 0x185b8f, 0x14c279,\n    0x928e82, 0x0df195, 0x8bbd6e, 0x872498, 0x016863, 0xfad8c4, 0x7c943f, 0x700dc9, 0xf64132,\n    0x693e25, 0xef72de, 0xe3eb28, 0x65a7d3, 0x5b59fd, 0xdd1506, 0xd18cf0, 0x57c00b, 0xc8bf1c,\n    0x4ef3e7, 0x426a11, 0xc426ea, 0x2ae476, 0xaca88d, 0xa0317b, 0x267d80, 0xb90297, 0x3f4e6c,\n    0x33d79a, 0xb59b61, 0x8b654f, 0x0d29b4, 0x01b042, 0x87fcb9, 0x1883ae, 0x9ecf55, 0x9256a3,\n    0x141a58, 0xefaaff, 0x69e604, 0x657ff2, 0xe33309, 0x7c4c1e, 0xfa00e5, 0xf69913, 0x70d5e8,\n    0x4e2bc6, 0xc8673d, 0xc4fecb, 0x42b230, 0xddcd27, 0x5b81dc, 0x57182a, 0xd154d1, 0x26359f,\n    0xa07964, 0xace092, 0x2aac69, 0xb5d37e, 0x339f85, 0x3f0673, 0xb94a88, 0x87b4a6, 0x01f85d,\n    0x0d61ab, 0x8b2d50, 0x145247, 0x921ebc, 0x9e874a, 0x18cbb1, 0xe37b16, 0x6537ed, 0x69ae1b,\n    0xefe2e0, 0x709df7, 0xf6d10c, 0xfa48fa, 0x7c0401, 0x42fa2f, 0xc4b6d4, 0xc82f22, 0x4e63d9,\n    0xd11cce, 0x575035, 0x5bc9c3, 0xdd8538,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc24 = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xb704ce;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[((crc >> 16) ^ current[index]) & 0xff] ^ (crc << 8)) & 0xffffff;\n    }\n    return crc;\n};\nexport default crc24;\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32 --generate=c`\nlet TABLE = [\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc32 = (current, previous) => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    let crc = previous === 0 ? 0 : ~~previous ^ -1;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] ^ (crc >>> 8);\n    }\n    return crc ^ -1;\n};\nexport default crc32;\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32-mpeg --generate=c`\nlet TABLE = [\n    0x00000000, 0x04c11db7, 0x09823b6e, 0x0d4326d9, 0x130476dc, 0x17c56b6b, 0x1a864db2, 0x1e475005,\n    0x2608edb8, 0x22c9f00f, 0x2f8ad6d6, 0x2b4bcb61, 0x350c9b64, 0x31cd86d3, 0x3c8ea00a, 0x384fbdbd,\n    0x4c11db70, 0x48d0c6c7, 0x4593e01e, 0x4152fda9, 0x5f15adac, 0x5bd4b01b, 0x569796c2, 0x52568b75,\n    0x6a1936c8, 0x6ed82b7f, 0x639b0da6, 0x675a1011, 0x791d4014, 0x7ddc5da3, 0x709f7b7a, 0x745e66cd,\n    0x9823b6e0, 0x9ce2ab57, 0x91a18d8e, 0x95609039, 0x8b27c03c, 0x8fe6dd8b, 0x82a5fb52, 0x8664e6e5,\n    0xbe2b5b58, 0xbaea46ef, 0xb7a96036, 0xb3687d81, 0xad2f2d84, 0xa9ee3033, 0xa4ad16ea, 0xa06c0b5d,\n    0xd4326d90, 0xd0f37027, 0xddb056fe, 0xd9714b49, 0xc7361b4c, 0xc3f706fb, 0xceb42022, 0xca753d95,\n    0xf23a8028, 0xf6fb9d9f, 0xfbb8bb46, 0xff79a6f1, 0xe13ef6f4, 0xe5ffeb43, 0xe8bccd9a, 0xec7dd02d,\n    0x34867077, 0x30476dc0, 0x3d044b19, 0x39c556ae, 0x278206ab, 0x23431b1c, 0x2e003dc5, 0x2ac12072,\n    0x128e9dcf, 0x164f8078, 0x1b0ca6a1, 0x1fcdbb16, 0x018aeb13, 0x054bf6a4, 0x0808d07d, 0x0cc9cdca,\n    0x7897ab07, 0x7c56b6b0, 0x71159069, 0x75d48dde, 0x6b93dddb, 0x6f52c06c, 0x6211e6b5, 0x66d0fb02,\n    0x5e9f46bf, 0x5a5e5b08, 0x571d7dd1, 0x53dc6066, 0x4d9b3063, 0x495a2dd4, 0x44190b0d, 0x40d816ba,\n    0xaca5c697, 0xa864db20, 0xa527fdf9, 0xa1e6e04e, 0xbfa1b04b, 0xbb60adfc, 0xb6238b25, 0xb2e29692,\n    0x8aad2b2f, 0x8e6c3698, 0x832f1041, 0x87ee0df6, 0x99a95df3, 0x9d684044, 0x902b669d, 0x94ea7b2a,\n    0xe0b41de7, 0xe4750050, 0xe9362689, 0xedf73b3e, 0xf3b06b3b, 0xf771768c, 0xfa325055, 0xfef34de2,\n    0xc6bcf05f, 0xc27dede8, 0xcf3ecb31, 0xcbffd686, 0xd5b88683, 0xd1799b34, 0xdc3abded, 0xd8fba05a,\n    0x690ce0ee, 0x6dcdfd59, 0x608edb80, 0x644fc637, 0x7a089632, 0x7ec98b85, 0x738aad5c, 0x774bb0eb,\n    0x4f040d56, 0x4bc510e1, 0x46863638, 0x42472b8f, 0x5c007b8a, 0x58c1663d, 0x558240e4, 0x51435d53,\n    0x251d3b9e, 0x21dc2629, 0x2c9f00f0, 0x285e1d47, 0x36194d42, 0x32d850f5, 0x3f9b762c, 0x3b5a6b9b,\n    0x0315d626, 0x07d4cb91, 0x0a97ed48, 0x0e56f0ff, 0x1011a0fa, 0x14d0bd4d, 0x19939b94, 0x1d528623,\n    0xf12f560e, 0xf5ee4bb9, 0xf8ad6d60, 0xfc6c70d7, 0xe22b20d2, 0xe6ea3d65, 0xeba91bbc, 0xef68060b,\n    0xd727bbb6, 0xd3e6a601, 0xdea580d8, 0xda649d6f, 0xc423cd6a, 0xc0e2d0dd, 0xcda1f604, 0xc960ebb3,\n    0xbd3e8d7e, 0xb9ff90c9, 0xb4bcb610, 0xb07daba7, 0xae3afba2, 0xaafbe615, 0xa7b8c0cc, 0xa379dd7b,\n    0x9b3660c6, 0x9ff77d71, 0x92b45ba8, 0x9675461f, 0x8832161a, 0x8cf30bad, 0x81b02d74, 0x857130c3,\n    0x5d8a9099, 0x594b8d2e, 0x5408abf7, 0x50c9b640, 0x4e8ee645, 0x4a4ffbf2, 0x470cdd2b, 0x43cdc09c,\n    0x7b827d21, 0x7f436096, 0x7200464f, 0x76c15bf8, 0x68860bfd, 0x6c47164a, 0x61043093, 0x65c52d24,\n    0x119b4be9, 0x155a565e, 0x18197087, 0x1cd86d30, 0x029f3d35, 0x065e2082, 0x0b1d065b, 0x0fdc1bec,\n    0x3793a651, 0x3352bbe6, 0x3e119d3f, 0x3ad08088, 0x2497d08d, 0x2056cd3a, 0x2d15ebe3, 0x29d4f654,\n    0xc5a92679, 0xc1683bce, 0xcc2b1d17, 0xc8ea00a0, 0xd6ad50a5, 0xd26c4d12, 0xdf2f6bcb, 0xdbee767c,\n    0xe3a1cbc1, 0xe760d676, 0xea23f0af, 0xeee2ed18, 0xf0a5bd1d, 0xf464a0aa, 0xf9278673, 0xfde69bc4,\n    0x89b8fd09, 0x8d79e0be, 0x803ac667, 0x84fbdbd0, 0x9abc8bd5, 0x9e7d9662, 0x933eb0bb, 0x97ffad0c,\n    0xafb010b1, 0xab710d06, 0xa6322bdf, 0xa2f33668, 0xbcb4666d, 0xb8757bda, 0xb5365d03, 0xb1f740b4,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc32mpeg2 = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffffffff;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[((crc >> 24) ^ current[index]) & 0xff] ^ (crc << 8);\n    }\n    return crc;\n};\nexport default crc32mpeg2;\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-8 --generate=c`\nlet TABLE = [\n    0x00, 0x07, 0x0e, 0x09, 0x1c, 0x1b, 0x12, 0x15, 0x38, 0x3f, 0x36, 0x31, 0x24, 0x23, 0x2a, 0x2d,\n    0x70, 0x77, 0x7e, 0x79, 0x6c, 0x6b, 0x62, 0x65, 0x48, 0x4f, 0x46, 0x41, 0x54, 0x53, 0x5a, 0x5d,\n    0xe0, 0xe7, 0xee, 0xe9, 0xfc, 0xfb, 0xf2, 0xf5, 0xd8, 0xdf, 0xd6, 0xd1, 0xc4, 0xc3, 0xca, 0xcd,\n    0x90, 0x97, 0x9e, 0x99, 0x8c, 0x8b, 0x82, 0x85, 0xa8, 0xaf, 0xa6, 0xa1, 0xb4, 0xb3, 0xba, 0xbd,\n    0xc7, 0xc0, 0xc9, 0xce, 0xdb, 0xdc, 0xd5, 0xd2, 0xff, 0xf8, 0xf1, 0xf6, 0xe3, 0xe4, 0xed, 0xea,\n    0xb7, 0xb0, 0xb9, 0xbe, 0xab, 0xac, 0xa5, 0xa2, 0x8f, 0x88, 0x81, 0x86, 0x93, 0x94, 0x9d, 0x9a,\n    0x27, 0x20, 0x29, 0x2e, 0x3b, 0x3c, 0x35, 0x32, 0x1f, 0x18, 0x11, 0x16, 0x03, 0x04, 0x0d, 0x0a,\n    0x57, 0x50, 0x59, 0x5e, 0x4b, 0x4c, 0x45, 0x42, 0x6f, 0x68, 0x61, 0x66, 0x73, 0x74, 0x7d, 0x7a,\n    0x89, 0x8e, 0x87, 0x80, 0x95, 0x92, 0x9b, 0x9c, 0xb1, 0xb6, 0xbf, 0xb8, 0xad, 0xaa, 0xa3, 0xa4,\n    0xf9, 0xfe, 0xf7, 0xf0, 0xe5, 0xe2, 0xeb, 0xec, 0xc1, 0xc6, 0xcf, 0xc8, 0xdd, 0xda, 0xd3, 0xd4,\n    0x69, 0x6e, 0x67, 0x60, 0x75, 0x72, 0x7b, 0x7c, 0x51, 0x56, 0x5f, 0x58, 0x4d, 0x4a, 0x43, 0x44,\n    0x19, 0x1e, 0x17, 0x10, 0x05, 0x02, 0x0b, 0x0c, 0x21, 0x26, 0x2f, 0x28, 0x3d, 0x3a, 0x33, 0x34,\n    0x4e, 0x49, 0x40, 0x47, 0x52, 0x55, 0x5c, 0x5b, 0x76, 0x71, 0x78, 0x7f, 0x6a, 0x6d, 0x64, 0x63,\n    0x3e, 0x39, 0x30, 0x37, 0x22, 0x25, 0x2c, 0x2b, 0x06, 0x01, 0x08, 0x0f, 0x1a, 0x1d, 0x14, 0x13,\n    0xae, 0xa9, 0xa0, 0xa7, 0xb2, 0xb5, 0xbc, 0xbb, 0x96, 0x91, 0x98, 0x9f, 0x8a, 0x8d, 0x84, 0x83,\n    0xde, 0xd9, 0xd0, 0xd7, 0xc2, 0xc5, 0xcc, 0xcb, 0xe6, 0xe1, 0xe8, 0xef, 0xfa, 0xfd, 0xf4, 0xf3,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc8 = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n};\nexport default crc8;\n","// Generated by `./pycrc.py --algorithm=table-driven --model=dallas-1-wire --generate=c`\nlet TABLE = [\n    0x00, 0x5e, 0xbc, 0xe2, 0x61, 0x3f, 0xdd, 0x83, 0xc2, 0x9c, 0x7e, 0x20, 0xa3, 0xfd, 0x1f, 0x41,\n    0x9d, 0xc3, 0x21, 0x7f, 0xfc, 0xa2, 0x40, 0x1e, 0x5f, 0x01, 0xe3, 0xbd, 0x3e, 0x60, 0x82, 0xdc,\n    0x23, 0x7d, 0x9f, 0xc1, 0x42, 0x1c, 0xfe, 0xa0, 0xe1, 0xbf, 0x5d, 0x03, 0x80, 0xde, 0x3c, 0x62,\n    0xbe, 0xe0, 0x02, 0x5c, 0xdf, 0x81, 0x63, 0x3d, 0x7c, 0x22, 0xc0, 0x9e, 0x1d, 0x43, 0xa1, 0xff,\n    0x46, 0x18, 0xfa, 0xa4, 0x27, 0x79, 0x9b, 0xc5, 0x84, 0xda, 0x38, 0x66, 0xe5, 0xbb, 0x59, 0x07,\n    0xdb, 0x85, 0x67, 0x39, 0xba, 0xe4, 0x06, 0x58, 0x19, 0x47, 0xa5, 0xfb, 0x78, 0x26, 0xc4, 0x9a,\n    0x65, 0x3b, 0xd9, 0x87, 0x04, 0x5a, 0xb8, 0xe6, 0xa7, 0xf9, 0x1b, 0x45, 0xc6, 0x98, 0x7a, 0x24,\n    0xf8, 0xa6, 0x44, 0x1a, 0x99, 0xc7, 0x25, 0x7b, 0x3a, 0x64, 0x86, 0xd8, 0x5b, 0x05, 0xe7, 0xb9,\n    0x8c, 0xd2, 0x30, 0x6e, 0xed, 0xb3, 0x51, 0x0f, 0x4e, 0x10, 0xf2, 0xac, 0x2f, 0x71, 0x93, 0xcd,\n    0x11, 0x4f, 0xad, 0xf3, 0x70, 0x2e, 0xcc, 0x92, 0xd3, 0x8d, 0x6f, 0x31, 0xb2, 0xec, 0x0e, 0x50,\n    0xaf, 0xf1, 0x13, 0x4d, 0xce, 0x90, 0x72, 0x2c, 0x6d, 0x33, 0xd1, 0x8f, 0x0c, 0x52, 0xb0, 0xee,\n    0x32, 0x6c, 0x8e, 0xd0, 0x53, 0x0d, 0xef, 0xb1, 0xf0, 0xae, 0x4c, 0x12, 0x91, 0xcf, 0x2d, 0x73,\n    0xca, 0x94, 0x76, 0x28, 0xab, 0xf5, 0x17, 0x49, 0x08, 0x56, 0xb4, 0xea, 0x69, 0x37, 0xd5, 0x8b,\n    0x57, 0x09, 0xeb, 0xb5, 0x36, 0x68, 0x8a, 0xd4, 0x95, 0xcb, 0x29, 0x77, 0xf4, 0xaa, 0x48, 0x16,\n    0xe9, 0xb7, 0x55, 0x0b, 0x88, 0xd6, 0x34, 0x6a, 0x2b, 0x75, 0x97, 0xc9, 0x4a, 0x14, 0xf6, 0xa8,\n    0x74, 0x2a, 0xc8, 0x96, 0x15, 0x4b, 0xa9, 0xf7, 0xb6, 0xe8, 0x0a, 0x54, 0xd7, 0x89, 0x6b, 0x35,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc81wire = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n};\nexport default crc81wire;\n","// Generated by `./pycrc.py --algorithm=table-driven --generate=c --width=8 --poly=0xd5 --reflect-in=false --reflect-out=false --xor-in=0xff --xor-out=0x00`\nlet TABLE = [\n    0x00, 0xd5, 0x7f, 0xaa, 0xfe, 0x2b, 0x81, 0x54, 0x29, 0xfc, 0x56, 0x83, 0xd7, 0x02, 0xa8, 0x7d,\n    0x52, 0x87, 0x2d, 0xf8, 0xac, 0x79, 0xd3, 0x06, 0x7b, 0xae, 0x04, 0xd1, 0x85, 0x50, 0xfa, 0x2f,\n    0xa4, 0x71, 0xdb, 0x0e, 0x5a, 0x8f, 0x25, 0xf0, 0x8d, 0x58, 0xf2, 0x27, 0x73, 0xa6, 0x0c, 0xd9,\n    0xf6, 0x23, 0x89, 0x5c, 0x08, 0xdd, 0x77, 0xa2, 0xdf, 0x0a, 0xa0, 0x75, 0x21, 0xf4, 0x5e, 0x8b,\n    0x9d, 0x48, 0xe2, 0x37, 0x63, 0xb6, 0x1c, 0xc9, 0xb4, 0x61, 0xcb, 0x1e, 0x4a, 0x9f, 0x35, 0xe0,\n    0xcf, 0x1a, 0xb0, 0x65, 0x31, 0xe4, 0x4e, 0x9b, 0xe6, 0x33, 0x99, 0x4c, 0x18, 0xcd, 0x67, 0xb2,\n    0x39, 0xec, 0x46, 0x93, 0xc7, 0x12, 0xb8, 0x6d, 0x10, 0xc5, 0x6f, 0xba, 0xee, 0x3b, 0x91, 0x44,\n    0x6b, 0xbe, 0x14, 0xc1, 0x95, 0x40, 0xea, 0x3f, 0x42, 0x97, 0x3d, 0xe8, 0xbc, 0x69, 0xc3, 0x16,\n    0xef, 0x3a, 0x90, 0x45, 0x11, 0xc4, 0x6e, 0xbb, 0xc6, 0x13, 0xb9, 0x6c, 0x38, 0xed, 0x47, 0x92,\n    0xbd, 0x68, 0xc2, 0x17, 0x43, 0x96, 0x3c, 0xe9, 0x94, 0x41, 0xeb, 0x3e, 0x6a, 0xbf, 0x15, 0xc0,\n    0x4b, 0x9e, 0x34, 0xe1, 0xb5, 0x60, 0xca, 0x1f, 0x62, 0xb7, 0x1d, 0xc8, 0x9c, 0x49, 0xe3, 0x36,\n    0x19, 0xcc, 0x66, 0xb3, 0xe7, 0x32, 0x98, 0x4d, 0x30, 0xe5, 0x4f, 0x9a, 0xce, 0x1b, 0xb1, 0x64,\n    0x72, 0xa7, 0x0d, 0xd8, 0x8c, 0x59, 0xf3, 0x26, 0x5b, 0x8e, 0x24, 0xf1, 0xa5, 0x70, 0xda, 0x0f,\n    0x20, 0xf5, 0x5f, 0x8a, 0xde, 0x0b, 0xa1, 0x74, 0x09, 0xdc, 0x76, 0xa3, 0xf7, 0x22, 0x88, 0x5d,\n    0xd6, 0x03, 0xa9, 0x7c, 0x28, 0xfd, 0x57, 0x82, 0xff, 0x2a, 0x80, 0x55, 0x01, 0xd4, 0x7e, 0xab,\n    0x84, 0x51, 0xfb, 0x2e, 0x7a, 0xaf, 0x05, 0xd0, 0xad, 0x78, 0xd2, 0x07, 0x53, 0x86, 0x2c, 0xf9,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc8dvbs2 = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n};\nexport default crc8dvbs2;\n","// Generated by `./pycrc.py --algorithm=table-driven --model=jam --generate=c`\nlet TABLE = [\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crcjam = (current, previous = -1) => {\n    let crc = previous === 0 ? 0 : ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] ^ (crc >>> 8);\n    }\n    return crc;\n};\nexport default crcjam;\n","import crc1 from './calculators/crc1.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc1', crc1);\n","import crc16 from './calculators/crc16.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-16', crc16);\n","import crc16ccitt from './calculators/crc16ccitt.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('ccitt', crc16ccitt);\n","import crc16kermit from './calculators/crc16kermit.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('kermit', crc16kermit);\n","import crc16modbus from './calculators/crc16modbus.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-16-modbus', crc16modbus);\n","import crc16xmodem from './calculators/crc16xmodem.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('xmodem', crc16xmodem);\n","import crc24 from './calculators/crc24.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-24', crc24);\n","import crc32 from './calculators/crc32.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-32', crc32);\n","import crc32mpeg2 from './calculators/crc32mpeg2.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-32-mpeg', crc32mpeg2);\n","import crc8 from './calculators/crc8.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-8', crc8);\n","import crc81wire from './calculators/crc81wire.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('dallas-1-wire', crc81wire);\n","import crc8dvbs2 from './calculators/crc8dvbs2.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-8-dvbs2', crc8dvbs2);\n","import crcjam from './calculators/crcjam.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('jam', crcjam);\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-prototype-builtins */\nimport { Buffer } from 'buffer';\nconst createBuffer = (value, encoding) => Buffer.from(value, encoding);\nexport default createBuffer;\n","import createBuffer from './create_buffer.js';\nexport default function defineCrc(model, calculator) {\n    const result = (value, previous) => calculator(createBuffer(value), previous) >>> 0;\n    result.signed = (value, previous) => calculator(createBuffer(value), previous);\n    result.unsigned = result;\n    result.model = model;\n    return result;\n}\n","import crc1 from './crc1.js';\nimport crc8 from './crc8.js';\nimport crc81wire from './crc81wire.js';\nimport crc8dvbs2 from './crc8dvbs2.js';\nimport crc16 from './crc16.js';\nimport crc16ccitt from './crc16ccitt.js';\nimport crc16modbus from './crc16modbus.js';\nimport crc16xmodem from './crc16xmodem.js';\nimport crc16kermit from './crc16kermit.js';\nimport crc24 from './crc24.js';\nimport crc32 from './crc32.js';\nimport crc32mpeg2 from './crc32mpeg2.js';\nimport crcjam from './crcjam.js';\nexport { crc1 };\nexport { crc8 };\nexport { crc81wire };\nexport { crc8dvbs2 };\nexport { crc16 };\nexport { crc16ccitt };\nexport { crc16modbus };\nexport { crc16xmodem };\nexport { crc16kermit };\nexport { crc24 };\nexport { crc32 };\nexport { crc32mpeg2 };\nexport { crcjam };\nexport default {\n    crc1,\n    crc8,\n    crc81wire,\n    crc8dvbs2,\n    crc16,\n    crc16ccitt,\n    crc16modbus,\n    crc16xmodem,\n    crc16kermit,\n    crc24,\n    crc32,\n    crc32mpeg2,\n    crcjam,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n",""],"names":["cov_bm0p59jbk","actualCoverage","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","isString","BigNumber","StrKey","Account","accountId","sequence","f","s","isValidMed25519PublicKey","b","Error","isValidEd25519PublicKey","_accountId","value","sequenceNumber","toString","incrementSequenceNumber","plus","cov_1jktlcbul8","clone","padEnd","trimEnd","xdr","Keypair","Asset","code","issuer","test","toLowerCase","console","log","concat","toXDRObject","_toXDRObject","toChangeTrustXDRObject","ChangeTrustAsset","toTrustLineXDRObject","TrustLineAsset","xdrAsset","arguments","isNative","assetTypeNative","xdrType","xdrTypeString","AlphaNum4","AlphaNum12","padLength","paddedCode","assetType","assetCode","fromPublicKey","xdrAccountId","getCode","getIssuer","getAssetType","getRawAssetType","AssetType","assetTypeCreditAlphanum4","assetTypeCreditAlphanum12","equals","asset","native","fromOperation","assetXdr","anum","alphaNum4","alphaNum12","encodeEd25519PublicKey","ed25519","name","compare","assetA","assetB","xdrAtype","xdrBtype","result","asciiCompare","a","len","Math","min","diff","charCodeAt","cov_r8bgkssay","Claimant","destination","predicate","_destination","_predicate","ClaimPredicate","claimPredicateUnconditional","claimant","ClaimantV0","claimantTypeV0","get","set","predicateUnconditional","predicateAnd","left","right","claimPredicateAnd","predicateOr","claimPredicateOr","predicateNot","claimPredicateNot","predicateBeforeAbsoluteTime","absBefore","claimPredicateBeforeAbsoluteTime","Int64","fromString","predicateBeforeRelativeTime","seconds","claimPredicateBeforeRelativeTime","fromXDR","claimantXdr","ClaimantType","v0","cov_2hg7bjtz9p","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","NewTarget","Reflect","construct","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","hash","Transaction","TransactionBase","encodeMuxedAccountToAddress","BrowserBuffer","FeeBumpTransaction","_TransactionBase","_super","envelope","networkPassphrase","_this","buffer","from","TransactionEnvelope","envelopeType","EnvelopeType","envelopeTypeTxFeeBump","txEnvelope","tx","fee","signatures","slice","innerTxEnvelope","envelopeTypeTx","innerTx","v1","_feeSource","feeSource","_innerTransaction","signatureBase","taggedTransaction","TransactionSignaturePayloadTaggedTransaction","txSignature","TransactionSignaturePayload","networkId","Hash","toXDR","toEnvelope","FeeBumpTransactionEnvelope","cov_1racd7g41m","XDR","types","config","typedef","varOpaque","struct","lookup","scpStPrepare","scpStConfirm","scpStExternalize","scpStNominate","varArray","option","union","switchOn","switchName","switches","arms","prepare","confirm","externalize","nominate","opaque","string","assetTypePoolShare","assetCode4","assetCode12","thresholdMasterWeight","thresholdLow","thresholdMed","thresholdHigh","account","trustline","offer","data","claimableBalance","liquidityPool","authRequiredFlag","authRevocableFlag","authImmutableFlag","authClawbackEnabledFlag","v3","v2","authorizedFlag","authorizedToMaintainLiabilitiesFlag","trustlineClawbackEnabledFlag","liquidityPoolConstantProduct","liquidityPoolId","passiveFlag","andPredicates","orPredicates","notPredicate","relBefore","claimableBalanceIdTypeV0","claimableBalanceClawbackEnabledFlag","constantProduct","trustLine","envelopeTypeTxV0","envelopeTypeScp","envelopeTypeAuth","envelopeTypeScpvalue","envelopeTypeOpId","envelopeTypePoolRevokeOpId","stellarValueBasic","stellarValueSigned","lcValueSignature","disableLiquidityPoolTradingFlag","disableLiquidityPoolDepositFlag","disableLiquidityPoolWithdrawalFlag","array","ledgerUpgradeVersion","ledgerUpgradeBaseFee","ledgerUpgradeMaxTxSetSize","ledgerUpgradeBaseReserve","ledgerUpgradeFlags","newLedgerVersion","newBaseFee","newMaxTxSetSize","newBaseReserve","newFlags","metaentry","liveentry","deadentry","initentry","liveEntry","deadEntry","metaEntry","txsetCompTxsMaybeDiscountedFee","txsMaybeDiscountedFee","v0Components","v1TxSet","generalizedTxSet","ledgerEntryCreated","ledgerEntryUpdated","ledgerEntryRemoved","ledgerEntryState","created","updated","removed","state","operations","errMisc","errData","errConf","errAuth","errLoad","iPv4","iPv6","ipv4","ipv6","errorMsg","auth","dontHave","getPeers","peers","getTxSet","txSet","transaction","getScpQuorumset","scpQuorumset","scpMessage","getScpState","hello","surveyRequest","surveyResponse","sendMore","floodAdvert","floodDemand","surveyTopology","topologyResponseBody","error","txSetHash","signedSurveyRequestMessage","signedSurveyResponseMessage","qSetHash","qSet","getScpLedgerSeq","sendMoreMessage","med25519","createAccount","payment","pathPaymentStrictReceive","manageSellOffer","createPassiveSellOffer","setOptions","changeTrust","allowTrust","accountMerge","inflation","manageData","bumpSequence","manageBuyOffer","pathPaymentStrictSend","createClaimableBalance","claimClaimableBalance","beginSponsoringFutureReserves","endSponsoringFutureReserves","revokeSponsorship","clawback","clawbackClaimableBalance","setTrustLineFlags","liquidityPoolDeposit","liquidityPoolWithdraw","revokeSponsorshipLedgerEntry","revokeSponsorshipSigner","ledgerKey","signer","createAccountOp","paymentOp","pathPaymentStrictReceiveOp","manageSellOfferOp","createPassiveSellOfferOp","setOptionsOp","changeTrustOp","allowTrustOp","manageDataOp","bumpSequenceOp","manageBuyOfferOp","pathPaymentStrictSendOp","createClaimableBalanceOp","claimClaimableBalanceOp","beginSponsoringFutureReservesOp","revokeSponsorshipOp","clawbackOp","clawbackClaimableBalanceOp","setTrustLineFlagsOp","liquidityPoolDepositOp","liquidityPoolWithdrawOp","operationId","revokeId","memoNone","memoText","memoId","memoHash","memoReturn","text","id","retHash","precondNone","precondTime","precondV2","timeBounds","feeBump","claimAtomTypeV0","claimAtomTypeOrderBook","claimAtomTypeLiquidityPool","orderBook","createAccountSuccess","createAccountMalformed","createAccountUnderfunded","createAccountLowReserve","createAccountAlreadyExist","paymentSuccess","paymentMalformed","paymentUnderfunded","paymentSrcNoTrust","paymentSrcNotAuthorized","paymentNoDestination","paymentNoTrust","paymentNotAuthorized","paymentLineFull","paymentNoIssuer","pathPaymentStrictReceiveSuccess","pathPaymentStrictReceiveMalformed","pathPaymentStrictReceiveUnderfunded","pathPaymentStrictReceiveSrcNoTrust","pathPaymentStrictReceiveSrcNotAuthorized","pathPaymentStrictReceiveNoDestination","pathPaymentStrictReceiveNoTrust","pathPaymentStrictReceiveNotAuthorized","pathPaymentStrictReceiveLineFull","pathPaymentStrictReceiveNoIssuer","pathPaymentStrictReceiveTooFewOffers","pathPaymentStrictReceiveOfferCrossSelf","pathPaymentStrictReceiveOverSendmax","success","noIssuer","pathPaymentStrictSendSuccess","pathPaymentStrictSendMalformed","pathPaymentStrictSendUnderfunded","pathPaymentStrictSendSrcNoTrust","pathPaymentStrictSendSrcNotAuthorized","pathPaymentStrictSendNoDestination","pathPaymentStrictSendNoTrust","pathPaymentStrictSendNotAuthorized","pathPaymentStrictSendLineFull","pathPaymentStrictSendNoIssuer","pathPaymentStrictSendTooFewOffers","pathPaymentStrictSendOfferCrossSelf","pathPaymentStrictSendUnderDestmin","manageSellOfferSuccess","manageSellOfferMalformed","manageSellOfferSellNoTrust","manageSellOfferBuyNoTrust","manageSellOfferSellNotAuthorized","manageSellOfferBuyNotAuthorized","manageSellOfferLineFull","manageSellOfferUnderfunded","manageSellOfferCrossSelf","manageSellOfferSellNoIssuer","manageSellOfferBuyNoIssuer","manageSellOfferNotFound","manageSellOfferLowReserve","manageOfferCreated","manageOfferUpdated","manageOfferDeleted","manageBuyOfferSuccess","manageBuyOfferMalformed","manageBuyOfferSellNoTrust","manageBuyOfferBuyNoTrust","manageBuyOfferSellNotAuthorized","manageBuyOfferBuyNotAuthorized","manageBuyOfferLineFull","manageBuyOfferUnderfunded","manageBuyOfferCrossSelf","manageBuyOfferSellNoIssuer","manageBuyOfferBuyNoIssuer","manageBuyOfferNotFound","manageBuyOfferLowReserve","setOptionsSuccess","setOptionsLowReserve","setOptionsTooManySigners","setOptionsBadFlags","setOptionsInvalidInflation","setOptionsCantChange","setOptionsUnknownFlag","setOptionsThresholdOutOfRange","setOptionsBadSigner","setOptionsInvalidHomeDomain","setOptionsAuthRevocableRequired","changeTrustSuccess","changeTrustMalformed","changeTrustNoIssuer","changeTrustInvalidLimit","changeTrustLowReserve","changeTrustSelfNotAllowed","changeTrustTrustLineMissing","changeTrustCannotDelete","changeTrustNotAuthMaintainLiabilities","allowTrustSuccess","allowTrustMalformed","allowTrustNoTrustLine","allowTrustTrustNotRequired","allowTrustCantRevoke","allowTrustSelfNotAllowed","allowTrustLowReserve","accountMergeSuccess","accountMergeMalformed","accountMergeNoAccount","accountMergeImmutableSet","accountMergeHasSubEntries","accountMergeSeqnumTooFar","accountMergeDestFull","accountMergeIsSponsor","sourceAccountBalance","inflationSuccess","inflationNotTime","payouts","manageDataSuccess","manageDataNotSupportedYet","manageDataNameNotFound","manageDataLowReserve","manageDataInvalidName","bumpSequenceSuccess","bumpSequenceBadSeq","createClaimableBalanceSuccess","createClaimableBalanceMalformed","createClaimableBalanceLowReserve","createClaimableBalanceNoTrust","createClaimableBalanceNotAuthorized","createClaimableBalanceUnderfunded","balanceId","claimClaimableBalanceSuccess","claimClaimableBalanceDoesNotExist","claimClaimableBalanceCannotClaim","claimClaimableBalanceLineFull","claimClaimableBalanceNoTrust","claimClaimableBalanceNotAuthorized","beginSponsoringFutureReservesSuccess","beginSponsoringFutureReservesMalformed","beginSponsoringFutureReservesAlreadySponsored","beginSponsoringFutureReservesRecursive","endSponsoringFutureReservesSuccess","endSponsoringFutureReservesNotSponsored","revokeSponsorshipSuccess","revokeSponsorshipDoesNotExist","revokeSponsorshipNotSponsor","revokeSponsorshipLowReserve","revokeSponsorshipOnlyTransferable","revokeSponsorshipMalformed","clawbackSuccess","clawbackMalformed","clawbackNotClawbackEnabled","clawbackNoTrust","clawbackUnderfunded","clawbackClaimableBalanceSuccess","clawbackClaimableBalanceDoesNotExist","clawbackClaimableBalanceNotIssuer","clawbackClaimableBalanceNotClawbackEnabled","setTrustLineFlagsSuccess","setTrustLineFlagsMalformed","setTrustLineFlagsNoTrustLine","setTrustLineFlagsCantRevoke","setTrustLineFlagsInvalidState","setTrustLineFlagsLowReserve","liquidityPoolDepositSuccess","liquidityPoolDepositMalformed","liquidityPoolDepositNoTrust","liquidityPoolDepositNotAuthorized","liquidityPoolDepositUnderfunded","liquidityPoolDepositLineFull","liquidityPoolDepositBadPrice","liquidityPoolDepositPoolFull","liquidityPoolWithdrawSuccess","liquidityPoolWithdrawMalformed","liquidityPoolWithdrawNoTrust","liquidityPoolWithdrawUnderfunded","liquidityPoolWithdrawLineFull","liquidityPoolWithdrawUnderMinimum","opInner","opBadAuth","opNoAccount","opNotSupported","opTooManySubentries","opExceededWorkLimit","opTooManySponsoring","createAccountResult","paymentResult","pathPaymentStrictReceiveResult","manageSellOfferResult","createPassiveSellOfferResult","setOptionsResult","changeTrustResult","allowTrustResult","accountMergeResult","inflationResult","manageDataResult","bumpSeqResult","manageBuyOfferResult","pathPaymentStrictSendResult","createClaimableBalanceResult","claimClaimableBalanceResult","beginSponsoringFutureReservesResult","endSponsoringFutureReservesResult","revokeSponsorshipResult","clawbackResult","clawbackClaimableBalanceResult","setTrustLineFlagsResult","liquidityPoolDepositResult","liquidityPoolWithdrawResult","tr","txFeeBumpInnerSuccess","txSuccess","txFailed","txTooEarly","txTooLate","txMissingOperation","txBadSeq","txBadAuth","txInsufficientBalance","txNoAccount","txInsufficientFee","txBadAuthExtra","txInternalError","txNotSupported","txFeeBumpInnerFailed","txBadSponsorship","txBadMinSeqAgeOrGap","txMalformed","results","innerResultPair","uint","uhyper","hyper","keyTypeEd25519","keyTypePreAuthTx","keyTypeHashX","keyTypeEd25519SignedPayload","keyTypeMuxedEd25519","publicKeyTypeEd25519","signerKeyTypeEd25519","signerKeyTypePreAuthTx","signerKeyTypeHashX","signerKeyTypeEd25519SignedPayload","preAuthTx","hashX","ed25519SignedPayload","cov_olekc9ahj","LiquidityPoolFeeV18","getLiquidityPoolId","liquidityPoolType","liquidityPoolParameters","_ref","lpTypeData","LiquidityPoolType","lpParamsData","LiquidityPoolConstantProductParameters","payload","cov_3zv50hsoy","sha256","hasher","update","digest","cov_1xu86k2uqz","DEBUG","sign","verify","FastSigning","UnsignedHyper","Hyper","TransactionBuilder","TimeoutInfinite","BASE_FEE","LiquidityPoolAsset","LiquidityPoolId","Operation","AuthRequiredFlag","AuthRevocableFlag","AuthImmutableFlag","AuthClawbackEnabledFlag","MuxedAccount","Networks","SignerKey","decodeAddressToMuxedAccount","extractBaseAddress","encodeMuxedAccount","module","exports","cov_20palfju0r","nacl","isUndefined","generate","keys","type","secretKey","_secretSeed","_publicKey","_secretKey","publicKey","AccountId","xdrPublicKey","PublicKey","xdrMuxedAccount","MuxedAccountMed25519","Uint64","rawPublicKey","signatureHint","secret","encodeEd25519SecretSeed","rawSecretKey","canSign","signature","signDecorated","DecoratedSignature","signPayloadDecorated","keyHint","alloc","map","byte","fromSecret","rawSecret","decodeEd25519SecretSeed","fromRawEd25519Seed","rawSeed","master","decodeEd25519PublicKey","random","randomBytes","cov_2gv5w16r6d","lpConstantProductParamsXdr","lpParamsXdr","LiquidityPoolParameters","getLiquidityPoolParameters","other","poolId","ctAssetXdr","cov_2glcac2tn0","xdrPoolId","PoolId","tlAssetXdr","cov_sftbodbgn","MemoNone","MemoID","MemoText","MemoHash","MemoReturn","Memo","_type","_value","_validateIdValue","_validateTextValue","_validateHashValue","number","isFinite","isNaN","armTypeForArm","isValid","valueBuffer","isBuffer","none","_return","fromXDRObject","object","arm","cov_1q7w1nhms","baseAccount","_muxedXdr","_mAddress","_id","setId","otherMuxedAccount","fromAddress","mAddress","sequenceNum","muxedAccount","gAddress","cov_u5wyb356h","PUBLIC","TESTNET","cov_1jzfu96gqr","isNumber","best_r","ops","ONE","MAX_INT64","setSourceAccount","opAttributes","opts","source","sourceAccount","operation","attrs","body","operationName","accountIdtoAddress","startingBalance","_fromXDRAmount","amount","sendAsset","sendMax","destAsset","destAmount","path","forEach","pathKey","push","sendAmount","destMin","line","limit","trustor","authorize","inflationDest","clearFlags","setFlags","masterWeight","lowThreshold","medThreshold","highThreshold","homeDomain","ed25519PublicKey","sha256Hash","signedPayload","encodeSignedPayload","weight","selling","buying","price","_fromXDRPrice","offerId","buyAmount","dataName","dataValue","bumpTo","claimants","sponsoredId","extractRevokeSponshipDetails","clears","sets","mapping","authorized","TrustLineFlags","authorizedToMaintainLiabilities","clawbackEnabled","getFlagValue","bit","flags","flagName","maxAmountA","maxAmountB","minPrice","maxPrice","minAmountA","minAmountB","isValidAmount","allowZero","isZero","isNegative","times","gt","decimalPlaces","constructAmountRequirementsError","_checkUnsignedIntValue","isValidFunction","parseFloat","_toXDRAmount","div","toFixed","n","d","_toXDRPrice","xdrObject","Price","approx","parseInt","LedgerEntryType","seller","sellerId","convertXDRSignerKeyToObject","signerKey","SignerKeyType","revokeAccountSponsorship","revokeTrustlineSponsorship","revokeOfferSponsorship","revokeDataSponsorship","revokeClaimableBalanceSponsorship","revokeLiquidityPoolSponsorship","revokeSignerSponsorship","cov_1uth7l1ijc","OperationBody","cov_14qu1rqp4t","attributes","AssetCode","AllowTrustOp","cov_1s00m3zwhz","op","BeginSponsoringFutureReservesOp","cov_15h3wsncx9","BumpSequenceOp","cov_197iwzf589","masterKeypair","changeTrustOP","ChangeTrustOp","cov_1pubez7fch","validateClaimableBalanceId","ClaimableBalanceId","ClaimClaimableBalanceOp","cov_1ddtao17cz","ClawbackOp","cov_23kqwxa76h","ClawbackClaimableBalanceOp","cov_2m6ap3ncdj","CreateAccountOp","cov_yhjh4n7c1","Array","isArray","c","CreateClaimableBalanceOp","cov_22iqqtf8na","CreatePassiveSellOfferOp","cov_uvozezv8q","cov_234jdqj8qv","cov_1k4bjcfd8i","cov_zgqrt77aw","LiquidityPoolDepositOp","cov_2c8eds4ur2","LiquidityPoolWithdrawOp","cov_61jlzuv7m","ManageBuyOfferOp","cov_1lo7tuwyik","ManageDataOp","cov_6lgaovd5z","ManageSellOfferOp","cov_10iaajmhxi","x","PathPaymentStrictReceiveOp","cov_2kklzl05xe","PathPaymentStrictSendOp","cov_1nu7fwkrr9","PaymentOp","cov_2g9vyalfml","LedgerKey","LedgerKeyAccount","RevokeSponsorshipOp","LedgerKeyTrustLine","LedgerKeyOffer","LedgerKeyData","LedgerKeyClaimableBalance","LedgerKeyLiquidityPool","rawKey","RevokeSponsorshipOpSigner","cov_dkdc7d38o","weightCheckFunction","setValues","isValidSignedPayload","decodeSignedPayload","signedPayloadXdr","SignerKeyEd25519SignedPayload","Signer","SetOptionsOp","cov_1pd4gw8hy7","clearFlag","setFlag","hasOwnProperty","flagValue","SetTrustLineFlagsOp","cov_1sqbjacexy","encodeCheck","decodeCheck","decodeAddress","address","signerKeyMap","vb","getVersionByteForPrefix","encoder","raw","encodeSignerKey","strkeyType","cov_2bubcqbflb","actualMethods","checkFastSigning","window","checkFastSigningNode","checkFastSigningBrowser","sodium","require","err","pk","crypto_sign_PUBLICKEYBYTES","sk","crypto_sign_SECRETKEYBYTES","crypto_sign_seed_keypair","crypto_sign_BYTES","crypto_sign_detached","crypto_sign_verify_detached","secretKeyUint8","naclKeys","keyPair","fromSeed","toJSON","detached","cov_2gr7gos3mq","base32","crc","isNull","verifyChecksum","versionBytes","ed25519SecretSeed","med25519PublicKey","strkeyTypes","G","S","M","T","X","P","isValidEd25519SecretSeed","seed","encodeMed25519PublicKey","decodeMed25519PublicKey","encodePreAuthTx","decodePreAuthTx","encodeSha256Hash","decodeSha256Hash","versionByteName","encoded","decoded","decode","versionByte","checksum","encode","expectedVersion","join","expectedChecksum","calculateChecksum","returndata","versionBuffer","unencoded","bold","normal","payloadcopy","crccalc","crc16xmodem","writeUInt16LE","checksum2","calculateChecksum2","crcTable","crc16","lookupIndex","Uint8Array","cov_1wxmir8xki","_envelopeType","_memo","memo","_sequence","seqNum","_source","sourceAccountEd25519","cond","PreconditionType","_timeBounds","minTime","maxTime","ledgerBounds","_ledgerBounds","minLedger","maxLedger","minSeq","minSeqNum","_minAccountSequence","_minAccountSequenceAge","minSeqAge","_minAccountSequenceLedgerGap","minSeqLedgerGap","_extraSigners","extraSigners","_operations","PublicKeyType","rawTx","TransactionV0Envelope","TransactionV0","TransactionV1Envelope","getClaimableBalanceId","opIndex","isInteger","RangeError","HashIdPreimage","HashIdPreimageOperationId","SequenceNumber","opNum","opIdHash","cov_2qrmp2lcrq","_networkPassphrase","_tx","_signatures","_fee","txHash","_len","keypairs","_key","kp","sig","getKeypairSignature","keypair","addSignature","signatureBuffer","addDecoratedSignature","signHashX","preimage","cov_47gaomomq","baseFee","timebounds","ledgerbounds","minAccountSequence","minAccountSequenceAge","minAccountSequenceLedgerGap","addOperation","addMemo","setTimeout","timeoutSeconds","timeoutTimestamp","floor","Date","now","setTimebounds","minEpochOrDate","maxEpochOrDate","setLedgerbounds","setMinAccountSequence","setMinAccountSequenceAge","durationInSeconds","setMinAccountSequenceLedgerGap","gap","setExtraSigners","setNetworkPassphrase","build","toNumber","isValidDate","getTime","TimeBounds","hasV2Preconditions","LedgerBounds","Preconditions","PreconditionsV2","ext","TransactionExt","xtx","buildFeeBumpTransaction","innerOps","innerBaseFeeRate","base","lt","minBaseFee","v0Tx","v1Tx","feeSourceAccount","FeeBumpTransactionInnerTx","FeeBumpTransactionExt","feeBumpTxEnvelope","cov_toyl8h1bc","encodingOrOffset","fill","TextEncoder","ArrayBuffer","offset","end","encoding","fillBuffer","toHex","TextDecoder","toBase64","otherBuffer","every","start","copy","targetBuffer","targetStart","sourceStart","sourceEnd","sourceData","targetEnd","targetData","indexOf","byteOffset","searchBuffer","searchLength","_matchAtIndex","lastIndexOf","index","j","hex","part","binary","byteLength","fromCharCode","btoa","of","items","mapfn","arrayLike","isNodeBuffer","size","list","totalLength","reduce","total","buf","decodeBase64","decodeHex","binaryString","atob","bytes","substr","cov_24znkpe4d4","expected","actual","cov_2hlg4yoewk","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","MAX_INT","rawNumber","fractions","integerValue","ROUND_FLOOR","minus","h","k","eq","_ref2","cov_rw3r7tb9y","_decodeAddressFullyToMuxedAccount","CryptoKeyType","_encodeMuxedAccountFullyToAddress","rawBytes","subarray","muxed","cov_29ypckpr1z"],"sourceRoot":""}